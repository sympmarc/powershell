{
  "articles/authentication.html": {
    "href": "articles/authentication.html",
    "title": "Authentication | PnP PowerShell",
    "keywords": "Authentication Setting up Access PnP PowerShell allows you to authenticate with credentials to your tenant. However, due to changes in the underlying SDKs we require you first to register a Azure AD Application which will allow you to authenticate. The easiest way to do this by using a built-in cmdlet: Register-PnPManagementShellAccess You'll notice that the cmdlet is not called Register-PnPPowerShellAccess . This is because both PnP PowerShell and the CLI for Microsoft 365 make use of this Azure AD application. Important You need to run this cmdlet with an identity that has write access to the Azure AD. You are not creating a new application in the sense of something that runs in your Azure AD tenant. You're only adding a registration to your Azure AD, a so called 'consent' for people in your tenant to use that application. The access rights the application requires are delegate only, so you will always have to provide credentials or another way of identifying the user actually using that application. During execution of the cmdlet you will be talked through the consent flow. This means that a browser window will open, you will be asked to authenticate, and you will be asked to consent to a number of permissions. After this permissions has been granted a new entry will show up if you navigate to Enterprise Applications in your Azure AD. If you want to revoke the consent you can simply remove the entry from the Enterprise Applications. Setting up access to your own Azure AD App PnP PowerShell has a cmdlet that allows you to register a new Azure AD App, and optionally generate the certificates for you to use to login with that app. $result = Register-PnPAzureADApp -ApplicationName \"PnP Rocks\" -Tenant mytenant.onmicrosoft.com -OutPath c:\\mycertificates -DeviceLogin $result When you run the cmdlet above you will be asked to navigate to the shown url and enter the code shown. After that a new app will be registerd in the Azure AD (make sure you have the rights to do this), and a certificate will be generated and uploaded to that app. After this a URL will be shown which you have to navigate to to provide consent for this application. By default a limited set of permissions scopes is added, but you can provide the one of the permission parameters ( GraphApplicationPermissions , GraphDelegatePermissions , SharePointApplicationPermissions , SharePointDelegatePermissions ) to provide your own permission scopes. It also returns the private key certificate encoded in base64 encoding. As it spans multiple lines, it is recommended to assign the outcome of Register-PnPAzureAdApp to a variable so you have access to this value more easily. The Base64 encoded private key certificate can be used in your Connect-PnPOnline voiding the need to have access to the physical file: Connect-PnPOnline -Url \"https://yourtenant.sharepoint.com\" -ClientId [clientid] -Tenant [yourtenant.onmicrosoft.com] -CertificateBase64Encoded [pfx base64 encoded] The cmdlet will also save both the CER and PFX files to the location specified with the -Outpath parameter. The names of the files will be matching the -ApplicationName parameter, e.g. in the example above the files will be called PnP Rocks.cer and PnP Rocks.pfx . The output of the cmdlet will show the clientid. After all is set up and consent has been provided you can login using: Connect-PnPOnline -Url \"https://yourtenant.sharepoint.com\" -ClientId [clientid] -Tenant [yourtenant.onmicrosoft.com] -CertificatePath [certificate.pfx] Authenticating with Credentials Enter Connect-PnPOnline -Url https://contoso.sharepoint.com -Credentials (Get-Credential) and you will be prompted for credentials. Using this method you're required to have granted the PnP Management Shell multi-tenant application access rights. You can however register your own application using Register-PnPAzureAzureApp and then provide the -ClientId parameter with the client id/app id of your custom application. Authenticating with pre-stored credentials using the Windows Credential Manager (Windows only) Add-PnPStoredCredential -Name \"yourlabel\" -Username youruser@domain.com You will be prompted to provide a password. After that you can login using: Connect-PnPOnline -Url https://contoso.sharepoint.com -Credentials \"yourlabel\" When you create the stored credentials (with Add-PnPStoredCredential or any other tool) if the Name you give it is the URL for your tenant you can omit the -Credentials parameter with Connect-PnPOnline. Using the example above create your stored credential with this command: Add-PnPStoredCredential -Name \"https://contoso.sharepoint.com\" -Username youruser@contoso.com When connecting to https://contoso.sharepoint.com you can use this command: Connect-PnPOnline -Url https://contoso.sharepoint.com Connect-PnPOnline will look through the Windows Credential Manager for a credential matching the URL. If it finds one it will use it. It will also match that credential with deeper connection URLs like https://contoso.sharepoint.com/sites/IT . You can create additional stored credentials for deeper sites if you routinely connect to them with different credentials. If you want to connect with a different set of credentials you can use the -Credentials parameter to specify them. A stored credential can be used for other URLs, like the Admin site: Connect-PnPOnline -Url https://contoso-admin.sharepoint.com -Credentials https://contoso.sharepoint.com Authenticating with pre-stored credentials using the Secrets Management Module from Microsoft (Multi-Platform) Install-Module -Name Microsoft.PowerShell.SecretManagement -AllowPrerelease Install-Module -Name Microsoft.PowerShell.SecretStore -AllowPrerelease Set-SecretStoreConfiguration Set-Secret -Name \"yourlabel\" -Secret (Get-Credential) This creates a new secret vault on your computer. You will be asked to provide a password to access the vault. If you access the vault you will be prompted for that password. In case you want to want to write automated scripts you will have to turn off this password prompt as follows: Set-SecretStoreConfiguration -Authentication None For more information about these cmdlets, check out the github repositories: https://github.com/powershell/secretmanagement and https://github.com/powershell/secretstore . After you set up the vault and you added a credential Connect-PnPOnline -Url https://contoso.sharepoint.com -Credentials (Get-Secret -Name \"yourlabel\") Authentication in case you have Multi-Factor authentication enabled Connect-PnPOnline -Url https://contoso.sharepoint.com -Interactive This will show a popup window which will allow to authenticate and step through the multi-factor authentication flow. Authentication to GCC or National Cloud environments In order to authentication to a GCC or a national cloud environment you have to take a few steps. Notice that this will work as of release 1.3.9-nightly or later. Register your own Azure AD App You are required to register your own Azure AD App in order to authentication Register-PnPAzureADApp -ApplicationName \"PnP PowerShell\" -Tenant [yourtenant].onmicrosoft.com -Interactive -AzureEnvironment [USGovernment|USGovernmentHigh|USGovernmentDoD|Germany|China] -SharePointDelegatePermissions AllSites.FullControl -SharePointApplicationPermissions Sites.FullControl.All -GraphApplicationPermissions Group.ReadWrite.All -GraphDelegatePermissions Group.ReadWrite.All The AzureEnvironment parameter only allows one value. Select the correct one that matches your cloud deployment. The above statement grants a few permission scopes. You might want to add more if you want to. Alternatively, after registering the application, navigate to the Azure AD, locate the app registration, and grant more permissions and consent to them. Optionally modify the manifest for the app There is a limitation in the Azure AD for national cloud environments where you cannot select permission scopes for SharePoint Online. In order to add specific SharePoint rights you will have to manually add them to the manifest that you can edit in Azure AD: Locate the requiredResourceAccess section and add to or modify the existing entries. See the example below (notice, this is an example, do not copy and paste this as is as it will limit the permissions to only AllSites.FullControl): \"requiredResourceAccess\": [ { \"resourceAppId\": \"00000003-0000-0ff1-ce00-000000000000\", \"resourceAccess\": [ { \"id\": \"56680e0d-d2a3-4ae1-80d8-3c4f2100e3d0\", \"type\": \"Scope\" } ] } You can add more permissions by using the following values: The resourceAppId for SharePoint = \"00000003-0000-0ff1-ce00-000000000000\" Permission Permission type Id Type Sites.FullControl.All Application 678536fe-1083-478a-9c59-b99265e6b0d3 Role AllSites.FullControl Delegate 56680e0d-d2a3-4ae1-80d8-3c4f2100e3d0 Scope Connect Connect-PnPOnline -Url [yoursite] -Interactive -ClientId [clientid of the app] -Tenant [yourtenant].onmicrosoft.com -AzureEnvironment [USGovernment|USGovernmentHigh|USGovernmentDoD|Germany|China] The AzureEnvironment parameter only allows one value. Select the correct one that matches your cloud deployment."
  },
  "articles/azurecloudshell.html": {
    "href": "articles/azurecloudshell.html",
    "title": "Using PnP PowerShell in Azure Cloud Shell | PnP PowerShell",
    "keywords": "Using PnP PowerShell in Azure Cloud Shell In this article we will explain how to use PnP PowerShell inside Azure Cloud Shell . Using Azure Cloud Shell can come in handy in several scenarios. For example if policies on your local machine block you from installing PowerShell modules, you're behind a proxy which causes problems for your requests or you're on a shared machine which you don't want to pollute. With Azure Cloud Shell you open a PowerShell session which runs within Azure and outputs to you through i.e. a normal web browser via shell.azure.com , Windows Terminal or using any of the growing numbers of locations throughout the Microsoft products where the Azure Cloud Shell icon is visible (Microsoft 365 Admin Center, Teams Admin Center, Azure Portal, etc.). Requirements You need to have access to an Azure Subscription. The usage of Azure Cloud Shell itself is free, however it requires an Azure File Share with Storage Account behind it to store files, which is billed against normal rates. A Visual Studio subscription with Azure Benefits is ideal to use for this. Set up Azure Cloud Shell If you haven't used Azure Cloud Shell yet, follow these steps to get it going: Open a web browser and go to https://shell.azure.com Follow the steps on the screen. When asked to choose between Bash or PowerShell, choose PowerShell. When asked to create a new storage account, use the default or go for advanced if you wish to specify the names of the components yourself. Once done, you should be seeing a blue PowerShell like environment running from your browser. Add PnP PowerShell to your Azure Cloud Shell After completing the steps of the previous paragraph to get Azure Cloud Shell set up for your account, you can now add PnP PowerShell to your environment. You only need to do this once. Every time you return to Azure Cloud Shell, it will still have the module available to be used. You still have to manually update it to a newer version of PnP PowerShell, once one will be released, though, just like locally. In the Azure Cloud Shell, on the prompt, enter Install-Module PnP.PowerShell -AllowPrerelease If asked to confirm that you wish to install the module from an untrusted repository, respond with Y Connecting to your Microsoft 365 Environment from Azure Cloud Shell Not every available option within PnP PowerShell to authenticate will work due to the Azure Cloud Shell not being able to show a visual login screen. Choose below how you will authenticate. By using Device Login Using the Device Login option will allow you to use any browser session on any device to authenticate your Azure Cloud Shell connection attempt. Follow these steps to do so. In Azure Cloud Shell, enter: Connect-PnPOnline https://yourtenant.sharepoint.com -DeviceLogin Open a web browser on any device and navigate to https://microsoft.com/devicelogin Type over or copy/paste the code shown in the yellow area of the Azure Cloud Shell Log in with the account you wish to connect the Azure Cloud Shell with to your Microsoft 365 environment Click on Continue to confirm you are logging on to the PnP Management Shell You can now safely close the browser you have used to perform the device login Return to the Azure Cloud Shell. If it shows the prompt again, you have successfully been signed in to your Microsoft 365 tenant and can now perform PnP PowerShell cmdlets like you're used to. Important There is one final important remark to make. When connecting using the -DeviceLogin option, PnP PowerShell cannot automatically switch to the yourtenant-admin.sharepoint.com context, meaning any cmdlets you try to run that require being connected to the admin portal, will need you to use Connect-PnPOnline https://yourtenant-admin.sharepoint.com -DeviceLogin yourself first to authenticate specifically to the admin site before you can use them."
  },
  "articles/azurefunctions.html": {
    "href": "articles/azurefunctions.html",
    "title": "Using PnP PowerShell in Azure Functions | PnP PowerShell",
    "keywords": "Using PnP PowerShell in Azure Functions In this article we will setup an Azure Function to use PnP PowerShell Important Notice that the Azure Function scripts in this article run in a separate thread/job. We do this because of possible conflicts between assemblies of already loaded PowerShell modules and PnP PowerShell (for instance, the Az cmdlets that get loaded by default use some of the same assemblies as PnP PowerShell but in different versions which can cause conflicts). By running the script in a separate thread we will not have these conflicts. If PnP PowerShell is the only module currently being used and loaded in your Azure Function you don't need the Start-ThreadJob construct and you can simply write the script as usual. Create the function app As the UI in https://portal.azure.com changes every now and then, but the principles stay the same, follow the following steps: Create a new Function App Choose runtime stack PowerShell Core and version 7.0 Select Windows as the operating system or else you will not be able to perform the following steps from your browser. Make PnP PowerShell available to all functions in the app Navigate to App files which is located the left side menu of the function app under the Functions header. In the dropdown presented, select requirements.psd1 . You'll notice that the function app wants to provide the Azure cmdlets. If you do not need those, keep the Az entry presented commented out. Add a new entry or replace the whole contents of the file with: Specific stable version @{ 'PnP.PowerShell' = '1.9.0' } The version that will be installed will be the specified specific build, which is generally recommended. You build and test your Azure Function against this specific PnP PowerShell version. Future releases may work differently and cause issues, therefore it is generally recommended to specify a specific version here. Latest stable version If, for some reason, you would like to ensure it is always using the latest available PnP PowerShell version, you can also specify a wildcard in the version: @{ 'PnP.PowerShell' = '1.*' } This will then automatically download any minor version of the major 1 release when available. Note that wildcards will always take the latest stable version and not the nightly build/prerelease versions. Specific prerelease version If you wish to use a specific prerelease/nightly build version, go to the overview of available versions and literally copy/paste the version in the definition: @{ 'PnP.PowerShell' = '1.9.46-nightly' } Save the requirements.psd1 file If you decide to keep the Az cmdlets commented out, save and edit the profile.psd file. Mark out the following block in the file as follows, if not already done: # if ($env:MSI_SECRET) { # Disable-AzContextAutosave -Scope Process | Out-Null # Connect-AzAccount -Identity # } Save the profile.ps1 file. If you don't do this and enable a managed identity on the Azure Function, it will throw an exception. Decide how you want to authenticate in your PowerShell Function By using Credentials Create your credentials Navigate to Configuration under Settings and create a new Application Setting. Enter tenant_user and enter the username you want to authenticate with as the user Enter tenant_pwd and enter the password you want to use for that user Create the function Create a new function and replace the function code with following example: using namespace System.Net # Input bindings are passed in via param block. param($Request, $TriggerMetadata) # Write to the Azure Functions log stream. Write-Host \"PowerShell HTTP trigger function processed a request.\" $script = { $securePassword = ConvertTo-SecureString $env:tenant_pwd -AsPlainText -Force $credentials = New-Object PSCredential ($env:tenant_user, $securePassword) Connect-PnPOnline -Url https://yourtenant.sharepoint.com/sites/demo -Credentials $credentials $web = Get-PnPWeb; $web.Title } $webTitle = Start-ThreadJob -Script $script | Receive-Job -Wait $body = \"The title of the web is $($webTitle)\" # Associate values to output bindings by calling 'Push-OutputBinding'. Push-OutputBinding -Name Response -Value ([HttpResponseContext]@{ StatusCode = [HttpStatusCode]::OK Body = $body }) In the example above we are retrieving the username and password from the settings as environment variables. We then create a new credentials object which we pass in to the Connect-PnPOnline cmdlet. After connecting to SharePoint we output the title of the web through the function. By using a certificate Create your certificate In this following example we create a new Azure AD Application registration which creates your certificates. You can of course do all this work manually too with your own certificates. $password = Read-Host -Prompt \"Enter certificate password\" -AsSecureString Register-PnPAzureADApp -ApplicationName \"MyDemoApp\" -Tenant [yourtenant.onmicrosoft.com] -CertificatePassword $password -Interactive You will be asked to authenticate. Log in using an account that has the permissions to create an app registration in your Azure Active Directory. After logging in, the following actions will automatically be taken: An app registration will be created using the provided name A self signed certificate will be generated which includes a pfx and a cer file (private/public key pair) The public key of the certificate (cer) will be configured as a valid certificate to authenticate with for the app registration A basic set of permissions will be assigned to the app registration. These can freely be changed at will at a later time. Admin consent will be given to the given set of permissions Make a note of the clientid shown and proceed with the steps in the following section. Apply your certificate Once you have an Azure Active Directory application set up and the public key certificate uploaded to its registration, proceed with configuring the Azure Function to make use of the private key of this certificate pair: In your function app, navigate to TLS/SSL Settings and switch to the Private Key Certificates (.pfx) section. Click Upload Certificate and select the \"MyDemoApp.pfx\" file that has been created for you. Enter the password you used in the script above. 1 After the certificate has been uploaded, copy the thumbprint value shown. 1 Navigate to Configuration and add a new Application Setting Call the setting WEBSITE_LOAD_CERTIFICATES and set the thumbprint as a value. To make all the certificates you uploaded available use * as the value. See https://docs.microsoft.com/azure/app-service/configure-ssl-certificate-in-code for more information. Save the settings Create the Azure Function Create a new function and replace the function code with the following example: using namespace System.Net # Input bindings are passed in via param block. param($Request, $TriggerMetadata) # Write to the Azure Functions log stream. Write-Host \"PowerShell HTTP trigger function processed a request.\" $script = { Connect-PnPOnline -Url https://yourtenant.sharepoint.com/sites/demo -ClientId [the clientid created earlier] -Thumbprint [the thumbprint you copied] -Tenant [yourtenant.onmicrosoft.com] $web = Get-PnPWeb; $web.Title } $webTitle = Start-ThreadJob -Script $script | Receive-Job -Wait $body = \"The title of the web is $($webTitle)\" # Associate values to output bindings by calling 'Push-OutputBinding'. Push-OutputBinding -Name Response -Value ([HttpResponseContext]@{ StatusCode = [HttpStatusCode]::OK Body = $body }) By using a Managed Identity Yet another option is to use a managed identity in Azure to allow your Azure Function to connect to Microsoft Graph using PnP PowerShell. Using this method, you specifically grant permissions for your Azure Function to access these permissions, without having any client secret or certificate pair that potentially could fall into wrong hands. This makes this option the most secure option by far. There is a downside to this approach, however. At present, only permissions can be granted to the Microsoft Graph and not to the SharePoint APIs, which effectively means that most of the PnP PowerShell cmdlets will not work. Only those solely and directly communicating with the Microsoft Graph, will be authorized to work, such as, but not limited to: Get-PnPAzureAdUser , Get-PnPMicrosoft365Group , Get-PnPTeamsTeam . Enabling the managed identity In your Azure Function, in the left menu, go to Identity Ensure you are on the System assigned tab and flip the switch for Status to On Click the save button and confirm your action in the dialog box that will be shown A new entry will now automatically be created in your Azure Active Directory for this app having the same name as your Azure Function and the Object (principal) ID shown on this page. Take notice of the Object (principal) ID. We will need it in the next section to assign permissions to. Assigning Microsoft Graph permissions to the managed identity Next step is to assign permissions to this managed identity so it is authorized to access the Microsoft Graph. Ensure you're having the Azure PowerShell management module installed on your environment. You can install it using: Install-Module Az Connect to the Azure instance where your Azure Function runs and of which you want to use the Microsoft Graph through PnP PowerShell Connect-AzAccount -Tenant <contoso>.onmicrosoft.com Retrieve the Azure AD Service Principal instance for the Microsoft Graph. It should always be AppId 00000003-0000-0000-c000-000000000000. $graphServicePrincipal = Get-AzADServicePrincipal -SearchString \"Microsoft Graph\" | Select-Object -First 1 Using the following PowerShell cmdlet you can list all the possible Microsoft Graph permissions you can give your Azure Function through the Managed Identity. This list will be long. Notice that we are specifically querying for application permissions. Delegate permissions cannot be utilized using a Managed Identity. $graphServicePrincipal.AppRole | Where-Object { $_.AllowedMemberType -eq \"Application\" } Pick a permission which you would like to grant your Azure Function to have towards the Microsoft Graph, i.e. Group.Read.All . $appRole = $graphServicePrincipal.AppRole | Where-Object { $_.AllowedMemberType -eq \"Application\" -and $_.Value -eq \"Group.Read.All\" } Now assign this permission to the Azure Active Directory app registration that has been created automatically by enabling the managed identity on the Azure Function in the steps above: $managedIdentityId = \"<Object (principal) ID of the Azure Function generated in the previous section>\" Add-AzADAppPermission -ObjectId $managedIdentityId -ApiId $graphServicePrincipal.AppId -PermissionId $appRole.Id -Type 'Role' Create the Azure Function Create a new function and replace the function code with the following example: using namespace System.Net param($Request, $TriggerMetadata) Connect-PnPOnline -ManagedIdentity Get-PnPMicrosoft365Group Push-OutputBinding -Name Response -Value ([HttpResponseContext]@{ StatusCode = [HttpStatusCode]::OK }) Notice the super clean and simple Connect-PnPOnline . No identifiers whatsoever need to be provided. Nothing that could fall into wrong hands, no client secret or certificate that could expire. Based on the permissions assigned to the managed identity, it will be able to authenticate and authorize access to the Microsoft Graph APIs used behind the cmdlet to fetch the data."
  },
  "articles/batching.html": {
    "href": "articles/batching.html",
    "title": "Batching in PnP PowerShell | PnP PowerShell",
    "keywords": "Batching in PnP PowerShell Some cmdlets support batching, but there are a few things to point our here. Let me first explain the difference between a normal request and a batched request. Adding items without batching (CSOM) 1..100 | ForEach-Object{ Add-PnPListItem -List \"ItemTest\" -Values @{\"Title\" = \"Test Item $_\"} } If you add a list item with Add-PnPListItem without batching, the following happens behind the scenes: We retrieve the list and make sure we retrieve all the fields used in that list. (a least one request to the server but usually a few more CSOM requests) We add a new item to the list We loop through the values you specified to set on the item and depending on the type of field we format the value ready to be added to the item (this -can- introduce additional CSOM requests in the case of taxonomy fields for instance) We update the item (this will be a CSOM request to the server) All in all you see we make around 6 requests, although the exact number depends a bit on what type of fields you are setting. So if you loop through 100 items, you get at least 600 requests. Adding a item with batching (REST) $batch = New-PnPBatch 1..100 | ForEach-Object{ Add-PnPListItem -List \"ItemTest\" -Values @{\"Title\"=\"Test Item Batched $_\"} -Batch $batch } Invoke-PnPBatch -Batch $batch When you use batching, these number of requests are much lower. This is what happens when you use batching We retrieve the list and make sure we retrieve all the fields used in that list. We then, and that's important, add that list to a cache -in- the batch. That means that every subsequent request for the fields of that list will be coming from the cache. We loop through the values you specified to set on the item. This most of the time does not cause any additional request, with the exception of taxonomy fields. Due to limitations of the REST apis available to use we have to fallback to a CSOM request to format the value. We add the item with the new values to the list (creating a batched request) This means that for every new item there is one request + a few initial request to retrieve the list. Then when you execute Invoke-Batch we will check out how many items there are in the batch and will split them up accordingly to follow the request limits provided. You'll see that large batches are split up in chunks of 100 requests. This means that if you, say add 100 items, you will issue around 6 requests -in total-. Large batches and exceptions Depending on the type of requests you are making batches can be split up in 'chunks'. For instance, if the tasks you perform are towards SharePoint and behind the scenes use the REST api of SharePoint a batch larger then 100 requests will be split up in chunks of 100 requests. When behind the scenes the Microsoft Graph is being called then the batch requests will be split up in chunks of 20 requests. For instance, removing 520 list items will result in 6 separate requests, the first 5 containing 100 remove requests, the last one containing 20 remove requests. If during one of these chunks an exception occurs (for instance you are trying to delete an item that does not exist), by default we will continue processing the remaining batch chunks. If you want to stop processing these remaining batches immediately after an exception occurs, use the -StopOnException switch on Invoke-PnPBatch cmdlet. Cmdlets that support batching The following cmdlets support batching. (This support began with the 1.7.63-nightly release.) All cmdlets which support batching display the badge, linking to this article. Add-PnPListItem Set-PnPListItem Remove-PnPListItem Publish-PnPSyntexModel Unpublish-PnPSyntexModel Request-PnPSyntexClassifyAndExtract"
  },
  "articles/buildingsource.html": {
    "href": "articles/buildingsource.html",
    "title": "Building the project | PnP PowerShell",
    "keywords": "Building the project Make a clone of the repository, navigate to the build folder in the repository and run Build-Debug.ps1 . This will restore all references and copy the required files to the correct location on your computer. Notice that we refer to the nuget package of the PnP.Framework project. As this is rebuilt every night you will receive a new version of the PnP.Framework package every day. If you run on Windows both the .NET Framework and the .NET Core version will be build and installed. If you run on MacOS or Linux only the .NET Core version will be build and installed. Note Unlike the older repository for the legacy version of PowerShell for Windows you do not need to have local clone of the PnP Framework repository anymore (we changed the PnP Sites Core library used under the hood to the PnP Framework repository, see for more info about that library here: https://github.com/pnp/pnpframework ). Folder Structure In the repository you'll find the following folder structure - build - documentation - pages - resources - samples - src/ALC /Commands /Resources /Tests Build folder The build folder contains scripts used to build the project, build the Helpfile, etc. While debugging locally the Build-Debug.ps1 script is the script to use to build the project and copy the correct files to the correct location on your machine. The other build scripts are used in GitHub actions to automate the nightly builds etc. Documentation folder The documentation folder contains the markdown files all describing every single cmdlet available. If you create a new cmdlet we require you to also provide a documentation file. Notice that the documentation files require a front-matters yaml header as specified in the other files. Updated accordingly. Pages folder The pages folder contains the structure which is published to https://pnp.github.io/powershell . We automatically copy the cmdlet documentation in there at build time, but you can create PRs on the 'articles' folder if you want. Resources The resources folder contains an XML file which is copied into the output folder of the build. This file defines how PowerShell should parse and render the objects shown as output from the PnP PowerShell cmdlets src/ALC Due to possible conflicts with already loaded assemblies in PowerShell we create an Assembly Load Context for a specific assembly. See https://docs.microsoft.com/dotnet/core/dependency-loading/understanding-assemblyloadcontext for more information about ALCs. src/Commands This is the main location of all the cmdlet code. src/Resources Any resources used by cmdlets go into this folder src/Tests This is where the the unit/integration tests reside. See Running test for more information. Running against a local copy of the PnP Framework If your code changes require changes to the PnP Framework you might want to use a local version of the PnP Framework which you modified. In order to do this you will need to have both the PnP.PowerShell repository ( https://github.com/pnp/powershell ) and the PnP.Framework repository ( https://github.com/pnp/pnpframework ) locally on your computer. Make sure that both repositories are located at the same folder level. E.g.: c:\\repos\\powershell c:\\repos\\pnpframework Now, build the PnP Framework by navigating to the build folder in the pnpframework folder and run Build-Debug.ps1 . This will compile the PnP Framework. Next, navigate to the build folder of the powershell folder and run Build-Debug.ps1 -LocalPnPFramework . This will compile PnP PowerShell and refer to the -locally- compiled version of the PnP Framework. If you do not specify the -LocalPnPFramework switch it will refer to the latest nightly build available on NuGet.org instead. Running against a local copy of the PnP Core SDK If your code changes require changes to the PnP Core SDK (meaning any of the PnP Core SDK libraries like: PnP.Core, PnP.Core.Auth, PnP.Core.Admin, PnP.Core.Transformation, or PnP.Core.Transformation.SharePoint) you might want to use a local version of the PnP Core SDK which you modified. In order to do this you will need to have both the PnP.PowerShell repository ( https://github.com/pnp/powershell ) and the PnP.Core repository ( https://github.com/pnp/pnpcore ) locally on your computer. Make sure that both repositories are located at the same folder level. E.g.: c:\\repos\\powershell c:\\repos\\pnpcore Now, build the PnP Core SDK by navigating to the build folder in the pnpcore folder and run Build-Debug.ps1 . This will compile the whole PnP Core SDK solution, including PnP.Core.Auth, PnP.Core.Admin, PnP.Core.Transformation, and PnP.Core.Transformation.SharePoint. Next, navigate to the build folder of the powershell folder and run Build-Debug.ps1 -LocalPnPCore . This will compile PnP PowerShell and refer to the -locally- compiled version of the PnP Core SDK. If you do not specify the -LocalPnPCore switch it will refer to the latest nightly build available on NuGet.org instead."
  },
  "articles/configuration.html": {
    "href": "articles/configuration.html",
    "title": "Configure PnP PowerShell | PnP PowerShell",
    "keywords": "Configure PnP PowerShell Environment Variables There are currently two settings that can be set to control the behavior of PnP PowerShell by means of setting environment variables. Disable or Enable version checks Setting the environment variable PNPPOWERSHELL_UPDATECHECK to false or off , i.e. by using $env:PNPPOWERSHELL_UPDATECHECK=off , will disable the version check which is occuring when executing Connect-PnPOnline . Setting it to any other value will enable it. Notice that this version check will only occur once during a PowerShell session. If you close PowerShell and reopen it, the version will be checked again. Disable or Enable telemetry By default PnP PowerShell will report its usage anonymously to the PnP team. We collection information about the version of PnP PowerShell , the operation system version and the cmdlet executed. Notice that we will not include parameters used and we will not include any values of parameters. This allows us to get insight in the usage of cmdlets. To disable telemetry, set the PNPPOWERSHELL_DISABLETELEMETRY environment variable to true , i.e. by using $env:PNPPOWERSHELL_DISABLETELEMETRY=$true . Alternatively, you can create an empty file called .pnppowershelltelemetry inside your home directory ( $env:UserProfile on Windows, $env:HOME on Linux) not needing any content inside of the file to disable telemetry. To query if in a connected PnP PowerShell session the telemetry is enabled, use Get-PnPPowerShellTelemetryEnabled ."
  },
  "articles/connecting.html": {
    "href": "articles/connecting.html",
    "title": "Connecting with PnP PowerShell | PnP PowerShell",
    "keywords": "Connecting with PnP PowerShell PnP PowerShell offers many ways to connect to an environment. This page provides guidance on the various options you have and how they can be used against which environment(s). Connect using credentials In order to connect with credentials you have two options: Connect by using the PnP Management Shell Multi-Tenant Azure AD Application You will have to consent / register the PnP Management Shell Multi-Tenant Azure AD Application in your own tenant: Register-PnPManagementShellAccess This will launch a device login flow that will ask you to consent to the application. Notice that is only required -once- per tenant. You will need to have appropriate access rights to be able to consent applications in your Azure AD. After that you can authenticate using Connect-PnPOnline -Url https://[yourtenant].sharepoint.com -Credentials (Get-Credential) or in case the account you would like to use has MFA or any other authentication provider configured for it, instead use: Connect-PnPOnline -Url https://[yourtenant].sharepoint.com -Interactive Connect by using your own Azure AD Application You will have to create your own Azure AD Application registration, or you can create one: Register-PnPAzureADApp -ApplicationName \"YourApplicationName\" -Tenant [yourtenant.onmicrosoft.com] -Interactive This will launch a authentication dialog where you need to authenticate. After closing this window the cmdlet will continue to register a new application with a set of default permissions. By default a certificate will be generated and stored in the current folder, named after the application you want to create. You can specify your own certificate by using the -CertificatePath parameter and optional -CertificatePassword parameter. You can add permissions by using the -GraphApplicationPermissions , -GraphDelegatePermissions , -SharePointApplicationPermissions or -SharePointDelegatePermissions parameters. The cmdlet will output the Azure AppId/client id, the name and location of the certificates created (if any) and the thumbprint of the certificate. It is possible to add the certificate created to the certificate management store in Windows by adding the -Store parameter. Note if you are using Credential Based Authentication, you will need to make a change to the app registration manifest file. Go to the app registration, select Manifest under the Manage section, then change the \"allowPublicClient\" property to true and click save. Connect-PnPOnline -Url \"https://[yourtenant.sharepoint.com] -Credentials (Get-Credential) -ClientId [clientid] Connect interactively using WebLogin supporting MFA One of the easiest methods to use. However, notice that this connection method will have its limitation as we will utility cookie based authentication. For instance, we will not be able to make calls to the Microsoft Graph behind the scenes. Connect-PnPOnline -Url https://tenant.sharepoint.com -UseWebLogin Connect using a ClientId and PFX certificate stored on your local machine Allows using an Azure Active Directory app registration from your own Azure Active Directory with a certificate to connect. The private key certificate, typically the .pfx file, should be accessible on your local machine. The following will generate an Azure AD Application registration and create a certificate containing a public and private key. $password = ConvertTo-SecureString -String \"password\" -AsPlainText -Force Register-PnPAzureADApp -ApplicationName \"PnPPowerShell\" -Tenant yourtenant.onmicrosoft.com You will be asked to authenticate. After that the cmdlet will generate two files, PnPPowerShell.pfx and PnPPowerShell.cer and a new Azure AD Application will be registered with the specified name. The public key/CER file will be uploaded and registered with the newly create application registration. You will have to use the .pfx file to connect. Notice that the Register-PnPAzureADApp cmdlet only have to be executed once per tenant/application. Connect-PnPOnline -ClientId fa1a81f1-e729-44d8-bb71-0a0c339c0f62 -Url \"https://tenant.sharepoint.com\" -Tenant tenant.onmicrosoft.com -CertificatePath '.\\PnPPowerShell.pfx' Connect using a ClientId and PFX certificate stored in the Windows Certificate Management Store Allows using an Azure Active Directory app registration from your own Azure Active Directory with a certificate to connect. The private key certificate, typically the .pfx file, should be accessible on your local machine in the Certificate Management Store. The following will generate an Azure AD Application registration and create a certificate containing a public and private key which will be stored for the current user in the Windows Certificate Management Store. $password = ConvertTo-SecureString -String \"password\" -AsPlainText -Force Register-PnPAzureADApp -ApplicationName \"PnPPowerShell\" -Tenant yourtenant.onmicrosoft.com -Store CurrentUser You will be asked to authenticate. After that the cmdlet will generate a certificate and will store it in the Windows Certificate Management Store and a new Azure AD Application will be registered with the specified name. The public key of the certificate file will be uploaded and registered with the newly create application registration. Notice that the Register-PnPAzureADApp cmdlet only have to be executed once per tenant/application. The output of the cmdlet contains the thumbprint to use. Connect-PnPOnline -ClientId fa1a81f1-e729-44d8-bb71-0a0c339c0f62 -Url \"https://tenant.sharepoint.com\" -Tenant tenant.onmicrosoft.com -Thumbprint $thumbprint Connect using a ClientId and PFX certificate being Base64 encoded In some scenarios it might be easier to have the PFX file being encoded as a string using Base64 as opposed to having to store the physical PFX file somewhere. If you have the PFX encoded using Base64 encoding, you can connect using: Connect-PnPOnline -ClientId fa1a81f1-e729-44d8-bb71-0a0c339c0f62 -Url \"https://tenant.sharepoint.com\" -Tenant tenant.onmicrosoft.com -CertificateBase64Encoded $encodedPfx If you wish to convert a PFX file to its Base64 encoded equivallent, you can use: $bytes = Get-Content '.\\PnPPowerShell.pfx' -AsByteStream $encodedPfx = [System.Convert]::ToBase64String($bytes) Connect to a National Cloud Deployment (GCC/Germany/China) If you are on a National Cloud instance, read the authentication article for more information"
  },
  "articles/credentialmanagement.html": {
    "href": "articles/credentialmanagement.html",
    "title": "Credential Management | PnP PowerShell",
    "keywords": "Credential Management PnP PowerShell is the ultimate library to execute cmdlets unattended in scripts, Azure Functions or Azure Automation. However, in order to automate authentication you need to safely store these credentials. You should -never- store them in your scripts. We currently recommend the Microsoft provided Secret Management and Secret Store modules to set up a vault which PnP PowerShell can use to store and retrieve credentials. Install the required modules Install-Module -Name \"Microsoft.PowerShell.SecretManagement\" -AllowPrerelease Install-Module -Name \"Microsoft.PowerShell.SecretStore\" -AllowPrerelease Configuring the vault After installing the module, create and register a vault: Register-SecretVault -Name \"SecretStore\" -ModuleName \"Microsoft.PowerShell.SecretStore\" -DefaultVault Set-SecretStoreConfiguration -Authentication None The last cmdlet, where you set the authentication to None means that you will allow access to the secret store without requiring you to enter a password to unlock the vault. This is optional. Notice that you will be asked several times to provide a password the moment you create a new vault. If you intend to use the native out of the box functionality of PnP PowerShell with the Secret Management modules, notice that the authentication is required to set to None . Adding a secret Secret Management Module Set-Secret -Name [yourlabel] -Secret (Get-Credential) PnP PowerShell Add-PnPStoredCredential -Name [yourlabel] -Username [username] You will be prompted to provide a password. Retrieving a secret Secret Management Module Connect-PnPOnline -Url https://yourtenant.sharepoint.com -Credentials (Get-Secret -Name [yourlabel]) PnP PowerShell Connect-PnPOnline -Url https://yourtenant.sharepoint.com -Credentials [yourlabel] Advanced usage of secrets You can add a secret with a label that reflects your tenant url, e.g. Set-Secret -Name \"https://yourtenant.sharepoint.com\" -Secret (Get-Credential) Now you can simply do this: Connect-PnPOnline -Url \"https://yourtenant.sharepoint.com\" PnP PowerShell will check the vault if a secret is present with the label matching the URL and it will use those credentials. Notice that a URL like https://yourtenant.sharepoint.com/sites/demo will also match the secret. You can create multiple secrets too. PnP PowerShell will then try to match the most complete label first, e.g. a secret ending on /sites/demo1 will proceed the one without that ending. Removing a secret Secret Management Remove-Secret -Name [yourlabel] -Vaultname [VaultName] PnP PowerShell Remove-PnPStoredCredential -Name [yourlabel]"
  },
  "articles/index.html": {
    "href": "articles/index.html",
    "title": "Articles | PnP PowerShell",
    "keywords": "Articles Here you will find various articles, ranging from installing, upgrading, advanced topics and how to build the source code. Navigate the articles in the menu at the left."
  },
  "articles/installation.html": {
    "href": "articles/installation.html",
    "title": "Installing PnP PowerShell | PnP PowerShell",
    "keywords": "Installing PnP PowerShell You can run the following commands to install the latest stable PowerShell cmdlets: Install-Module -Name \"PnP.PowerShell\" If you want to install or update to the latest nightly built prerelease of PnP PowerShell, run: Install-Module -Name \"PnP.PowerShell\" -AllowPrerelease This will work on Windows / Linux / MacOS. Uninstalling PnP PowerShell In case you would like to remove PnP PowerShell again, you can run: Uninstall-Module -Name \"PnP.PowerShell\" Using PnP PowerShell in the Azure Cloud Shell Open the Azure Cloud Shell at https://shell.azure.com Select PowerShell as your shell and enter Install-Module -Name \"PnP.PowerShell\" As the Azure Cloud Shell retains its settings and installed modules, the next time you open the Azure Cloud Shell PnP PowerShell will be available for you to use."
  },
  "articles/runningtests.html": {
    "href": "articles/runningtests.html",
    "title": "Running the Unit Tests | PnP PowerShell",
    "keywords": "Running the Unit Tests Effectively the unit tests are not unit tests but should be more thought of as an integration test as we run the cmdlets against an actual site. Setting up your environment Create a (modern) site collection at any location in your tenant. This site collection will be used for testing. Running the test script In the build folder of this project you'll find a Run-Tests.ps1 file. This script allows you to run the tests With a Stored Credential (Recommended) You can use a stored credential to authenticate to your site. We recommend using the Microsoft.PowerShell.SecretsManagement module. For more information about setting that one up see Authentication ./Run-Tests.ps1 -SiteUrl \"https://yourtenant.sharepoint.com/sites/yoursite\" -CredentialManagerLabel \"yourlabel\" With credentials $password = ConvertTo-SecureString \"P@ssW0rD!\" -AsPlainText -Force $username = \"yourname@domain.com\" ./Run-Tests.ps1 -SiteUrl \"https://yourtenant.sharepoint.com/sites/yoursite\" -Username $username -Password $password If you do not specify the password parameter you will be prompted to enter the password: $username = \"yourname@domain.com\" ./Run-Tests.ps1 -SiteUrl \"https://yourtenant.sharepoint.com/sites/yoursite\" -Username $username Enter password:"
  },
  "articles/updatenotifications.html": {
    "href": "articles/updatenotifications.html",
    "title": "Update notifications | PnP PowerShell",
    "keywords": "Update notifications One time per PowerShell session PnP PowerShell will check for new versions when you execute Connect-PnPOnline. To turn off this update check set the PNPPOWERSHELL_UPDATECHECK environment variable to false . Any other value will still continue to check for versions. If you have a script and want to turn off the update check, simply set the following as the first line of your script: $env:PNPPOWERSHELL_UPDATECHECK=\"false\" See Configure PnP PowerShell for more information on the environment variables you can set. When do you receive an update notification If the major version of your current version is lower than the currently available major version. If the major versions are the same, but the minor version is lower than the currently avialable minor version. If you are running a nightly build on PowerShell 7 Besides the above rules, you will also receive a notification if the major and minor versions are the same, but the patch level is lower than the currently available version."
  },
  "articles/upgrading.html": {
    "href": "articles/upgrading.html",
    "title": "Upgrading from the Legacy version of PnP PowerShell | PnP PowerShell",
    "keywords": "Upgrading from the Legacy version of PnP PowerShell First make sure to uninstall any edition of PnP PowerShell that runs on the Windows PowerShell version (the one with the blue background). Uninstall-Module -Name \"SharePointPnPPowerShellOnline\" -AllVersions -Force Now install the new module: Install-Module -Name \"PnP.PowerShell\" Setup authentication. The way PnP PowerShell authenticates you to your tenant has changed. We now use OAuth behind the scenes to authenticate you. We support username/password auth, device code auth and app-only authentication. If you were using Connect-PnPOnline with the -Credentials you will have to register first an Azure AD application on your tenant. This is very straightfoward and simple: Register-PnPManagementShellAccess This cmdlet will ask you to authenticate, and then provide consent to the PnP Management Shell application. A registration will be added to the Azure AD of your tenant. This is a one-time action per tenant. After you provided consent you will be able to authenticate using: Connect-PnPOnline -Url https://[tenant].sharepoint.com -Credentials (Get-Credential) Read more information about authentication . Changes Check your scripts. As this is a major release, we have deprecated cmdlets, renamed cmdlets, and we marked some parameters as obsolete. Important We marked the -Web parameter as obsolete on many cmdlets. The -Web parameter allows you to execute cmdlets to a subweb underneath the current web. Due to API changes under the hood of PnP Powershell we marked this parameter as obsolete. The parameter will be removed in a future release. Notice though that it is still fully possible to connect to a subweb by using the full url to the subweb with Connect-PnPOnline. Old New/Replaced with Notes Apply-PnPProvisioningTemplate Invoke-PnPSiteTemplate Get-PnPProvisioningTemplate Get-PnPSiteTemplate Add-PnPDataRowsToProvisioningTemplate Add-PnPDataRowsToSiteTemplate Add-PnPFileToProvisioningTemplate Add-PnPFileToSiteTemplate Add-PnPListFoldersToProvisioningTemplate Add-PnPListFoldersToSiteTemplate Convert-PnPFolderToProvisioningTemplate Convert-PnPFolderToSiteTemplate Convert-PnPProvisioningTemplate Convert-PnPSiteTemplate Export-PnPListToProvisioningTemplate Export-PnPListToSiteTemplate New-PnPProvisioningTemplate New-PnPSiteTemplate New-PnPProvisioningTemplateFromFolder New-PnPSiteTemplateFromFolder Read-PnPProvisioningTemplate Read-PnPSiteTemplate Remove-PnPFileFromProvisioningTemplate Remove-PnPFileFromSiteTemplate Save-PnPProvisioningTemplate Save-PnPSiteTemplate Set-PnPProvisioningTemplateMetadata Set-PnPSiteTemplateMetadata Add-PnPProvisioningTemplate Add-PnPSiteTemplate Apply-PnPTenantTemplate Invoke-PnPTenantTemplate Get-PnPAppInstance Get-PnPApp Different parameters Import-PnPAppPackage Install-PnPApp Different parameters Uninstall-PnPAppInstance Uninstall-PnPApp Different parameters Get-PnPHealthScore Deprecated Enable-PnPResponsiveUI Deprecated Disabled-PnPResponsiveUI Deprecated Disable-PnPInplaceRecordsManagementForSite Set-PnPInPlaceRecordsManagement -Enabled $false Enable-PnPInplaceRecordsManagementForSite Set-PnPInPlaceRecordsManagement -Enabled $true Measure-PnPResponseTime Deprecated. Consider using Fiddler for more detailed data Get-PnPManagementApiAccessToken Connect-PnPOnline -Scopes [scopes] Connect-PnPHubSite Add-PnPHubSiteAssociation Removed alias Disconnect-PnPHubSite Remove-PnPHubSiteAssociation Removed alias Add-PnPOffice365GroupToSite Add-PnPMicrosoft365GroupToSite Removed alias Add-PnPUnifiedGroupMember Add-PnPMicrosoft365GroupMember Removed alias Add-PnPUnifiedGroupOwner Add-PnPMicrosoft365GroupOwner Removed alias Clear-PnPUnifiedGroupMember Clear-PnPMicrosoft365GroupMember Removed alias Clear-PnPUnifiedGroupOwner Clear-PnPMicrosoft365GroupOwner Removed alias Get-PnPDeletedUnifiedGroup Get-PnPDeletedMicrosoft365Group Removed alias Get-PnPUnifiedGroup Get-PnPMicrosoft365Group Removed alias Get-PnPUnifiedGroupMembers Get-PnPMicrosoft365GroupMembers Removed alias Get-PnPUnifiedGroupOwners Get-PnPMicrosoft365GroupOwners Removed alias New-PnPUnifiedGroup New-PnPMicrosoft365Group Removed alias Remove-PnPDeletedUnifiedGroup Remove-PnPDeletedMicrosoft365Group Removed alias Remove-PnPUnifiedGroup Remove-PnPMicrosoft365Group Removed alias Remove-PnPUnifiedGroupMember Remove-PnPMicrosoft365GroupMember Removed alias Remove-PnPUnifiedGroupOwner Remove-PnPMicrosoft365GroupOwner Removed alias Restore-PnPDeletedUnifiedGroup Restore-PnPDeletedMicrosoft365Group Removed alias Set-PnPUnifiedGroup Set-PnPMicrosoft365Group Removed alias Execute-PnPQuery Invoke-PnPQuery Removed alias Ensure-PnPFolder Resolve-PnPFolder Removed alias Install-PnPSolution Deprecated Add-PnPWorkflowDefinition Deprecated Add-PnPWorkflowSubscription Deprecated Get-PnPWorkflowDefinition Deprecated Get-PnPWorkflowInstances Deprecated Get-PnPWorkflowSubscription Deprecated Remove-PnPWorkflowDefinition Deprecated Remove-PnPWorkflowSubscription Deprecated Resume-PnPWorkflowInstance Deprecated Start-PnPWorkflowInstance Deprecated Stop-PnPWorkflowInstance Deprecated Test-PnPOffice365AliasIsUsed Test-PnPMicrosoft365AliasIsUsed Parameter Changes Cmdlet Parameter Changes Register-PnPManagementShell SiteUrl Removed. Not required anymore Connect-PnPOnline MinimalHealthScore Removed. Not applicable anymore Connect-PnPOnline SkipTenantAdminCheck Removed. Remove-PnPTenantSite FromRecycleBin Use Clear-PnPTenantRecycleBinItem Set-PnPTenantSite UserCodeMaximumLevel Sandboxed solutions have been deprecated, no more applicable Set-PnPTenantSite UserCodeWarningLevel Sandboxed solutions have been deprecated, no more applicable New-PnPAzureCertificate Out Use OutPfx instead Get-PnPAvailableLanguage Identity Removed as it does not apply to SharePoint Online"
  },
  "cmdlets/Add-PnPAlert.html": {
    "href": "cmdlets/Add-PnPAlert.html",
    "title": "Add-PnPAlert | PnP PowerShell",
    "keywords": "Add-PnPAlert SYNOPSIS Adds an alert for a user to a list SYNTAX Add-PnPAlert [-List] <ListPipeBind> [-Title <String>] [-User <UserPipeBind>] [-DeliveryMethod <AlertDeliveryChannel>] [-ChangeType <AlertEventType>] [-Frequency <AlertFrequency>] [-Filter <AlertFilter>] [-Time <DateTime>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This cmdlets allows to add an alert for a user to a list. EXAMPLES EXAMPLE 1 Add-PnPAlert -List \"Demo List\" Adds a new alert to the \"Demo List\" for the current user. EXAMPLE 2 Add-PnPAlert -Title \"Daily summary\" -List \"Demo List\" -Frequency Daily -ChangeType All -Time (Get-Date -Hour 11 -Minute 00 -Second 00) Adds a daily alert for the current user at the given time to the \"Demo List\". Note: a timezone offset might be applied so please verify on your tenant that the alert indeed got the right time. EXAMPLE 3 Add-PnPAlert -Title \"Alert for user\" -List \"Demo List\" -User \"i:0#.f|membership|Alice@contoso.onmicrosoft.com\" Adds a new alert for user \"Alice\" to the \"Demo List\". Note: Only site owners and admins are permitted to set alerts for other users. PARAMETERS -ChangeType Alert change type Type: AlertEventType Parameter Sets: (All) Accepted values: AddObject, ModifyObject, DeleteObject, Discussion, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DeliveryMethod Alert delivery method Type: AlertDeliveryChannel Parameter Sets: (All) Accepted values: Email, Sms Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Filter Alert filter Type: AlertFilter Parameter Sets: (All) Accepted values: AnythingChanges, SomeoneElseChangesAnItem, SomeoneElseChangesItemCreatedByMe, SomeoneElseChangesItemLastModifiedByMe Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Frequency Alert frequency Type: AlertFrequency Parameter Sets: (All) Accepted values: Immediate, Daily, Weekly Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Time Alert time (if frequency is not immediate) Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Alert title Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User User to create the alert for (User ID, login name or actual User object). Skip this parameter to create an alert for the current user. Note: Only site owners can create alerts for other users. Type: UserPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPApp.html": {
    "href": "cmdlets/Add-PnPApp.html",
    "title": "Add-PnPApp | PnP PowerShell",
    "keywords": "Add-PnPApp SYNOPSIS Add/uploads an available app to the app catalog SYNTAX Add-PnPApp [-Path] <String> [-Scope <AppCatalogScope>] [-Overwrite] [-Timeout <Int32>] [-Publish [-SkipFeatureDeployment]] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPApp -Path ./myapp.sppkg This will upload the specified app package to the app catalog EXAMPLE 2 Add-PnPApp -Path ./myapp.sppkg -Publish This will upload the specified app package to the app catalog and deploy/trust it at the same time. EXAMPLE 3 Add-PnPApp -Path ./myapp.sppkg -Scope Site -Publish This will upload the specified app package to the site collection app catalog and deploy/trust it at the same time. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Overwrite Overwrites the existing app package if it already exists Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Specifies the Id or an actual app metadata instance Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Publish This will deploy/trust an app into the app catalog Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope Defines which app catalog to use. Defaults to Tenant Type: AppCatalogScope Parameter Sets: (All) Accepted values: Tenant, Site Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SkipFeatureDeployment Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Timeout Specifies the timeout in seconds. Defaults to 200. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPApplicationCustomizer.html": {
    "href": "cmdlets/Add-PnPApplicationCustomizer.html",
    "title": "Add-PnPApplicationCustomizer | PnP PowerShell",
    "keywords": "Add-PnPApplicationCustomizer SYNOPSIS Adds a SharePoint Framework client side extension application customizer to a specific site collection or web SYNTAX Add-PnPApplicationCustomizer [-Title <String>] [-Description <String>] [-Sequence <Int32>] [-Scope <CustomActionScope>] -ClientSideComponentId <Guid> [-ClientSideComponentProperties <String>] [-ClientSideHostProperties <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Adds a SharePoint Framework client side extension application customizer by registering a user custom action to a web or sitecollection. This can be useful in the scenario where you have a SPFx Application Customizer whcih you decide to deploy to the global app catalog, checking the box to deploy it to the entire tenant. If you then go to the Tenant Wide Extensions list inside the tenant app catalog and set the SPFx Application Customizer its Disabled property to be Yes, you can use this cmdlet to add the functionality of that SPFx component to specific site collections manually. This voids having to add it as an app to every site colllection and it being visible in the site contents, yet you having full control over where it should be ran and where not. EXAMPLES EXAMPLE 1 Add-PnPApplicationCustomizer -Title \"CollabFooter\" -ClientSideComponentId c0ab3b94-8609-40cf-861e-2a1759170b43 -ClientSideComponentProperties \"{`\"sourceTermSet`\":`\"PnP-CollabFooter-SharedLinks`\",`\"personalItemsStorageProperty`\":`\"PnP-CollabFooter-MyLinks`\"} Adds a new application customizer to the current web. This requires that a SharePoint Framework solution has been deployed containing the application customizer specified in its manifest. Be sure to run Install-PnPApp before trying this cmdlet on a site. PARAMETERS -ClientSideComponentId The Client Side Component Id of the SharePoint Framework client side extension application customizer found in the manifest Type: Guid Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClientSideComponentProperties The Client Side Component Properties of the application customizer. Specify values as a json string : \"{Property1 : 'Value1', Property2: 'Value2'}\" Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClientSideHostProperties The Client Side Host Properties of the application customizer. Specify values as a json string : \"{'preAllocatedApplicationCustomizerTopHeight': '50', 'preAllocatedApplicationCustomizerBottomHeight': '50'}\" Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the application customizer Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope The scope of the CustomAction to add to. Either Web or Site; defaults to Web. 'All' is not valid for this command. Type: CustomActionScope Parameter Sets: (All) Accepted values: Web, Site, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Sequence Sequence of this application customizer being injected. Use when you have a specific sequence with which to have multiple application customizers being added to the page. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the application customizer Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPAzureADGroupMember.html": {
    "href": "cmdlets/Add-PnPAzureADGroupMember.html",
    "title": "Add-PnPAzureADGroupMember | PnP PowerShell",
    "keywords": "Add-PnPAzureADGroupMember SYNOPSIS Required Permissions Microsoft Graph API: All of Group.ReadWrite.All, User.ReadWrite.All Adds members to a particular Azure Active Directory Group. This can be a security, distribution or Microsoft 365 group. SYNTAX Add-PnPAzureADGroupMember -Identity <AzureADGroupPipeBind> -Users <String[]> [-RemoveExisting] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPAzureADGroupMember -Identity \"Project Team\" -Users \"john@contoso.onmicrosoft.com\",\"jane@contoso.onmicrosoft.com\" Adds the provided two users as additional members to the Azure Active Directory Group named \"Project Team\" EXAMPLE 2 Add-PnPAzureADGroupMember -Identity \"Project Team\" -Users \"john@contoso.onmicrosoft.com\",\"jane@contoso.onmicrosoft.com\" -RemoveExisting Sets the provided two users as the only members of the Azure Active Directory group named \"Project Team\" by removing any current existing members first PARAMETERS -Identity The Identity of the Azure Active Directory group to add members to Type: AzureADGroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -RemoveExisting If provided, all existing members will be removed and only those provided through Users will become members Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Users The UPN(s) of the user(s) to add to the Azure Active Directory group as a member Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Add-PnPAzureADGroupOwner.html": {
    "href": "cmdlets/Add-PnPAzureADGroupOwner.html",
    "title": "Add-PnPAzureADGroupOwner | PnP PowerShell",
    "keywords": "Add-PnPAzureADGroupOwner SYNOPSIS Required Permissions Microsoft Graph API: All of Group.ReadWrite.All, User.ReadWrite.All Adds users to the owners of an Azure Active Directory group. This can be a security, distribution or Microsoft 365 group. SYNTAX Add-PnPAzureADGroupOwner -Identity <AzureADGroupPipeBind> -Users <String[]> [-RemoveExisting] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPAzureADGroupOwner -Identity \"Project Team\" -Users \"john@contoso.onmicrosoft.com\",\"jane@contoso.onmicrosoft.com\" Adds the provided two users as additional owners to the Azure Active Directory group named \"Project Team\" EXAMPLE 2 Add-PnPAzureADGroupOwner -Identity \"Project Team\" -Users \"john@contoso.onmicrosoft.com\",\"jane@contoso.onmicrosoft.com\" -RemoveExisting Sets the provided two users as the only owners of the Azure Active Directory group named \"Project Team\" by removing any current existing members first PARAMETERS -Identity The Identity of the Azure Active Directory group to add owners to Type: AzureADGroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -RemoveExisting If provided, all existing members will be removed and only those provided through Users will become members Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Users The UPN(s) of the user(s) to add to the Azure Active Directory group as a member Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Add-PnPContentType.html": {
    "href": "cmdlets/Add-PnPContentType.html",
    "title": "Add-PnPContentType | PnP PowerShell",
    "keywords": "Add-PnPContentType SYNOPSIS Adds a new content type SYNTAX Add-PnPContentType -Name <String> [-ContentTypeId <String>] [-Description <String>] [-Group <String>] [-ParentContentType <ContentType>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Adds a new content type to a site. To create a content type in the modern Content Type Gallery, first connect to the content type hub site for the tenant. EXAMPLES EXAMPLE 1 Add-PnPContentType -Name \"Project Document\" -Description \"Use for Contoso projects\" -Group \"Contoso Content Types\" -ParentContentType $ct This will add a new content type based on the parent content type stored in the $ct variable. EXAMPLE 2 Add-PnPContentType -Name \"Project Document\" -Description \"Use for Contoso projects\" -Group \"Contoso Content Types\" -ParentContentType (Get-PnPContentType -Identity 0x0101) -DocumentTemplate \"/_cts/Project Document/template.docx\" This will add a new content type based on the standard document content type and assigns the document template template.docx to it PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentTypeId If specified, in the format of 0x0100233af432334r434343f32f3, will create a content type with the specific ID Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Specifies the description of the new content type Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group Specifies the group of the new content type Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name Specify the name of the new content type Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ParentContentType Specifies the parent of the new content type Type: ContentType Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DocumentTemplate Allows providing a server relative path to a file which should be used as the document template for this content type Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPContentTypesFromContentTypeHub.html": {
    "href": "cmdlets/Add-PnPContentTypesFromContentTypeHub.html",
    "title": "Add-PnPContentTypesFromContentTypeHub | PnP PowerShell",
    "keywords": "Add-PnPContentTypesFromContentTypeHub SYNOPSIS Required Permissions ManageLists permission on the current site or the content type hub site. Adds published content types from content type hub site to current site. If the content type already exists on the current site then the latest published version of the content type will be synced to the site. SYNTAX Add-PnPContentTypesFromContentTypeHub -ContentTypes List<String> [-Site <SitePipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPContentTypesFromContentTypeHub -ContentTypes \"0x0101\", \"0x01\" This will add the content types with the ids '0x0101' and '0x01' to the current site. Latest published version of these content types will be synced if they were already present in the current site. There's an issue with this cmdlet if you use it on private channel sites. The workaround for that is to execute the below command: Enable-PnPFeature -Identity 73ef14b1-13a9-416b-a9b5-ececa2b0604c -Scope Site -Force EXAMPLE 2 Add-PnPContentTypesFromContentTypeHub -ContentTypes \"0x010057C83E557396744783531D80144BD08D\" -Site https://tenant.sharepoint.com/sites/HR This will add the content type with the id '0x010057C83E557396744783531D80144BD08D' to the site with the provided URL. Latest published version of these content types will be synced if they were already present in the current site. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentTypes The list of content type ids present in content type hub site that are required to be added/synced to the current site. Type: List<String> Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site The site to which to add the content types coming from the hub. If omitted, it will be applied to the currently connected to site. Type: SitePipeBind Parameter Sets: (All) Required: False Position: Named Default value: Currently connected to site Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPContentTypeToDocumentSet.html": {
    "href": "cmdlets/Add-PnPContentTypeToDocumentSet.html",
    "title": "Add-PnPContentTypeToDocumentSet | PnP PowerShell",
    "keywords": "Add-PnPContentTypeToDocumentSet SYNOPSIS Adds a content type to a document set SYNTAX Add-PnPContentTypeToDocumentSet -ContentType <ContentTypePipeBind[]> -DocumentSet <DocumentSetPipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPContentTypeToDocumentSet -ContentType \"Test CT\" -DocumentSet \"Test Document Set\" This will add the content type called 'Test CT' to the document set called ''Test Document Set' EXAMPLE 2 $docset = Get-PnPDocumentSetTemplate -Identity \"Test Document Set\" $ct = Get-PnPContentType -Identity \"Test CT\" Add-PnPContentTypeToDocumentSet -ContentType $ct -DocumentSet $docset This will add the content type called 'Test CT' to the document set called ''Test Document Set' EXAMPLE 3 Add-PnPContentTypeToDocumentSet -ContentType 0x0101001F1CEFF1D4126E4CAD10F00B6137E969 -DocumentSet 0x0120D520005DB65D094035A241BAC9AF083F825F3B This will add the content type called 'Test CT' to the document set called ''Test Document Set' PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType The content type object, name or id to add. Either specify name, an id, or a content type object. Type: ContentTypePipeBind[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DocumentSet The document set object or id to add the content type to. Either specify a name, a document set template object, an id, or a content type object Type: DocumentSetPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPContentTypeToList.html": {
    "href": "cmdlets/Add-PnPContentTypeToList.html",
    "title": "Add-PnPContentTypeToList | PnP PowerShell",
    "keywords": "Add-PnPContentTypeToList SYNOPSIS Adds a new content type to a list SYNTAX Add-PnPContentTypeToList -List <ListPipeBind> -ContentType <ContentTypePipeBind> [-DefaultContentType] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPContentTypeToList -List \"Documents\" -ContentType \"Project Document\" -DefaultContentType This will add an existing content type to a list and sets it as the default content type PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType Specifies the content type that needs to be added to the list Type: ContentTypePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultContentType Specify if the content type needs to be the default content type or not Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List Specifies the list to which the content type needs to be added Type: ListPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPCustomAction.html": {
    "href": "cmdlets/Add-PnPCustomAction.html",
    "title": "Add-PnPCustomAction | PnP PowerShell",
    "keywords": "Add-PnPCustomAction SYNOPSIS Adds a custom action SYNTAX Default Add-PnPCustomAction -Name <String> -Title <String> -Description <String> -Group <String> -Location <String> [-Sequence <Int32>] [-Url <String>] [-ImageUrl <String>] [-CommandUIExtension <String>] [-RegistrationId <String>] [-Rights <PermissionKind[]>] [-RegistrationType <UserCustomActionRegistrationType>] [-Scope <CustomActionScope>] [-Connection <PnPConnection>] [<CommonParameters>] Client Side Component Id Add-PnPCustomAction -Name <String> -Title <String> -Location <String> [-Sequence <Int32>] [-RegistrationId <String>] [-RegistrationType <UserCustomActionRegistrationType>] [-Scope <CustomActionScope>] -ClientSideComponentId <Guid> [-ClientSideComponentProperties <String>] [-ClientSideHostProperties <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Adds a user custom action to a web or sitecollection. EXAMPLES EXAMPLE 1 $cUIExtn = \"<CommandUIExtension><CommandUIDefinitions><CommandUIDefinition Location=\"\"Ribbon.List.Share.Controls._children\"\"><Button Id=\"\"Ribbon.List.Share.GetItemsCountButton\"\" Alt=\"\"Get list items count\"\" Sequence=\"\"11\"\" Command=\"\"Invoke_GetItemsCountButtonRequest\"\" LabelText=\"\"Get Items Count\"\" TemplateAlias=\"\"o1\"\" Image32by32=\"\"_layouts/15/images/placeholder32x32.png\"\" Image16by16=\"\"_layouts/15/images/placeholder16x16.png\"\" /></CommandUIDefinition></CommandUIDefinitions><CommandUIHandlers><CommandUIHandler Command=\"\"Invoke_GetItemsCountButtonRequest\"\" CommandAction=\"\"javascript: alert('Total items in this list: '+ ctx.TotalListItems);\"\" EnabledScript=\"\"javascript: function checkEnable() { return (true);} checkEnable();\"\"/></CommandUIHandlers></CommandUIExtension>\" Add-PnPCustomAction -Name 'GetItemsCount' -Title 'Invoke GetItemsCount Action' -Description 'Adds custom action to custom list ribbon' -Group 'SiteActions' -Location 'CommandUI.Ribbon' -CommandUIExtension $cUIExtn Adds a new custom action to the custom list template, and sets the Title, Name and other fields with the specified values. On click it shows the number of items in that list. Notice: escape quotes in CommandUIExtension. EXAMPLE 2 Add-PnPCustomAction -Title \"CollabFooter\" -Name \"CollabFooter\" -Location \"ClientSideExtension.ApplicationCustomizer\" -ClientSideComponentId c0ab3b94-8609-40cf-861e-2a1759170b43 -ClientSideComponentProperties \"{`\"sourceTermSet`\":`\"PnP-CollabFooter-SharedLinks`\",`\"personalItemsStorageProperty`\":`\"PnP-CollabFooter-MyLinks`\"}\" Adds a new application customizer to the site. This requires that an SPFX solution has been deployed containing the application customizer specified. Be sure to run Install-PnPApp before trying this cmdlet on a site. PARAMETERS -ClientSideComponentId The Client Side Component Id of the custom action Type: Guid Parameter Sets: Client Side Component Id Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClientSideComponentProperties The Client Side Component Properties of the custom action. Specify values as a json string : \"{Property1 : 'Value1', Property2: 'Value2'}\" Type: String Parameter Sets: Client Side Component Id Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClientSideHostProperties The Client Side Host Properties of the custom action. Specify values as a json string : \"{'preAllocatedApplicationCustomizerTopHeight': '50', 'preAllocatedApplicationCustomizerBottomHeight': '50'}\" Type: String Parameter Sets: Client Side Component Id Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CommandUIExtension XML fragment that determines user interface properties of the custom action Type: String Parameter Sets: Default Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the custom action Type: String Parameter Sets: Default Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group The group where this custom action needs to be added like 'SiteActions' Type: String Parameter Sets: Default Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ImageUrl The URL of the image associated with the custom action Type: String Parameter Sets: Default Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Location The actual location where this custom action need to be added like 'CommandUI.Ribbon' Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The name of the custom action Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RegistrationId The identifier of the object associated with the custom action. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RegistrationType Specifies the type of object associated with the custom action Type: UserCustomActionRegistrationType Parameter Sets: (All) Accepted values: None, List, ContentType, ProgId, FileType Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Rights A string array that contain the permissions needed for the custom action Type: PermissionKind[] Parameter Sets: Default Accepted values: EmptyMask, ViewListItems, AddListItems, EditListItems, DeleteListItems, ApproveItems, OpenItems, ViewVersions, DeleteVersions, CancelCheckout, ManagePersonalViews, ManageLists, ViewFormPages, AnonymousSearchAccessList, Open, ViewPages, AddAndCustomizePages, ApplyThemeAndBorder, ApplyStyleSheets, ViewUsageData, CreateSSCSite, ManageSubwebs, CreateGroups, ManagePermissions, BrowseDirectories, BrowseUserInfo, AddDelPrivateWebParts, UpdatePersonalWebParts, ManageWeb, AnonymousSearchAccessWebLists, UseClientIntegration, UseRemoteAPIs, ManageAlerts, CreateAlerts, EditMyUserInfo, EnumeratePermissions, FullMask Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope The scope of the CustomAction to add to. Either Web or Site; defaults to Web. 'All' is not valid for this command. Type: CustomActionScope Parameter Sets: (All) Accepted values: Web, Site, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Sequence Sequence of this CustomAction being injected. Use when you have a specific sequence with which to have multiple CustomActions being added to the page. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the custom action Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url The URL, URI or ECMAScript (JScript, JavaScript) function associated with the action Type: String Parameter Sets: Default Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices UserCustomAction BasePermissions"
  },
  "cmdlets/Add-PnPDataRowsToSiteTemplate.html": {
    "href": "cmdlets/Add-PnPDataRowsToSiteTemplate.html",
    "title": "Add-PnPDataRowsToSiteTemplate | PnP PowerShell",
    "keywords": "Add-PnPDataRowsToSiteTemplate SYNOPSIS Adds datarows to a list inside a PnP Provisioning Template SYNTAX Add-PnPDataRowsToSiteTemplate [-Path] <String> -List <ListPipeBind> [-Query <String>] [-Fields <String[]>] [-IncludeSecurity] [[-TemplateProviderExtensions] <ITemplateProviderExtension[]>] [-TokenizeUrls] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPDataRowsToSiteTemplate -Path template.pnp -List 'PnPTestList' -Fields 'Title','Choice' Adds datarows from the provided list to the PnP Provisioning Template at the provided location EXAMPLE 2 Add-PnPDataRowsToSiteTemplate -Path template.pnp -List 'PnPTestList' -Query '<Query><Where><Geq><FieldRef Name=\"Modified\"/><Value Type=\"DateTime\"><Today OffsetDays=\"-7\" /></Value></Geq></Where></Query>' -Fields 'Title','Choice' -IncludeSecurity Adds datarows from the provided list to the PnP Provisioning Template at the provided location, only the items that have changed since a week ago PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Fields The fields to retrieve. If not specified all fields will be loaded in the returned list object. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeSecurity A switch to include ObjectSecurity information. Type: SwitchParameter Parameter Sets: (All) Required: False Position: 5 Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list to query Type: ListPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Filename of the .PNP Open XML site template to read from, optionally including full path. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Query The CAML query to execute against the list. Defaults to all items. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateProviderExtensions Allows you to specify ITemplateProviderExtension to execute while loading the template. Type: ITemplateProviderExtension[] Parameter Sets: (All) Required: False Position: 4 Default value: None Accept pipeline input: False Accept wildcard characters: False -TokenizeUrls If set, this switch will try to tokenize the values with web and site related tokens Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPDocumentSet.html": {
    "href": "cmdlets/Add-PnPDocumentSet.html",
    "title": "Add-PnPDocumentSet | PnP PowerShell",
    "keywords": "Add-PnPDocumentSet SYNOPSIS Creates a new document set in a library. SYNTAX Add-PnPDocumentSet -List <ListPipeBind> -Name <String> -ContentType <ContentTypePipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPDocumentSet -List \"Documents\" -ContentType \"Test Document Set\" -Name \"Test\" This will add a new document set based upon the 'Test Document Set' content type to a list called 'Documents'. The document set will be named 'Test' PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType The name of the content type, its ID or an actual content object referencing to the document set Type: ContentTypePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The name of the list, its ID or an actual list object from where the document set needs to be added Type: ListPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The name of the document set Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPEventReceiver.html": {
    "href": "cmdlets/Add-PnPEventReceiver.html",
    "title": "Add-PnPEventReceiver | PnP PowerShell",
    "keywords": "Add-PnPEventReceiver SYNOPSIS Adds a new remote event receiver SYNTAX Add-PnPEventReceiver [-List <ListPipeBind>] [-Scope <EventReceiverScope>] -Name <String> -Url <String> -EventReceiverType <EventReceiverType> -Synchronization <EventReceiverSynchronization> [-SequenceNumber <Int32>] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This cmdlet adds a new remote event receiver. EXAMPLES EXAMPLE 1 Add-PnPEventReceiver -List \"ProjectList\" -Name \"TestEventReceiver\" -Url https://yourserver.azurewebsites.net/eventreceiver.svc -EventReceiverType ItemAdded -Synchronization Asynchronous This will add a new remote event receiver that is executed after an item has been added to the ProjectList list EXAMPLE 2 Add-PnPEventReceiver -Name \"TestEventReceiver\" -Url https://yourserver.azurewebsites.net/eventreceiver.svc -EventReceiverType WebAdding -Synchronization Synchronous This will add a new remote event receiver that is executed before a new subsite is being created EXAMPLE 3 Add-PnPEventReceiver -Name \"TestEventReceiver\" -Url https://yourserver.azurewebsites.net/eventreceiver.svc -EventReceiverType ListAdding -Synchronization Synchronous -Scope Site This will add a new remote event receiver that is executed before a new list is being created inside the site collection scope EXAMPLE 4 Add-PnPEventReceiver -Name \"TestEventReceiver\" -Url https://yourserver.azurewebsites.net/eventreceiver.svc -EventReceiverType ListDeleted -Synchronization Asynchronous -Scope Web This will add a new remote event receiver that is executed after a list has been deleted from the current site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EventReceiverType The type of the event receiver like ItemAdded, ItemAdding. See https://docs.microsoft.com/previous-versions/office/sharepoint-server/jj167297(v=office.15) for the full list of available types. Type: EventReceiverType Parameter Sets: (All) Aliases: Type Accepted values: ItemAdding, ItemUpdating, ItemDeleting, ItemCheckingIn, ItemCheckingOut, ItemUncheckingOut, ItemAttachmentAdding, ItemAttachmentDeleting, ItemFileMoving, ItemVersionDeleting, FieldAdding, FieldUpdating, FieldDeleting, ListAdding, ListDeleting, SiteDeleting, WebDeleting, WebMoving, WebAdding, SiteMovingFromGeoLocation, GroupAdding, GroupUpdating, GroupDeleting, GroupUserAdding, GroupUserDeleting, RoleDefinitionAdding, RoleDefinitionUpdating, RoleDefinitionDeleting, RoleAssignmentAdding, RoleAssignmentDeleting, InheritanceBreaking, InheritanceResetting, WorkflowStarting, ItemAdded, ItemUpdated, ItemDeleted, ItemCheckedIn, ItemCheckedOut, ItemUncheckedOut, ItemAttachmentAdded, ItemAttachmentDeleted, ItemFileMoved, ItemFileConverted, ItemVersionDeleted, FieldAdded, FieldUpdated, FieldDeleted, ListAdded, ListDeleted, SiteDeleted, WebDeleted, WebMoved, WebProvisioned, WebRestored, GroupAdded, GroupUpdated, GroupDeleted, GroupUserAdded, GroupUserDeleted, RoleDefinitionAdded, RoleDefinitionUpdated, RoleDefinitionDeleted, RoleAssignmentAdded, RoleAssignmentDeleted, InheritanceBroken, InheritanceReset, WorkflowStarted, WorkflowPostponed, WorkflowCompleted, EntityInstanceAdded, EntityInstanceUpdated, EntityInstanceDeleted, AppInstalled, AppUpgraded, AppUninstalling, EmailReceived, ContextEvent, InvalidReceiver Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Overwrites the output file if it exists. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list object or name where the remote event receiver needs to be added. If omitted, the remote event receiver will be added to the web. Type: ListPipeBind Parameter Sets: List Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope The scope of the EventReceiver to add to. Either Web or Site; defaults to Web. 'All' is not valid for this command. Type: EventReceiverScope Parameter Sets: Scope Accepted values: Web, Site, All Required: False Position: Named Default value: Web Accept pipeline input: False Accept wildcard characters: False -Name The name of the remote event receiver Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SequenceNumber The sequence number where this remote event receiver should be placed Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Synchronization The synchronization type: Asynchronous or Synchronous Type: EventReceiverSynchronization Parameter Sets: (All) Aliases: Sync Accepted values: DefaultSynchronization, Synchronous, Asynchronous Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url The URL of the remote event receiver web service Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPField.html": {
    "href": "cmdlets/Add-PnPField.html",
    "title": "Add-PnPField | PnP PowerShell",
    "keywords": "Add-PnPField SYNOPSIS Add a field SYNTAX Add field to list (Default) Add-PnPField [-List <ListPipeBind>] -DisplayName <String> -InternalName <String> -Type <FieldType> [-Id <Guid>] [-Formula <String>] [-Choices <String>] [-AddToDefaultView] [-Required] [-Group <String>] [-ClientSideComponentId <Guid>] [-ClientSideComponentProperties <String>] [-AddToAllContentTypes] [-Connection <PnPConnection>] [<CommonParameters>] Add field reference to list Add-PnPField -List <ListPipeBind> -Field <FieldPipeBind> [-Connection <PnPConnection>] [<CommonParameters>] Add field to web Add-PnPField -DisplayName <String> -InternalName <String> -Type <FieldType> [-Id <Guid>] [-Formula <String>] [-Choices <String>] [-ClientSideComponentId <Guid>] [-ClientSideComponentProperties <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Adds a field (a column) to a list or as a site column. To add a column of type Managed Metadata use the Add-PnPTaxonomyField cmdlet. EXAMPLES EXAMPLE 1 Add-PnPField -Type Calculated -InternalName \"C1\" -DisplayName \"C1\" -Formula =\"[Title]\" Adds a new calculated site column with the formula specified EXAMPLE 2 Add-PnPField -List \"Demo list\" -DisplayName \"Location\" -InternalName \"SPSLocation\" -Type Choice -Group \"Demo Group\" -AddToDefaultView -Choices \"Stockholm\",\"Helsinki\",\"Oslo\" This will add a field of type Choice to the list \"Demo List\". EXAMPLE 3 Add-PnPField -List \"Demo list\" -DisplayName \"Speakers\" -InternalName \"SPSSpeakers\" -Type MultiChoice -Group \"Demo Group\" -AddToDefaultView -Choices \"Obiwan Kenobi\",\"Darth Vader\", \"Anakin Skywalker\" This will add a field of type Multiple Choice to the list \"Demo List\". (you can pick several choices for the same item) EXAMPLE 4 Add-PnPField -List \"Demo List\" -Field \"MyTestCol\" This will add an existing site column called \"MyTestCol\" to the list \"Demo List\". EXAMPLE 5 Add-PnPField -Type Choice -Choices \"PnP\",\"Parker\",\"Sharing Is Caring\" -DisplayName \"My Test Column\" -InternalName \"MyTestCol\" This will add a site column of type Choice (only one choice value can be chosen at the same time) called \"My Test Column\" with three choice values. PARAMETERS -AddToDefaultView Switch Parameter if this field must be added to the default view Type: SwitchParameter Parameter Sets: Add field to list, Add field to web Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AddToAllContentTypes Switch Parameter if this field must be added to all content types Type: SwitchParameter Parameter Sets: Add field to list, Add field to web Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Choices The Choice values when field type is Choice or MultiChoice Type: String[] Parameter Sets: Add field to list (Choice or MultiChoice Field Chosen), Add field to web (Choice or MultiChoice Field Chosen) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClientSideComponentId The Client Side Component Id to set to the field Type: Guid Parameter Sets: Add field to list, Add field to web Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClientSideComponentProperties The Client Side Component Properties to set to the field Type: String Parameter Sets: Add field to list, Add field to web Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName The display name of the field Type: String Parameter Sets: Add field to list, Add field to web Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Field The name of the field, its ID or an actual field object that needs to be added Type: FieldPipeBind Parameter Sets: Add field reference to list Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Formula The Formula when Calculated column is chosen. Type: String[] Parameter Sets: Add field to list (Calculated Field), Add field to web (Calculated Field) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group The group name to where this field belongs to Type: String Parameter Sets: Add field to list, Add field by XML to list Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Id The ID of the field, must be unique Type: Guid Parameter Sets: Add field to list, Add field to web Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InternalName The internal name of the field Type: String Parameter Sets: Add field to list, Add field to web Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The name of the list, its ID or an actual list object where this field needs to be added Type: ListPipeBind Parameter Sets: Add field to list Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False Type: ListPipeBind Parameter Sets: Add field reference to list Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Required Switch Parameter if the field is a required field Type: SwitchParameter Parameter Sets: Add field to list, Add field to web Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Type The type of the field like Choice, Note, MultiChoice. For a complete list of field types visit https://docs.microsoft.com/dotnet/api/microsoft.sharepoint.client.fieldtype Type: FieldType Parameter Sets: Add field to list, Add field to web Accepted values: Invalid, Integer, Text, Note, DateTime, Counter, Choice, Lookup, Boolean, Number, Currency, URL, Computed, Threading, Guid, MultiChoice, GridChoice, Calculated, File, Attachments, User, Recurrence, CrossProjectLink, ModStat, Error, ContentTypeId, PageSeparator, ThreadIndex, WorkflowStatus, AllDayEvent, WorkflowEventType, Geolocation, OutcomeChoice, Location, Thumbnail, MaxItems Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPFieldFromXml.html": {
    "href": "cmdlets/Add-PnPFieldFromXml.html",
    "title": "Add-PnPFieldFromXml | PnP PowerShell",
    "keywords": "Add-PnPFieldFromXml SYNOPSIS Adds a field to a list or as a site column based upon a CAML/XML field definition SYNTAX Add-PnPFieldFromXml [-List <ListPipeBind>] [-FieldXml] <String> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 $xml = '<Field Type=\"Text\" Name=\"PSCmdletTest\" DisplayName=\"PSCmdletTest\" ID=\"{27d81055-f208-41c9-a976-61c5473eed4a}\" Group=\"Test\" Required=\"FALSE\" StaticName=\"PSCmdletTest\" />' Add-PnPFieldFromXml -FieldXml $xml Adds a field with the specified field CAML code to the site. EXAMPLE 2 $xml = '<Field Type=\"Text\" Name=\"PSCmdletTest\" DisplayName=\"PSCmdletTest\" ID=\"{27d81055-f208-41c9-a976-61c5473eed4a}\" Group=\"Test\" Required=\"FALSE\" StaticName=\"PSCmdletTest\" />' Add-PnPFieldFromXml -List \"Demo List\" -FieldXml $xml Adds a field with the specified field CAML code to the list \"Demo List\". PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FieldXml CAML snippet containing the field definition. See https://docs.microsoft.com/sharepoint/dev/schema/field-element-list Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -List The name of the list, its ID or an actual list object where this field needs to be added Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Field CAML documentation"
  },
  "cmdlets/Add-PnPFieldToContentType.html": {
    "href": "cmdlets/Add-PnPFieldToContentType.html",
    "title": "Add-PnPFieldToContentType | PnP PowerShell",
    "keywords": "Add-PnPFieldToContentType SYNOPSIS Adds an existing site column to a content type SYNTAX Add-PnPFieldToContentType -Field <FieldPipeBind> -ContentType <ContentTypePipeBind> [-Required] [-Hidden] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPFieldToContentType -Field \"Project_Name\" -ContentType \"Project Document\" This will add an existing site column with an internal name of \"Project_Name\" to a content type called \"Project Document\" PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType Specifies which content type a field needs to be added to Type: ContentTypePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Field Specifies the field that needs to be added to the content type Type: FieldPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Hidden Specifies whether the field should be hidden or not Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Required Specifies whether the field is required or not Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UpdateChildren Specifies whether the field needs to be pushed to child content types. Default value is true. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: True Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPFile.html": {
    "href": "cmdlets/Add-PnPFile.html",
    "title": "Add-PnPFile | PnP PowerShell",
    "keywords": "Add-PnPFile SYNOPSIS Uploads a file to Web SYNTAX Upload file Add-PnPFile -Path <String> -Folder <FolderPipeBind> [-NewFileName <String>] [-Checkout] [-CheckInComment <String>] [-Approve] [-ApproveComment <String>] [-Publish] [-PublishComment <String>] [-UseWebDav] [-Values <Hashtable>] [-ContentType <ContentTypePipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] Upload file from stream Add-PnPFile -Folder <FolderPipeBind> -FileName <String> -Stream <Stream> [-Checkout] [-CheckInComment <String>] [-Approve] [-ApproveComment <String>] [-Publish] [-PublishComment <String>] [-UseWebDav] [-Values <Hashtable>] [-ContentType <ContentTypePipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] Create or update file from text Add-PnPFile -Folder <FolderPipeBind> -FileName <String> -Content <text> [-Checkout] [-CheckInComment <String>] [-Approve] [-ApproveComment <String>] [-Publish] [-PublishComment <String>] [-UseWebDav] [-Values <Hashtable>] [-ContentType <ContentTypePipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This cmdlet uploads a local file, file from a stream or plain text to the specified folder. EXAMPLES EXAMPLE 1 Add-PnPFile -Path c:\\temp\\company.master -Folder \"_catalogs/masterpage\" This will upload the file company.master to the masterpage catalog EXAMPLE 2 Add-PnPFile -Path .\\displaytemplate.html -Folder \"_catalogs/masterpage/display templates/test\" This will upload the file displaytemplate.html to the test folder in the display templates folder. If the test folder does not exist it will create it. EXAMPLE 3 Add-PnPFile -Path .\\sample.doc -Folder \"Shared Documents\" -Values @{Modified=\"1/1/2016\"} This will upload the file sample.doc to the Shared Documents folder. After uploading it will set the Modified date to 1/1/2016. EXAMPLE 4 Add-PnPFile -FileName sample.doc -Folder \"Shared Documents\" -Stream $fileStream -Values @{Modified=\"1/1/2016\"} This will add a file sample.doc with the contents of the stream into the Shared Documents folder. After adding it will set the Modified date to 1/1/2016. EXAMPLE 5 Add-PnPFile -Path sample.doc -Folder \"Shared Documents\" -ContentType \"Document\" -Values @{Modified=\"1/1/2016\"} This will add a file sample.doc to the Shared Documents folder, with a ContentType of 'Documents'. After adding it will set the Modified date to 1/1/2016. EXAMPLE 6 Add-PnPFile -Path sample.docx -Folder \"Documents\" -Values @{Modified=\"1/1/2016\"; Created=\"1/1/2017\"; Editor=23} This will add a file sample.docx to the Documents folder and will set the Modified date to 1/1/2016, Created date to 1/1/2017 and the Modified By field to the user with ID 23. To find out about the proper user ID to relate to a specific user, use Get-PnPUser. EXAMPLE 7 Add-PnPFile -Path sample.docx -Folder \"Documents\" -NewFileName \"differentname.docx\" This will upload a local file sample.docx to the Documents folder giving it the filename differentname.docx on SharePoint EXAMPLE 8 Add-PnPFile -FileName sample.txt -Folder \"Shared Documents\" -Content '{ \"Test\": \"Value\" }' This will create a file sample.docx in the Documents library inserting the provided plain text into it. If a similarly file already exists at this location, its contents will be overwritten. PARAMETERS -Approve Will auto approve the uploaded file Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ApproveComment The comment added to the approval Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CheckInComment The comment added to the checkin Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Checkout If versioning is enabled, this will check out the file first if it exists, upload the file, then check it in again Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType Use to assign a ContentType to the file Type: ContentTypePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FileName Name for file Type: String Parameter Sets: Upload file from stream Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder The destination folder in the site Type: FolderPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NewFileName Filename to give the file on SharePoint Type: String Parameter Sets: Upload file Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path The local file path Type: String Parameter Sets: Upload file Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Publish Will auto publish the file Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PublishComment The comment added to the publish action Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Stream Stream with the file contents Type: Stream Parameter Sets: Upload file from stream Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UseWebDav Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Content Content to add to the file to create or overwrite on SharePoint. It will blindly overwrite the contents of the file if it already exists. Type: String Parameter Sets: ASTEXT Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Values Use the internal names of the fields when specifying field names. Single line of text: -Values @{\"Title\" = \"Title New\"} Multiple lines of text: -Values @{\"MultiText\" = \"New text\\n\\nMore text\"} Rich text: -Values @{\"MultiText\" = \"<strong>New</strong> text\"} Choice: -Values @{\"Choice\" = \"Value 1\"} Number: -Values @{\"Number\" = \"10\"} Currency: -Values @{\"Number\" = \"10\"} Currency: -Values @{\"Currency\" = \"10\"} Date and Time: -Values @{\"DateAndTime\" = \"03/10/2015 14:16\"} Lookup (id of lookup value): -Values @{\"Lookup\" = \"2\"} Multi value lookup (id of lookup values as array 1): -Values @{\"MultiLookupField\" = \"1\",\"2\"} Multi value lookup (id of lookup values as array 2): -Values @{\"MultiLookupField\" = 1,2} Multi value lookup (id of lookup values as string): -Values @{\"MultiLookupField\" = \"1,2\"} Yes/No: -Values @{\"YesNo\" = $false} Person/Group (id of user/group in Site User Info List or email of the user, separate multiple values with a comma): -Values @{\"Person\" = \"user1@domain.com\",\"21\"} Managed Metadata (single value with path to term): -Values @{\"MetadataField\" = \"CORPORATE|DEPARTMENTS|FINANCE\"} Managed Metadata (single value with id of term): -Values @{\"MetadataField\" = \"fe40a95b-2144-4fa2-b82a-0b3d0299d818\"} with Id of term Managed Metadata (multiple values with paths to terms): -Values @{\"MetadataField\" = \"CORPORATE|DEPARTMENTS|FINANCE\",\"CORPORATE|DEPARTMENTS|HR\"} Managed Metadata (multiple values with ids of terms): -Values @{\"MetadataField\" = \"fe40a95b-2144-4fa2-b82a-0b3d0299d818\",\"52d88107-c2a8-4bf0-adfa-04bc2305b593\"} Hyperlink or Picture: -Values @{\"Hyperlink\" = \"https://github.com/OfficeDev/, OfficePnp\"} Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPFileToSiteTemplate.html": {
    "href": "cmdlets/Add-PnPFileToSiteTemplate.html",
    "title": "Add-PnPFileToSiteTemplate | PnP PowerShell",
    "keywords": "Add-PnPFileToSiteTemplate SYNOPSIS Adds a file to a PnP Provisioning Template package Description Allows adding a file to a PnP Provisioning Template package (.pnp) so that the file will get uploaded to the SharePoint Online site to which the template is being invoked. This allows the file to be referenced in i.e. a document template, site logo or any other component that references a file. SYNTAX Local File Add-PnPFileToSiteTemplate [-Path] <String> [-Source] <String> [-Folder] <String> [[-Container] <String>] [[-FileLevel] <FileLevel>] [-FileOverwrite] [[-TemplateProviderExtensions] <ITemplateProviderExtension[]>] [-Connection <PnPConnection>] [<CommonParameters>] Remove File Add-PnPFileToSiteTemplate [-Path] <String> [-SourceUrl] <String> [[-Container] <String>] [[-FileLevel] <FileLevel>] [-FileOverwrite] [[-TemplateProviderExtensions] <ITemplateProviderExtension[]>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPFileToSiteTemplate -Path template.pnp -Source \"Instructions.docx\" -Folder \"Shared Documents\" Embeds a file named \"Instructions.docx\" located in the current folder on the local machine into the PnP Site Template file \"template.pnp\" located in the current folder on the local machine, instructing it to be uploaded to the default document library when the template is applied to a site. EXAMPLE 2 Add-PnPFileToSiteTemplate -Path c:\\temp\\template.pnp -Source \"c:\\temp\\Sample.pptx\" -Folder \"Shared Documents\\Samples\" Embeds a file named \"Sample.pptx\" located in the c:\\temp on the local machine into the PnP Site Template file located at \"c:\\temp\\template.pnp\" on the local machine, instructing it to be uploaded to the folder Samples located in the default document library when the template is applied to a site. EXAMPLE 3 Add-PnPFileToSiteTemplate -Path template.pnp -Source \"./myfile.png\" -Folder \"folderinsite\" -FileLevel Published -FileOverwrite:$false Adds a file to a PnP Site Template, specifies the level as Published and defines to not overwrite the file if it exists in the site. EXAMPLE 4 Add-PnPFileToSiteTemplate -Path template.pnp -Source $sourceFilePath -Folder $targetFolder -Container $container Adds a file to a PnP Site Template with a custom container for the file EXAMPLE 5 Add-PnPFileToSiteTemplate -Path template.pnp -SourceUrl \"Shared%20Documents/ProjectStatus.docx\" Adds a file to a PnP Provisioning Template retrieved from the currently connected site. The url can be server relative or web relative. If specifying a server relative url has to start with the current site url. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Container The target Container for the file to add to the in-memory template, optional argument. Type: String Parameter Sets: (All) Required: False Position: 3 Default value: None Accept pipeline input: False Accept wildcard characters: False -FileLevel The level of the files to add, defaults to Published. Type: FileLevel Parameter Sets: (All) Required: False Position: 4 Default value: Published Accept pipeline input: False Accept wildcard characters: False -FileOverwrite Set to overwrite in site, defaults to true. Type: SwitchParameter Parameter Sets: (All) Required: False Position: 5 Default value: $true Accept pipeline input: False Accept wildcard characters: False -Folder The target Folder for the file to add to the in-memory template. Type: String Parameter Sets: Local File Required: True Position: 2 Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Filename of the .PNP Open XML site template to read from, optionally including full path. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Source The file to add to the PnP Provisioning Template, optionally including full path. Type: String Parameter Sets: Local File Required: True Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -SourceUrl The file to add to the PnP Provisioning Template, specifying its url in the current connected Web. Type: String Parameter Sets: Remove File Required: True Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateProviderExtensions Allows you to specify ITemplateProviderExtension to execute while loading the template. Type: ITemplateProviderExtension[] Parameter Sets: (All) Required: False Position: 4 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPFolder.html": {
    "href": "cmdlets/Add-PnPFolder.html",
    "title": "Add-PnPFolder | PnP PowerShell",
    "keywords": "Add-PnPFolder SYNOPSIS Creates a folder within a parent folder SYNTAX Add-PnPFolder -Name <String> -Folder <FolderPipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPFolder -Name NewFolder -Folder _catalogs/masterpage This will create the folder NewFolder in the masterpage catalog EXAMPLE 2 Add-PnPFolder -Name NewFolder -Folder \"Shared Documents\" This will create the folder NewFolder in the Documents library EXAMPLE 3 Add-PnPFolder -Name NewFolder -Folder \"Shared Documents/Folder\" This will create the folder NewFolder in Folder inside the Documents library PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder The parent folder in the site Type: FolderPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The folder name Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPGroupMember.html": {
    "href": "cmdlets/Add-PnPGroupMember.html",
    "title": "Add-PnPGroupMember | PnP PowerShell",
    "keywords": "Add-PnPGroupMember SYNOPSIS Adds a user to a SharePoint group SYNTAX Internal Add-PnPGroupMember -LoginName <String> -Group <GroupPipeBind> [-Connection <PnPConnection>] [<CommonParameters>] External Add-PnPGroupMember -Group <GroupPipeBind> -EmailAddress <String> [-SendEmail] [-EmailBody <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPGroupMember -LoginName user@company.com -Group 'Marketing Site Members' Add the specified user to the SharePoint group \"Marketing Site Members\" EXAMPLE 2 Add-PnPGroupMember -LoginName user@company.com -Group 5 Add the specified user to the SharePoint group with Id 5 PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EmailAddress The email address of the user Type: String Parameter Sets: External Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EmailBody Type: String Parameter Sets: External Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group The SharePoint group id, SharePoint group name or SharePoint group object to add the user to Type: GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -LoginName The login name of the user Type: String Parameter Sets: Internal Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SendEmail Type: SwitchParameter Parameter Sets: External Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPHtmlPublishingPageLayout.html": {
    "href": "cmdlets/Add-PnPHtmlPublishingPageLayout.html",
    "title": "Add-PnPHtmlPublishingPageLayout | PnP PowerShell",
    "keywords": "Add-PnPHtmlPublishingPageLayout SYNOPSIS Adds a HTML based publishing page layout SYNTAX Add-PnPHtmlPublishingPageLayout -SourceFilePath <String> -Title <String> -Description <String> -AssociatedContentTypeID <String> [-DestinationFolderHierarchy <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPHtmlPublishingPageLayout -Title 'Our custom page layout' -SourceFilePath 'customlayout.aspx' -Description 'A custom page layout' -AssociatedContentTypeID 0x01010901 Uploads the pagelayout 'customlayout.aspx' from the current location to the current site as a 'web part page' pagelayout PARAMETERS -AssociatedContentTypeID Associated content type ID Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Description for the page layout Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DestinationFolderHierarchy Folder hierarchy where the HTML page layouts will be deployed Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SourceFilePath Path to the file which will be uploaded Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Title for the page layout Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPHubSiteAssociation.html": {
    "href": "cmdlets/Add-PnPHubSiteAssociation.html",
    "title": "Add-PnPHubSiteAssociation | PnP PowerShell",
    "keywords": "Add-PnPHubSiteAssociation SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Connects a site to a hubsite. SYNTAX Add-PnPHubSiteAssociation -Site <SitePipeBind> -HubSite <SitePipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Connects an existing site to a hubsite EXAMPLES EXAMPLE 1 Add-PnPHubSiteAssociation -Site \"https://tenant.sharepoint.com/sites/mysite\" -HubSite \"https://tenant.sharepoint.com/sites/hubsite\" This example adds the specified site to the hubsite. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HubSite The hubsite to connect the site to Type: SitePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site The site to connect to the hubsite Type: SitePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPHubToHubAssociation.html": {
    "href": "cmdlets/Add-PnPHubToHubAssociation.html",
    "title": "Add-PnPHubToHubAssociation | PnP PowerShell",
    "keywords": "Add-PnPHubToHubAssociation SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Associates a hub site to another hub site to build a hierarchy of hubs. The association only is a content association, meaning that only the content of the underlying associates sites will surface in webparts such as the news webpart. No other settings will be inherited. At most 3 levels of hubs can be associated with each other. SYNTAX By Id Add-PnPHubToHubAssociation -Source <Guid> -Target <Guid> [-Connection <PnPConnection>] By Url Add-PnPHubToHubAssociation -SourceUrl <string> -TargetUrl <string> [-Connection <PnPConnection>] DESCRIPTION Use this cmdlet to associate a hub site to a hub site. EXAMPLES EXAMPLE 1 Add-PnPHubToHubAssociation -Source 6638bd4c-d88d-447c-9eb2-c84f28ba8b15 -Target 0b70f9de-2b98-46e9-862f-ba5700aa2443 This example associates the source hub site with the HubSiteId 6638bd4c-d88d-447c-9eb2-c84f28ba8b15 with the target hub site with the HubSiteId 0b70f9de-2b98-46e9-862f-ba5700aa2443. EXAMPLE 2 Add-PnPHubToHubAssociation -SourceUrl \"https://yourtenant.sharepoint.com/sites/sourcehub\" -TargetUrl \"https://yourtenant.sharepoint.com/sites/targethub\" This example associates the source hub site with the url https://yourtenant.sharepoint.com/sites/sourcehub with the target hub site with the url https://yourtenant.sharepoint.com/sites/targethub . EXAMPLE 3 Add-PnPHubToHubAssociation -SourceUrl \"https://yourtenant.sharepoint.com/sites/secondlevelhub\" -TargetUrl \"https://yourtenant.sharepoint.com/sites/toplevelhub\" Add-PnPHubToHubAssociation -SourceUrl \"https://yourtenant.sharepoint.com/sites/thirdlevelhub\" -TargetUrl \"https://yourtenant.sharepoint.com/sites/secondlevelhub\" This example associates the source hub site with the url https://yourtenant.sharepoint.com/sites/secondlevelhub with the target hub site with the url https://yourtenant.sharepoint.com/sites/toplevelhub and then associates the source hub site with the url https://yourtenant.sharepoint.com/sites/thirdlevelhub with the target hub site with the url https://yourtenant.sharepoint.com/sites/secondlevelhub to generate a three-level hub site structure. Note that 3 levels of hub site connections is the maximum supported amount. Content on sites beyond level 3 will not appear in search results. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Source HubSiteId of the Source Hub site to be associated with the Target Hub Site. Type: Guid Parameter Sets: By Id Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Target HubSiteId of the Target Hub to associate the source Hub to. Type: Guid Parameter Sets: By Id Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SourceUrl URL of the Source Hub site to be associated with the Target Hub Site. Type: String Parameter Sets: By Url Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TargetUrl URL of the Target Hub to associate the source Hub to. Type: String Parameter Sets: By Url Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPIndexedProperty.html": {
    "href": "cmdlets/Add-PnPIndexedProperty.html",
    "title": "Add-PnPIndexedProperty | PnP PowerShell",
    "keywords": "Add-PnPIndexedProperty SYNOPSIS Marks the value of the propertybag key specified to be indexed by search. SYNTAX Add-PnPIndexedProperty [-Key] <String> [-List <ListPipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Key Key of the property bag value to be indexed Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list object or name where to set the indexed property Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPJavaScriptBlock.html": {
    "href": "cmdlets/Add-PnPJavaScriptBlock.html",
    "title": "Add-PnPJavaScriptBlock | PnP PowerShell",
    "keywords": "Add-PnPJavaScriptBlock SYNOPSIS Adds a link to a JavaScript snippet/block to a web or site collection, valid only for SharePoint classic site experience. SYNTAX Add-PnPJavaScriptBlock -Name <String> -Script <String> [-Sequence <Int32>] [-Scope <CustomActionScope>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Specify a scope as 'Site' to add the custom action to all sites in a site collection. EXAMPLES EXAMPLE 1 Add-PnPJavaScriptBlock -Name myAction -script '<script>Alert(\"This is my Script block\");</script>' -Sequence 9999 -Scope Site Add a JavaScript code block to all pages within the current site collection under the name myAction and at order 9999 EXAMPLE 2 Add-PnPJavaScriptBlock -Name myAction -script '<script>Alert(\"This is my Script block\");</script>' Add a JavaScript code block to all pages within the current web under the name myAction PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The name of the script block. Can be used to identify the script with other cmdlets or coded solutions Type: String Parameter Sets: (All) Aliases: Key Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope The scope of the script to add to. Either Web or Site, defaults to Web. 'All' is not valid for this command. Type: CustomActionScope Parameter Sets: (All) Accepted values: Web, Site, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Script The javascript block to add to the specified scope Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Sequence A sequence number that defines the order on the page Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPJavaScriptLink.html": {
    "href": "cmdlets/Add-PnPJavaScriptLink.html",
    "title": "Add-PnPJavaScriptLink | PnP PowerShell",
    "keywords": "Add-PnPJavaScriptLink SYNOPSIS Adds a link to a JavaScript file to a web or sitecollection, valid only for SharePoint classic site experience. SYNTAX Add-PnPJavaScriptLink -Name <String> -Url <String[]> [-Sequence <Int32>] [-Scope <CustomActionScope>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Creates a custom action that refers to a JavaScript file EXAMPLES EXAMPLE 1 Add-PnPJavaScriptLink -Name jQuery -Url https://code.jquery.com/jquery.min.js -Sequence 9999 -Scope Site Injects a reference to the latest v1 series jQuery library to all pages within the current site collection under the name jQuery and at order 9999 EXAMPLE 2 Add-PnPJavaScriptLink -Name jQuery -Url https://code.jquery.com/jquery.min.js Injects a reference to the latest v1 series jQuery library to all pages within the current web under the name jQuery PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name Name under which to register the JavaScriptLink Type: String Parameter Sets: (All) Aliases: Key Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope Defines if this JavaScript file will be injected to every page within the current site collection or web. All is not allowed in for this command. Default is web. Type: CustomActionScope Parameter Sets: (All) Accepted values: Web, Site, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Sequence Sequence of this JavaScript being injected. Use when you have a specific sequence with which to have JavaScript files being added to the page. I.e. jQuery library first and then jQueryUI. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url URL to the JavaScript file to inject Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPListDesign.html": {
    "href": "cmdlets/Add-PnPListDesign.html",
    "title": "Add-PnPListDesign | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Add-PnPListDesign SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Creates a new List Design on the current tenant SYNTAX Add-PnPListDesign -Title <String> -SiteScriptIds <Guid[]> [-Description <String>] [-ListColor<TenantListDesignIcon>] [-ListIcon <TenantListDesignColor>] [-ThumbnailUrl <String>] [-Connection <PnPConnection>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPListDesign -Title \"My Custom List\" -SiteScriptIds \"e84dcb46-3ab9-4456-a136-66fc6ae3d3c5\" Adds a new List Design, with the specified title and description. When applied it will run the scripts as referenced by the IDs. Use Get-PnPSiteScript to receive site Scripts. EXAMPLE 2 Add-PnPListDesign -Title \"My Company Design\" -SiteScriptIds \"6def687f-0e08-4f1e-999c-791f3af9a600\" -Description \"My description\" -ListColor Orange -ListIcon BullseyeTarget -ThumbnailUrl \"https://contoso.sharepoint.com/SiteAssets/site-thumbnail.png\" Adds a new List Design, with the specified title, description and list color, list icon and thumbnail to be shown in the template picker. When applied it will run the scripts as referenced by the IDs. Use Get-PnPSiteScript to receive Site Scripts. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the list design Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteScriptIds An array of guids of site scripts Type: Guid[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the list design Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ListColor The list color from the create list experience. Type: TenantListDesignColor Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ListIcon The list icon from the create list experience. Type: TenantListDesignIcon Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ThumbnailUrl The full URL of a thumbnail image, i.e. https://contoso.sharepoint/siteassets/image.png . If none is specified, SharePoint uses a generic image. This is the image that will be shown in the \"From your organization\" section of the \"Create\" List screen. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPListFoldersToSiteTemplate.html": {
    "href": "cmdlets/Add-PnPListFoldersToSiteTemplate.html",
    "title": "Add-PnPListFoldersToSiteTemplate | PnP PowerShell",
    "keywords": "Add-PnPListFoldersToSiteTemplate SYNOPSIS Adds folders to a list in a PnP Provisioning Template SYNTAX Add-PnPListFoldersToSiteTemplate [-Path] <String> [-List] <ListPipeBind> [-Recursive] [-IncludeSecurity] [[-TemplateProviderExtensions] <ITemplateProviderExtension[]>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPListFoldersToSiteTemplate -Path template.pnp -List 'PnPTestList' Adds top level folders from a list to an existing template and returns an in-memory PnP Site Template EXAMPLE 2 Add-PnPListFoldersToSiteTemplate -Path template.pnp -List 'PnPTestList' -Recursive Adds all folders from a list to an existing template and returns an in-memory PnP Site Template EXAMPLE 3 Add-PnPListFoldersToSiteTemplate -Path template.pnp -List 'PnPTestList' -Recursive -IncludeSecurity Adds all folders from a list with unique permissions to an in-memory PnP Site Template PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeSecurity A switch to include ObjectSecurity information. Type: SwitchParameter Parameter Sets: (All) Required: False Position: 5 Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list to query Type: ListPipeBind Parameter Sets: (All) Required: True Position: 2 Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Filename of the .PNP Open XML site template to read from, optionally including full path. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Recursive A switch parameter to include all folders in the list, or just top level folders. Type: SwitchParameter Parameter Sets: (All) Required: False Position: 4 Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateProviderExtensions Allows you to specify ITemplateProviderExtension to execute while loading the template. Type: ITemplateProviderExtension[] Parameter Sets: (All) Required: False Position: 6 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPListItem.html": {
    "href": "cmdlets/Add-PnPListItem.html",
    "title": "Add-PnPListItem | PnP PowerShell",
    "keywords": "Add-PnPListItem SYNOPSIS Adds an item to the list and sets the creation time to the current date and time. The author is set to the current authenticated user executing the cmdlet. In order to set the author to a different user, please refer to Set-PnPListItem. SYNTAX Single Add-PnPListItem [-List] <ListPipeBind> [-ContentType <ContentTypePipeBind>] [-Values <Hashtable>] [-Folder <String>] [-Label <String>] [-Connection <PnPConnection>] [<CommonParameters>] Batched Add-PnPListItem [-List] <ListPipeBind> -Batch <PnPBatch> [-ContentType <ContentTypePipeBind>] [-Values <Hashtable>] [-Folder <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPListItem -List \"Demo List\" -Values @{\"Title\" = \"Test Title\"; \"Category\"=\"Test Category\"} Adds a new list item to the \"Demo List\", and sets both the Title and Category fields with the specified values. Notice, use the internal names of fields. EXAMPLE 2 Add-PnPListItem -List \"Demo List\" -ContentType \"Company\" -Values @{\"Title\" = \"Test Title\"; \"Category\"=\"Test Category\"} Adds a new list item to the \"Demo List\", sets the content type to \"Company\" and sets both the Title and Category fields with the specified values. Notice, use the internal names of fields. EXAMPLE 3 Add-PnPListItem -List \"Demo List\" -Values @{\"MultiUserField\"=\"user1@domain.com\",\"user2@domain.com\"} Adds a new list item to the \"Demo List\" and sets the user field called MultiUserField to 2 users. Separate multiple users with a comma. EXAMPLE 4 Add-PnPListItem -List \"Demo List\" -Values @{\"Title\"=\"Sales Report\"} -Folder \"projects/europe\" Adds a new list item to the \"Demo List\". It will add the list item to the europe folder which is located in the projects folder. Folders will be created if needed. EXAMPLE 5 Add-PnPListItem -List \"Demo List\" -Values @{\"Title\"=\"Sales Report\"} -Label \"Public\" Adds a new list item to the \"Demo List\". Sets the retention label to \"Public\" if it exists on the site. EXAMPLE 6 $batch = New-PnPBatch for($i=0;$i -lt 10;$i++) { Add-PnPListItem -List \"Demo List\" -Values @{\"Title\"=\"Report $i\"} -Batch $batch } Invoke-PnPBatch -Batch $batch This creates 10 list items by using a batched approach. PARAMETERS -Batch Optional batch object used to add items in a batched manner. See examples on how to use this. Type: PnPBatch Parameter Sets: Batched Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType Specify either the name, ID or an actual content type. Type: ContentTypePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder The list relative URL of a folder. E.g. \"MyFolder\" for a folder located in the root of the list, or \"MyFolder/SubFolder\" for a folder located in the MyFolder folder which is located in the root of the list. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Label The name of the retention label. Type: String Parameter Sets: Single Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Values Use the internal names of the fields when specifying field names. Single line of text: -Values @{\"Title\" = \"Title New\"} Multiple lines of text: -Values @{\"MultiText\" = \"New text\\n\\nMore text\"} Rich text: -Values @{\"MultiText\" = \"<strong>New</strong> text\"} Choice: -Values @{\"Choice\" = \"Choice 1\"} Choice: -Values @{\"Choice\" = \"Choice 1;#Choice 2\"} Number: -Values @{\"Number\" = \"10\"} Currency: -Values @{\"Currency\" = \"10\"} Note For numeric and currency fields, when using -Batch, provide the value using the comma and dots matching the regional setting of the site you're adding the listitem to. When not using batch, you must always provide the value in the American notation, so dot for decimals and comma for thousands separators. Date and Time: -Values @{\"DateAndTime\" = \"03/13/2015 14:16\"} Lookup (id of lookup value): -Values @{\"Lookup\" = \"2\"} Multi value lookup (id of lookup values as array 1): -Values @{\"MultiLookupField\" = \"1\",\"2\"} Multi value lookup (id of lookup values as array 2): -Values @{\"MultiLookupField\" = 1,2} Multi value lookup (id of lookup values as string): -Values @{\"MultiLookupField\" = \"1,2\"} Yes/No: -Values @{\"YesNo\" = $false} Person/Group (id of user/group in Site User Info List or email of the user, separate multiple values with a comma): -Values @{\"Person\" = \"user1@domain.com\",\"21\"} Managed Metadata (single value with path to term): -Values @{\"MetadataField\" = \"CORPORATE|DEPARTMENTS|FINANCE\"} Managed Metadata (single value with id of term): -Values @{\"MetadataField\" = \"fe40a95b-2144-4fa2-b82a-0b3d0299d818\"} with Id of term Managed Metadata (multiple values with paths to terms): -Values @{\"MetadataField\" = \"CORPORATE|DEPARTMENTS|FINANCE\",\"CORPORATE|DEPARTMENTS|HR\"} Managed Metadata (multiple values with ids of terms): -Values @{\"MetadataField\" = \"fe40a95b-2144-4fa2-b82a-0b3d0299d818\",\"52d88107-c2a8-4bf0-adfa-04bc2305b593\"} Hyperlink or Picture: -Values @{\"Hyperlink\" = \"https://github.com/OfficeDev/, OfficePnp\"} Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPListItemAttachment.html": {
    "href": "cmdlets/Add-PnPListItemAttachment.html",
    "title": "Add-PnPListItemAttachment | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Add-PnPListItemAttachment SYNOPSIS Adds an attachment to the specified list item in the SharePoint list SYNTAX Upload attachment file from path Add-PnPListItemAttachment [-List] <ListPipeBind> [-Identity] <ListItemPipeBind> [-Path <String>] [-NewFileName <String>] [-Connection <PnPConnection>] [<CommonParameters>] Upload attachment file from stream Add-PnPListItemAttachment [-List] <ListPipeBind> [-Identity] <ListItemPipeBind> [-FileName <String>] [-Stream <Stream>] [-Connection <PnPConnection>] [<CommonParameters>] Create attachment file from text Add-PnPListItemAttachment [-List] <ListPipeBind> [-Identity] <ListItemPipeBind> [-FileName <String>] [-Content <text>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This cmdlet allows adding a file as an attachment to a list item in a SharePoint Online list. EXAMPLES EXAMPLE 1 Add-PnPListItemAttachement -List \"Demo List\" -Identity 1 -Path c:\\temp\\test.mp4 Adds a new attachment to the list item with Id \"1\" in the \"Demo List\" SharePoint list with file name as test.mp4 from the specified path. EXAMPLE 2 Add-PnPListItemAttachement -List \"Demo List\" -Identity 1 -FileName \"test.txt\" -Content '{ \"Test\": \"Value\" }' Adds a new attachment to the list item with Id \"1\" in the \"Demo List\" SharePoint list with file name as test.txt and content as specified. EXAMPLE 3 Add-PnPListItemAttachement -List \"Demo List\" -Identity 1 -FileName \"test.mp4\" -Stream $fileStream Adds a new attachment to the list item with Id \"1\" in the \"Demo List\" SharePoint list with file name as test.mp4 and content coming from a stream. PARAMETERS -Content Specify text of the attachment for the list item. Type: String Parameter Sets: (Upload file from text) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path The local file path Type: String Parameter Sets: (Upload file) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NewFileName Filename to give to the attachment file on SharePoint Type: String Parameter Sets: (Upload file) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FileName Filename to give to the attachment file on SharePoint Type: String Parameter Sets: (Upload file from stream, Upload file from text) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Stream Stream with the file contents Type: Stream Parameter Sets: (Upload file from stream) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Title or Url of the list. Note that when providing the name of the list, the name is case-sensitive. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object to add the attachment to. Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPListItemComment.html": {
    "href": "cmdlets/Add-PnPListItemComment.html",
    "title": "Add-PnPListItemComment | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Add-PnPListItemComment SYNOPSIS Adds a comment to the specified list item in the SharePoint list SYNTAX Single Add-PnPListItemComment [-List] <ListPipeBind> [-Identity] <ListItemPipeBind> [-Text] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPListItemComment -List \"Demo List\" -Identity \"1\" -Text \"Hello world\" Adds a new comment to the list item with Id \"1\" in the \"Demo List\" SharePoint list. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Text Specify text of the comment for the list item. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPMasterPage.html": {
    "href": "cmdlets/Add-PnPMasterPage.html",
    "title": "Add-PnPMasterPage | PnP PowerShell",
    "keywords": "Add-PnPMasterPage SYNOPSIS Adds a Masterpage SYNTAX Add-PnPMasterPage -SourceFilePath <String> -Title <String> -Description <String> [-DestinationFolderHierarchy <String>] [-UIVersion <String>] [-DefaultCssFile <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPMasterPage -SourceFilePath \"page.master\" -Title \"MasterPage\" -Description \"MasterPage for Web\" -DestinationFolderHierarchy \"SubFolder\" Adds a MasterPage from the local file \"page.master\" to the folder \"SubFolder\" in the Masterpage gallery. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultCssFile Default CSS file for the MasterPage, this Url is SiteRelative Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Description for the Masterpage Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DestinationFolderHierarchy Folder hierarchy where the MasterPage will be deployed Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SourceFilePath Path to the file which will be uploaded Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Title for the Masterpage Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UIVersion UIVersion of the Masterpage. Default = 15 Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPMicrosoft365GroupMember.html": {
    "href": "cmdlets/Add-PnPMicrosoft365GroupMember.html",
    "title": "Add-PnPMicrosoft365GroupMember | PnP PowerShell",
    "keywords": "Add-PnPMicrosoft365GroupMember SYNOPSIS Required Permissions Microsoft Graph API: All of Group.ReadWrite.All, User.ReadWrite.All Adds members to a particular Microsoft 365 Group SYNTAX Add-PnPMicrosoft365GroupMember -Identity <Microsoft365GroupPipeBind> -Users <String[]> [-RemoveExisting] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPMicrosoft365GroupMember -Identity \"Project Team\" -Users \"john@contoso.onmicrosoft.com\",\"jane@contoso.onmicrosoft.com\" Adds the provided two users as additional members to the Microsoft 365 Group named \"Project Team\" EXAMPLE 2 Add-PnPMicrosoft365GroupMember -Identity \"Project Team\" -Users \"john@contoso.onmicrosoft.com\",\"jane@contoso.onmicrosoft.com\" -RemoveExisting Sets the provided two users as the only members of the Microsoft 365 Group named \"Project Team\" by removing any current existing members first PARAMETERS -Identity The Identity of the Microsoft 365 Group to add members to Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -RemoveExisting If provided, all existing members will be removed and only those provided through Users will become members Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Users The UPN(s) of the user(s) to add to the Microsoft 365 Group as a member Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Add-PnPMicrosoft365GroupOwner.html": {
    "href": "cmdlets/Add-PnPMicrosoft365GroupOwner.html",
    "title": "Add-PnPMicrosoft365GroupOwner | PnP PowerShell",
    "keywords": "Add-PnPMicrosoft365GroupOwner SYNOPSIS Required Permissions Microsoft Graph API: All of Group.ReadWrite.All, User.ReadWrite.All Adds members to a owners of a Microsoft 365 Group SYNTAX Add-PnPMicrosoft365GroupOwner -Identity <Microsoft365GroupPipeBind> -Users <String[]> [-RemoveExisting] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPMicrosoft365GroupOwner -Identity \"Project Team\" -Users \"john@contoso.onmicrosoft.com\",\"jane@contoso.onmicrosoft.com\" Adds the provided two users as additional owners to the Microsoft 365 Group named \"Project Team\" EXAMPLE 2 Add-PnPMicrosoft365GroupOwner -Identity \"Project Team\" -Users \"john@contoso.onmicrosoft.com\",\"jane@contoso.onmicrosoft.com\" -RemoveExisting Sets the provided two users as the only owners of the Microsoft 365 Group named \"Project Team\" by removing any current existing members first PARAMETERS -Identity The Identity of the Microsoft 365 Group to add owners to Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -RemoveExisting If provided, all existing members will be removed and only those provided through Users will become members Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Users The UPN(s) of the user(s) to add to the Microsoft 365 Group as a member Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Add-PnPMicrosoft365GroupToSite.html": {
    "href": "cmdlets/Add-PnPMicrosoft365GroupToSite.html",
    "title": "Add-PnPMicrosoft365GroupToSite | PnP PowerShell",
    "keywords": "Add-PnPMicrosoft365GroupToSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Groupifies a classic team site by creating a Microsoft 365 group for it and connecting the site with the newly created group SYNTAX Add-PnPMicrosoft365GroupToSite -Url <String> -Alias <String> -DisplayName <String> [-Description <String>] [-Classification <String>] [-IsPublic] [-KeepOldHomePage] [-HubSiteId <Guid>] [-Owners <String[]>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This command allows you to add a Microsoft 365 Unified group to an existing classic site collection, also known as groupifying. EXAMPLES EXAMPLE 1 Add-PnPMicrosoft365GroupToSite -Url \"https://contoso.sharepoint.com/sites/FinanceTeamsite\" -Alias \"FinanceTeamsite\" -DisplayName \"My finance team site group\" This will groupify the FinanceTeamsite PARAMETERS -Alias Specifies the alias of the group. Cannot contain spaces. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Classification Specifies the classification of the group Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The optional description of the group Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName The display name of the group Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HubSiteId If specified the site will be associated to the hubsite as identified by this id Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsPublic Specifies if the group is public. Defaults to false. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -KeepOldHomePage Specifies if the current site home page is kept. Defaults to false. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owners The array UPN values of the group's owners Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Url of the site to be connected to an Microsoft 365 Group Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPNavigationNode.html": {
    "href": "cmdlets/Add-PnPNavigationNode.html",
    "title": "Add-PnPNavigationNode | PnP PowerShell",
    "keywords": "Add-PnPNavigationNode SYNOPSIS Adds an item to a navigation element SYNTAX Add-PnPNavigationNode -Location <NavigationType> -Title <String> [-Url <String>] [-Parent <Int32>] [-First] [-External] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Adds a menu item to either the quicklaunch, top navigation, search navigation or the footer EXAMPLES EXAMPLE 1 Add-PnPNavigationNode -Title \"Contoso\" -Url \"http://contoso.sharepoint.com/sites/contoso/\" -Location \"QuickLaunch\" Adds a navigation node to the quicklaunch. The navigation node will have the title \"Contoso\" and will link to the url \"http://contoso.sharepoint.com/sites/contoso/\" EXAMPLE 2 Add-PnPNavigationNode -Title \"Contoso USA\" -Url \"http://contoso.sharepoint.com/sites/contoso/usa/\" -Location \"QuickLaunch\" -Parent 2012 Adds a navigation node to the quicklaunch. The navigation node will have the title \"Contoso USA\", will link to the url \"http://contoso.sharepoint.com/sites/contoso/usa/\" and will have the node with id 2012 as a parent navigation node. EXAMPLE 3 Add-PnPNavigationNode -Title \"Contoso\" -Url \"http://contoso.sharepoint.com/sites/contoso/\" -Location \"QuickLaunch\" -First Adds a navigation node to the quicklaunch, as the first item. The navigation node will have the title \"Contoso\" and will link to the url \"http://contoso.sharepoint.com/sites/contoso/\" EXAMPLE 4 Add-PnPNavigationNode -Title \"Contoso Pharmaceuticals\" -Url \"http://contoso.sharepoint.com/sites/contosopharma/\" -Location \"QuickLaunch\" -External Adds a navigation node to the quicklaunch. The navigation node will have the title \"Contoso Pharmaceuticals\" and will link to the external url \"http://contoso.sharepoint.com/sites/contosopharma/\" EXAMPLE 5 Add-PnPNavigationNode -Title \"Wiki\" -Location \"QuickLaunch\" -Url \"wiki/\" Adds a navigation node to the quicklaunch. The navigation node will have the title \"Wiki\" and will link to Wiki library on the selected Web. EXAMPLE 6 Add-PnPNavigationNode -Title \"Label\" -Location \"TopNavigationBar\" -Url \"http://linkless.header/\" Adds a navigation node to the top navigation bar. The navigation node will be created as a label. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -External Indicates the destination URL is outside of the site collection Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -First Add the new menu item to beginning of the collection Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Location The location where to add the navigation node to. Either TopNavigationBar, QuickLaunch, SearchNav or Footer. Type: NavigationType Parameter Sets: (All) Accepted values: TopNavigationBar, QuickLaunch, SearchNav, Footer Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Parent The key of the parent. Leave empty to add to the top level Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the node to add Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url The url to navigate to when clicking the new menu item. This can either be absolute or relative to the Web. Fragments are not supported. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPOrgAssetsLibrary.html": {
    "href": "cmdlets/Add-PnPOrgAssetsLibrary.html",
    "title": "Add-PnPOrgAssetsLibrary | PnP PowerShell",
    "keywords": "Add-PnPOrgAssetsLibrary SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Adds a given document library as a organizational asset source SYNTAX Add-PnPOrgAssetsLibrary -LibraryUrl <String> [-ThumbnailUrl <String>] [-CdnType <SPOTenantCdnType>] [-OrgAssetType <OrgAssetType>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Adds a given document library as an organizational asset source in your SharePoint Online Tenant. You can specify multiple libraries, but all organizational asset sources you add must reside in the same site collection. Document libraries specified as organizational asset must be enabled as an Office 365 CDN source, either as private or public. The libraries must also have read rights for 'Everyone except external users' enabled on them. Either on library or on the entire site level. Only entire libraries can be configured as an organizational asset, folders cannot. It may take some time before this change will be reflected in the webinterface. EXAMPLES EXAMPLE 1 Add-PnPOrgAssetsLibrary -LibraryUrl \"https://yourtenant.sharepoint.com/sites/branding/logos\" Adds the document library with the url \"logos\" located in the sitecollection at \"https://yourtenant.sharepoint.com/sites/branding\" as an organizational asset not specifying a thumbnail image for it and enabling the document library as a public Office 365 CDN source EXAMPLE 2 Add-PnPOrgAssetsLibrary -LibraryUrl \"https://yourtenant.sharepoint.com/sites/branding/logos\" -ThumbnailUrl \"https://yourtenant.sharepoint.com/sites/branding/logos/thumbnail.jpg\" Adds the document library with the url \"logos\" located in the sitecollection at \"https://yourtenant.sharepoint.com/sites/branding\" as an organizational asset specifying the thumbnail image \"thumbnail.jpg\" residing in the same document library for it and enabling the document library as a public Office 365 CDN source EXAMPLE 3 Add-PnPOrgAssetsLibrary -LibraryUrl \"https://yourtenant.sharepoint.com/sites/branding/logos\" -CdnType Private Adds the document library with the url \"logos\" located in the sitecollection at \"https://yourtenant.sharepoint.com/sites/branding\" as an organizational asset not specifying a thumbnail image for it and enabling the document library as a private Office 365 CDN source PARAMETERS -CdnType Indicates what type of Office 365 CDN source the document library will be added to Type: SPOTenantCdnType Parameter Sets: (All) Accepted values: Public, Private Required: False Position: Named Default value: Public Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LibraryUrl The full url of the document library to be marked as one of organization's assets sources Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OrgAssetType Indicates the type of content in this library. Currently supported values are \"ImageDocumentLibrary\" and \"OfficeTemplateLibrary\". ImageDocumentLibrary is the default OrgAssetType and is best used for images. You can access the contents of this library from any site or page in the SharePoint filepicker. OfficeTemplateLibrary is the suggested type for Office files and will show up in the UI of all Office desktop apps and Office online in the templates section. Type: OrgAssetType Parameter Sets: (All) Accepted values: ImageDocumentLibrary, OfficeTemplateLibrary Required: False Position: Named Default value: ImageDocumentLibrary Accept pipeline input: False Accept wildcard characters: False -ThumbnailUrl The full url to an image that should be used as a thumbnail for showing this source. The image must reside in the same site as the document library you specify. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPOrgNewsSite.html": {
    "href": "cmdlets/Add-PnPOrgNewsSite.html",
    "title": "Add-PnPOrgNewsSite | PnP PowerShell",
    "keywords": "Add-PnPOrgNewsSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Adds the site as an organization news source in your tenant SYNTAX Add-PnPOrgNewsSite -OrgNewsSiteUrl <SitePipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPOrgNewsSite -OrgNewsSiteUrl \"https://yourtenant.sharepoint.com/sites/news\" Adds the site as one of multiple possible tenant's organizational news sites PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OrgNewsSiteUrl The url of the site to be marked as one of organization's news sites Type: SitePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPPage.html": {
    "href": "cmdlets/Add-PnPPage.html",
    "title": "Add-PnPPage | PnP PowerShell",
    "keywords": "Add-PnPPage SYNOPSIS Creates a new page SYNTAX Add-PnPPage [-Name] <String> [-LayoutType <PageLayoutType>] [-PromoteAs <PagePromoteType>] [-ContentType <ContentTypePipeBind>] [-CommentsEnabled] [-Publish] [-HeaderLayoutType <PageHeaderLayoutType>] [-ScheduledPublishDate <DateTime>] [-Translate][-TranslationLanguageCodes <Int[][]>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Creates a new page. The page will be located inside the Site Pages library of the site currently connected to. EXAMPLES EXAMPLE 1 Add-PnPPage -Name \"NewPage\" Creates a new page named 'NewPage' EXAMPLE 2 Add-PnPPage -Name \"NewPage\" -Title \"Welcome to my page\" Creates a new page NewPage.aspx with the title as provided EXAMPLE 3 Add-PnPPage -Name \"NewPage\" -ContentType \"MyPageContentType\" Creates a new page named 'NewPage' and sets the content type to the content type specified EXAMPLE 4 Add-PnPPage -Name \"NewPageTemplate\" -PromoteAs Template Creates a new page named 'NewPage' and saves as a template to the site. EXAMPLE 5 Add-PnPPage -Name \"Folder/NewPage\" Creates a new page named 'NewPage' under 'Folder' folder and saves as a template to the site. EXAMPLE 6 Add-PnPPage -Name \"NewPage\" -HeaderLayoutType ColorBlock Creates a new page named 'NewPage' using the ColorBlock header layout EXAMPLE 7 Add-PnPPage -Name \"NewPage\" Article -ScheduledPublishDate (Get-Date).AddHours(1) Creates a new page named 'NewPage' using the article layout and schedule it to be published in 1 hour from now EXAMPLE 8 Add-PnPPage -Name \"NewPage\" -Translate Creates a new page named 'NewPage' and also creates the necessary translated page for the supported languages in the site collection. EXAMPLE 9 Add-PnPPage -Name \"NewPage\" -Translate -TranslationLanguageCodes 1043 Creates a new page named 'NewPage' and also creates the necessary translated page for the specified language in the site collection. In this case, it will create the translated page for Dutch language. If the Dutch language is not enabled, it will enable the language and then create the translated page. EXAMPLE 10 Add-PnPPage -Name \"NewPage\" -Translate -TranslationLanguageCodes 1043,1035 Creates a new page named 'NewPage' and also creates the necessary translated page for the specified languages in the site collection. In this case, it will create the translated pages for Dutch and Finnish languages. If these languages are not enabled, it will enable these languages and then create the translated pages for the specified languages. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CommentsEnabled Enables or Disables the comments on the page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType Specify either the name, ID or an actual content type. Type: ContentTypePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HeaderLayoutType Type of layout used for the header Type: PageHeaderLayoutType Parameter Sets: (All) Accepted values: FullWidthImage, NoImage, ColorBlock, CutInShape Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LayoutType Specifies the layout type of the page. Type: PageLayoutType Parameter Sets: (All) Accepted values: Article, Home, SingleWebPartAppPage, RepostPage, HeaderlessSearchResults, Spaces, Topic Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name Specifies the name of the page. It will also be used to define the filename. I.e. if you provide MyPage, it will create a page MyPage.aspx inside the Site Pages library. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -PromoteAs Allows to promote the page for a specific purpose (HomePage | NewsPage) Type: PagePromoteType Parameter Sets: (All) Accepted values: None, HomePage, NewsArticle, Template Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Publish Publishes the page once it is saved. Applicable to libraries set to create major and minor versions. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ScheduledPublishDate If provided, the page will be scheduled to be published on the provided date and time. It will enable page scheduling on the Site Pages library if not already enabled. If not provided, the publishing of the page will not be scheduled. Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Translate Creates multilingual pages for all the languages specified in the site collection Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TranslationLanguageCodes Creates multilingual pages for specified languages. Type: Integer array Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPPageSection.html": {
    "href": "cmdlets/Add-PnPPageSection.html",
    "title": "Add-PnPPageSection | PnP PowerShell",
    "keywords": "Add-PnPPageSection SYNOPSIS Adds a new section to a page SYNTAX Add-PnPPageSection [-Page] <PagePipeBind> -SectionTemplate <CanvasSectionTemplate> [-Order <Int32>] [-ZoneEmphasis <Int32>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPPageSection -Page \"MyPage\" -SectionTemplate OneColumn Adds a new one-column section to the page 'MyPage' EXAMPLE 2 Add-PnPPageSection -Page \"MyPage\" -SectionTemplate ThreeColumn -Order 10 Adds a new Three columns section to the page 'MyPage' with an order index of 10 EXAMPLE 3 $page = Add-PnPPage -Name \"MyPage\" PS> Add-PnPPageSection -Page $page -SectionTemplate OneColumn Adds a new one column section to the page 'MyPage' EXAMPLE 4 $page = Add-PnPPage -Name \"MyPage\" PS> Add-PnPPageSection -Page $page -SectionTemplate OneColumn -ZoneEmphasis 2 Adds a new one column section to the page 'MyPage' and sets the background to 2 (0 is no background, 3 is highest emphasis) PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Order Sets the order of the section. (Default = 1) Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Page The name of the page Type: PagePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -SectionTemplate Specifies the columns template to use for the section. Type: CanvasSectionTemplate Parameter Sets: (All) Accepted values: OneColumn, OneColumnFullWidth, TwoColumn, ThreeColumn, TwoColumnLeft, TwoColumnRight, OneColumnVerticalSection, TwoColumnVerticalSection, ThreeColumnVerticalSection, TwoColumnLeftVerticalSection, TwoColumnRightVerticalSection Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ZoneEmphasis Sets the background of the section (default = 0) Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPPageTextPart.html": {
    "href": "cmdlets/Add-PnPPageTextPart.html",
    "title": "Add-PnPPageTextPart | PnP PowerShell",
    "keywords": "Add-PnPPageTextPart SYNOPSIS Adds a text element to a client-side page. SYNTAX Default Add-PnPPageTextPart [-Page] <PagePipeBind> -Text <String> [-Order <Int32>] [-Connection <PnPConnection>] [<CommonParameters>] Positioned Add-PnPPageTextPart [-Page] <PagePipeBind> -Text <String> [-Order <Int32>] -Section <Int32> -Column <Int32> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Adds a new text element to a section on a client-side page. EXAMPLES EXAMPLE 1 Add-PnPPageTextPart -Page \"MyPage\" -Text \"Hello World!\" Adds the text 'Hello World!' to the Page 'MyPage' PARAMETERS -Column Sets the column where to insert the text control. Type: Int32 Parameter Sets: Positioned Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Order Sets the order of the text control. (Default = 1) Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Page The name of the page. Type: PagePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Section Sets the section where to insert the text control. Type: Int32 Parameter Sets: Positioned Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Text Specifies the text to display in the text area. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPPageWebPart.html": {
    "href": "cmdlets/Add-PnPPageWebPart.html",
    "title": "Add-PnPPageWebPart | PnP PowerShell",
    "keywords": "Add-PnPWebPart SYNOPSIS Adds a web part to a page SYNTAX Default with built-in web part Add-PnPPageWebPart [-Page] <PagePipeBind> -DefaultWebPartType <DefaultClientSideWebParts> [-WebPartProperties <PropertyBagPipeBind>] [-Order <Int32>] [-Connection <PnPConnection>] [<CommonParameters>] Default with 3rd party web part Add-PnPPageWebPart [-Page] <PagePipeBind> -Component <PageComponentPipeBind> [-WebPartProperties <PropertyBagPipeBind>] [-Order <Int32>] [-Connection <PnPConnection>] [<CommonParameters>] Positioned with built-in web part Add-PnPPageWebPart [-Page] <PagePipeBind> -DefaultWebPartType <DefaultClientSideWebParts> [-WebPartProperties <PropertyBagPipeBind>] [-Order <Int32>] -Section <Int32> -Column <Int32> [-Connection <PnPConnection>] [<CommonParameters>] Positioned with 3rd party web part Add-PnPPageWebPart [-Page] <PagePipeBind> -Component <PageComponentPipeBind> [-WebPartProperties <PropertyBagPipeBind>] [-Order <Int32>] -Section <Int32> -Column <Int32> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Adds a client-side web part to an existing client-side page. EXAMPLES EXAMPLE 1 Add-PnPPageWebPart -Page \"MyPage\" -DefaultWebPartType BingMap Adds a built-in component 'BingMap' to the page called 'MyPage' EXAMPLE 2 Add-PnPPageWebPart -Page \"MyPage\" -Component \"HelloWorld\" Adds a component 'HelloWorld' to the page called 'MyPage' EXAMPLE 3 Add-PnPPageWebPart -Page \"MyPage\" -Component \"HelloWorld\" -Section 1 -Column 2 Adds a component 'HelloWorld' to the page called 'MyPage' in section 1 and column 2 PARAMETERS -Column Sets the column where to insert the web part control. Type: Int32 Parameter Sets: Positioned with built-in web part, Positioned with 3rd party web part Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Component Specifies the component instance or Id to add. Type: PageComponentPipeBind Parameter Sets: Default with 3rd party web part, Positioned with 3rd party web part Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultWebPartType Defines a default web part type to insert. Type: DefaultClientSideWebParts Parameter Sets: Default with built-in web part, Positioned with built-in web part Accepted values: ThirdParty, ContentRollup, BingMap, ContentEmbed, DocumentEmbed, Image, ImageGallery, LinkPreview, NewsFeed, NewsReel, News, PowerBIReportEmbed, QuickChart, SiteActivity, VideoEmbed, YammerEmbed, Events, GroupCalendar, Hero, List, PageTitle, People, QuickLinks, CustomMessageRegion, Divider, MicrosoftForms, Spacer, ClientWebPart, PowerApps, CodeSnippet, PageFields, Weather, YouTube, MyDocuments, YammerFullFeed, CountDown, ListProperties, MarkDown, Planner, Sites, CallToAction, Button Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Order Sets the order of the web part control. (Default = 1) Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Page The name of the page. Type: PagePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Section Sets the section where to insert the web part control. Type: Int32 Parameter Sets: Positioned with built-in web part, Positioned with 3rd party web part Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WebPartProperties The properties of the web part Type: PropertyBagPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPPlannerBucket.html": {
    "href": "cmdlets/Add-PnPPlannerBucket.html",
    "title": "add-pnpplannerbucket | PnP PowerShell",
    "keywords": "Add-PnPPlannerBucket SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Adds a new bucket to a Planner plan SYNTAX By Group Add-PnPPlannerBucket -Group <PlannerGroupPipeBind> -Plan <PlannerPlanPipeBind> -Name <String> [<CommonParameters>] By Plan Id Add-PnPPlannerBucket -PlanId <String> -Name <String> [<CommonParameters>] DESCRIPTION This cmdlets creates a new bucket for tasks in a Planner plan. EXAMPLES Example 1 Add-PnPPlannerBucket -Group \"My Group\" -Plan \"My Plan\" -Name \"Project Todos\" Adds a new bucket called \"Project Todos\" to the specified plans Example 2 Add-PnPPlannerBucket -PlanId \"QvfkTd1mc02gwxHjHC_43JYABhAy\" -Name \"Project Todos\" Adds a new bucket called \"Project Todos\" to the plan with the specified id. PARAMETERS -Group Specify the group id or group name of the group owning the plan. Type: PlannerGroupPipeBind Parameter Sets: By Group Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The name of the bucket to add Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Plan Specify the id or name of the plan to add the tasks to. Type: PlannerPlanPipeBind Parameter Sets: By Group Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PlanId A plan id to add the bucket to. Type: String Parameter Sets: By Plan Id Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPPlannerRoster.html": {
    "href": "cmdlets/Add-PnPPlannerRoster.html",
    "title": "Add-PnPPlannerRoster | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Add-PnPPlannerRoster SYNOPSIS Creates a new Microsoft Planner Roster SYNTAX Add-PnPPlannerRoster [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Creates a new Microsoft Planner Roster EXAMPLES EXAMPLE 1 Add-PnPPlannerRoster Creates a new Microsoft Planner Roster PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPPlannerRosterMember.html": {
    "href": "cmdlets/Add-PnPPlannerRosterMember.html",
    "title": "Add-PnPPlannerRosterMember | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Add-PnPPlannerRosterMember SYNOPSIS Adds a user to an existing Microsoft Planner Roster SYNTAX Add-PnPPlannerRosterMember -Identity <PlannerRosterPipeBind> -User <String> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Adds a user to an existing Microsoft Planner Roster EXAMPLES EXAMPLE 1 Add-PnPPlannerRosterMember -Identity \"6519868f-868f-6519-8f86-19658f861965\" -User \"johndoe@contoso.onmicrosoft.com\" Creates a new Microsoft Planner Roster PARAMETERS -Identity Identity of the Microsoft Planner Roster to add the member to Type: PlannerRosterPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User User principal name of the user to add as a member Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPPlannerTask.html": {
    "href": "cmdlets/Add-PnPPlannerTask.html",
    "title": "add-pnpplannertask | PnP PowerShell",
    "keywords": "Add-PnPPlannerTask SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Adds a new task to a planner bucket SYNTAX By Group Add-PnPPlannerTask -Group <PlannerGroupPipeBind> -Plan <PlannerPlanPipeBind> -Bucket <PlannerBucketPipeBind> -Title <String> [-PercentComplete <Int32>] [-DueDateTime <DateTime>] [-StartDateTime <DateTime>] [-AssignedTo <String[]] [-Priority <Int32>] [-Description <String>] [<CommonParameters>] By Plan Id Add-PnPPlannerTask -Bucket <PlannerBucketPipeBind> -PlanId <String> -Title <String> [-PercentComplete <Int32>] [-DueDateTime <DateTime>] [-StartDateTime <DateTime>] [-AssignedTo <String[]] [-Priority <Int32>] [-Description <String>] [<CommonParameters>] DESCRIPTION This cmdlet adds a new task to Planner bucket EXAMPLES Example 1 Add-PnPPlannerTask -Group \"Marketing\" -Plan \"Conference Plan\" -Bucket \"Todos\" -Title \"Design booth layout\" This cmdlet adds a new task. Example 2 Add-PnPPlannerTask -PlanId \"QvfkTd1mc02gwxHjHC_43JYABhAy\" -Bucket \"Todos\" -Title \"Design booth layout\" This cmdlet adds a new task. Example 3 Add-PnPPlannerTask -Group \"Marketing\" -Plan \"Conference Plan\" -Bucket \"Todos\" -Title \"Design booth layout\" -AssignedTo \"user@contoso.com\",\"manager@contoso.com\" This cmdlet adds a new task and assigns to user@contoso.com and manager@contoso.com PARAMETERS -Bucket The bucket to add the task too Type: PlannerBucketPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group Specify the group id or name of the group owning the plan. Type: PlannerGroupPipeBind Parameter Sets: By Group Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Plan Specify the id or name of the plan to add the tasks to. Type: PlannerPlanPipeBind Parameter Sets: By Group Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PlanId Specify the id the plan to add the tasks to. Type: String Parameter Sets: By Plan Id Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Specify the title of the task Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AssignedTo Specify the email(s) of the user to assign the task to. Type: String[] Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StartDateTime Defines the start date of the task. Type: DateTime Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DueDateTime Specify the due date. Type: DateTime Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PercentComplete Defines the percentage of completeness of the task. Type: Int32 Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Priority Sets the priority of the task. Value should be a number between 0 and 10. values 0 and 1 are interpreted as Urgent values 2, 3 and 4 are interpreted as Important values 5, 6 and 7 are interpreted as Medium values 8, 9 and 10 are interpreted as Low Type: Int32 Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Sets the description (notes) of the task. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPPublishingImageRendition.html": {
    "href": "cmdlets/Add-PnPPublishingImageRendition.html",
    "title": "Add-PnPPublishingImageRendition | PnP PowerShell",
    "keywords": "Add-PnPPublishingImageRendition SYNOPSIS Adds an Image Rendition if the Name of the Image Rendition does not already exist. This prevents creating two Image Renditions that share the same name. SYNTAX Add-PnPPublishingImageRendition -Name <String> -Width <Int32> -Height <Int32> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPPublishingImageRendition -Name \"MyImageRendition\" -Width 800 -Height 600 PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Height The height of the Image Rendition. Type: Int32 Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The display name of the Image Rendition. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Width The width of the Image Rendition. Type: Int32 Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPPublishingPage.html": {
    "href": "cmdlets/Add-PnPPublishingPage.html",
    "title": "Add-PnPPublishingPage | PnP PowerShell",
    "keywords": "Add-PnPPublishingPage SYNOPSIS Adds a publishing page SYNTAX Add-PnPPublishingPage -PageName <String> [-FolderPath <String>] -PageTemplateName <String> [-Title <String>] [-Publish] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPPublishingPage -PageName 'OurNewPage' -Title 'Our new page' -PageTemplateName 'ArticleLeft' Creates a new page based on the pagelayout 'ArticleLeft' EXAMPLE 2 Add-PnPPublishingPage -PageName 'OurNewPage' -Title 'Our new page' -PageTemplateName 'ArticleLeft' -Folder '/Pages/folder' Creates a new page based on the pagelayout 'ArticleLeft' with a site relative folder path PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FolderPath The site relative folder path of the page to be added Type: String Parameter Sets: (All) Aliases: Folder Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PageName The name of the page to be added as an aspx file Type: String Parameter Sets: (All) Aliases: Name Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PageTemplateName The name of the page layout you want to use. Specify without the .aspx extension. So 'ArticleLeft' or 'BlankWebPartPage' Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Publish Publishes the page. Also Approves it if moderation is enabled on the Pages library. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the page Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPPublishingPageLayout.html": {
    "href": "cmdlets/Add-PnPPublishingPageLayout.html",
    "title": "Add-PnPPublishingPageLayout | PnP PowerShell",
    "keywords": "Add-PnPPublishingPageLayout SYNOPSIS Adds a publishing page layout SYNTAX Add-PnPPublishingPageLayout -SourceFilePath <String> -Title <String> -Description <String> -AssociatedContentTypeID <String> [-DestinationFolderHierarchy <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPPublishingPageLayout -Title 'Our custom page layout' -SourceFilePath 'customlayout.aspx' -Description 'A custom page layout' -AssociatedContentTypeID 0x01010901 Uploads the pagelayout 'customlayout.aspx' to the current site as a 'web part page' pagelayout PARAMETERS -AssociatedContentTypeID Associated content type ID Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Description for the page layout Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DestinationFolderHierarchy Folder hierarchy where the html page layouts will be deployed Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SourceFilePath Path to the file which will be uploaded Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Title for the page layout Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPRoleDefinition.html": {
    "href": "cmdlets/Add-PnPRoleDefinition.html",
    "title": "Add-PnPRoleDefinition | PnP PowerShell",
    "keywords": "Add-PnPRoleDefinition SYNOPSIS Adds a Role Defintion (Permission Level) to the site collection in the current context SYNTAX Add-PnPRoleDefinition -RoleName <String> [-Clone <RoleDefinitionPipeBind>] [-Include <PermissionKind[]>] [-Exclude <PermissionKind[]>] [-Description <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This command allows adding a custom Role Defintion (Permission Level) to the site collection in the current context. It does not replace or remove existing Role Definitions. EXAMPLES EXAMPLE 1 Add-PnPRoleDefinition -RoleName \"CustomPerm\" Creates additional permission level with no permission flags enabled. EXAMPLE 2 Add-PnPRoleDefinition -RoleName \"NoDelete\" -Clone \"Contribute\" -Exclude DeleteListItems Creates additional permission level by cloning \"Contribute\" and removes flags DeleteListItems EXAMPLE 3 Add-PnPRoleDefinition -RoleName \"AddOnly\" -Clone \"Contribute\" -Exclude DeleteListItems, EditListItems Creates additional permission level by cloning \"Contribute\" and removes flags DeleteListItems and EditListItems EXAMPLE 4 $roleDefinition = Get-PnPRoleDefinition -Identity \"Contribute\" Add-PnPRoleDefinition -RoleName \"AddOnly\" -Clone $roleDefinition -Exclude DeleteListItems, EditListItems Creates additional permission level by cloning \"Contribute\" and removes flags DeleteListItems and EditListItems PARAMETERS -Clone An existing permission level or the name of an permission level to clone as base template. Type: RoleDefinitionPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Optional description for the new permission level. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Exclude Specifies permission flag(s) to disable. Please visit https://docs.microsoft.com/previous-versions/office/sharepoint-csom/ee536458(v%3Doffice.15) for the PermissionKind enum Type: PermissionKind[] Parameter Sets: (All) Accepted values: EmptyMask, ViewListItems, AddListItems, EditListItems, DeleteListItems, ApproveItems, OpenItems, ViewVersions, DeleteVersions, CancelCheckout, ManagePersonalViews, ManageLists, ViewFormPages, AnonymousSearchAccessList, Open, ViewPages, AddAndCustomizePages, ApplyThemeAndBorder, ApplyStyleSheets, ViewUsageData, CreateSSCSite, ManageSubwebs, CreateGroups, ManagePermissions, BrowseDirectories, BrowseUserInfo, AddDelPrivateWebParts, UpdatePersonalWebParts, ManageWeb, AnonymousSearchAccessWebLists, UseClientIntegration, UseRemoteAPIs, ManageAlerts, CreateAlerts, EditMyUserInfo, EnumeratePermissions, FullMask Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Include Specifies permission flag(s) to enable. Please visit https://docs.microsoft.com/previous-versions/office/sharepoint-csom/ee536458(v%3Doffice.15) for the PermissionKind enum Type: PermissionKind[] Parameter Sets: (All) Accepted values: EmptyMask, ViewListItems, AddListItems, EditListItems, DeleteListItems, ApproveItems, OpenItems, ViewVersions, DeleteVersions, CancelCheckout, ManagePersonalViews, ManageLists, ViewFormPages, AnonymousSearchAccessList, Open, ViewPages, AddAndCustomizePages, ApplyThemeAndBorder, ApplyStyleSheets, ViewUsageData, CreateSSCSite, ManageSubwebs, CreateGroups, ManagePermissions, BrowseDirectories, BrowseUserInfo, AddDelPrivateWebParts, UpdatePersonalWebParts, ManageWeb, AnonymousSearchAccessWebLists, UseClientIntegration, UseRemoteAPIs, ManageAlerts, CreateAlerts, EditMyUserInfo, EnumeratePermissions, FullMask Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RoleName Name of new permission level. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPSiteClassification.html": {
    "href": "cmdlets/Add-PnPSiteClassification.html",
    "title": "Add-PnPSiteClassification | PnP PowerShell",
    "keywords": "Add-PnPSiteClassification SYNOPSIS Required Permissions Microsoft Graph API: Directory.ReadWrite.All Adds one or more site classification values to the list of possible values SYNTAX Add-PnPSiteClassification -Classifications <System.Collections.Generic.List`1[System.String]> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPSiteClassification -Classifications \"Top Secret\" Adds the \"Top Secret\" classification to the already existing classification values. EXAMPLE 2 Add-PnPSiteClassification -Classifications \"Top Secret\",\"HBI\" Adds the \"Top Secret\" and the \"For Your Eyes Only\" classification to the already existing classification values. PARAMETERS -Classifications Type: System.Collections.Generic.List`1[System.String] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPSiteCollectionAdmin.html": {
    "href": "cmdlets/Add-PnPSiteCollectionAdmin.html",
    "title": "Add-PnPSiteCollectionAdmin | PnP PowerShell",
    "keywords": "Add-PnPSiteCollectionAdmin SYNOPSIS Adds one or more users as site collection administrators to the site collection in the current context SYNTAX Add-PnPSiteCollectionAdmin -Owners <System.Collections.Generic.List`1[PnP.PowerShell.Commands.Base.PipeBinds.UserPipeBind]> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This command allows adding one to many users as site collection administrators to the site collection in the current context. It does not replace or remove existing site collection administrators. You must be a Site Collection Admin to run this command. Use Set-PnPTenantSite -Owners if you are not an Admin for the site but have the SharePoint admin role. EXAMPLES EXAMPLE 1 Add-PnPSiteCollectionAdmin -Owners \"user@contoso.onmicrosoft.com\" This will add user@contoso.onmicrosoft.com as an additional site collection owner to the site collection in the current context EXAMPLE 2 Add-PnPSiteCollectionAdmin -Owners @(\"user1@contoso.onmicrosoft.com\", \"user2@contoso.onmicrosoft.com\") This will add user1@contoso.onmicrosoft.com and user2@contoso.onmicrosoft.com as additional site collection owners to the site collection in the current context EXAMPLE 3 Get-PnPUser | Where-Object Title -Like \"*Doe\" | Add-PnPSiteCollectionAdmin This will add all users with their title ending with \"Doe\" as additional site collection owners to the site collection in the current context PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owners Specifies owner(s) to add as site collection administrators. They will be added as additional site collection administrators to the site in the current context. Existing administrators will stay. Can be both users and groups. Type: System.Collections.Generic.List`1[PnP.PowerShell.Commands.Base.PipeBinds.UserPipeBind] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPSiteCollectionAppCatalog.html": {
    "href": "cmdlets/Add-PnPSiteCollectionAppCatalog.html",
    "title": "Add-PnPSiteCollectionAppCatalog | PnP PowerShell",
    "keywords": "Add-PnPSiteCollectionAppCatalog SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Adds a Site Collection scoped App Catalog to a site SYNTAX Add-PnPSiteCollectionAppCatalog [-Site <SitePipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPSiteCollectionAppCatalog This will add a SiteCollection app catalog to the currently connected to site EXAMPLE 2 Add-PnPSiteCollectionAppCatalog -Site \"https://contoso.sharepoint.com/sites/FinanceTeamsite\" This will add a SiteCollection app catalog to the specified site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site Url of the site to add the app catalog to. Type: SitePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Add-PnPSiteDesign.html": {
    "href": "cmdlets/Add-PnPSiteDesign.html",
    "title": "Add-PnPSiteDesign | PnP PowerShell",
    "keywords": "Add-PnPSiteDesign SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Creates a new Site Design on the current tenant SYNTAX Add-PnPSiteDesign -Title <String> -SiteScriptIds <Guid[]> [-Description <String>] [-IsDefault] [-PreviewImageAltText <String>] [-PreviewImageUrl <String>] [-WebTemplate <SiteWebTemplate>] [-ThumbnailUrl <String>] [-DesignPackageId <Guid>] [-Connection <PnPConnection>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPSiteDesign -Title \"My Company Design\" -SiteScriptIds \"e84dcb46-3ab9-4456-a136-66fc6ae3d3c5\",\"6def687f-0e08-4f1e-999c-791f3af9a600\" -Description \"My description\" -WebTemplate TeamSite Adds a new Site Design, with the specified title and description. When applied it will run the scripts as referenced by the IDs. Use Get-PnPSiteScript to receive Site Scripts. The WebTemplate parameter specifies that this design applies to modern Team Sites. EXAMPLE 2 Add-PnPSiteDesign -Title \"My Company Design\" -SiteScriptIds \"e84dcb46-3ab9-4456-a136-66fc6ae3d3c5\",\"6def687f-0e08-4f1e-999c-791f3af9a600\" -Description \"My description\" -WebTemplate TeamSite -ThumbnailUrl https://contoso.sharepoint.com/sites/templates/siteassets/logo.png Adds a new Site Design, with the specified title, description and logo to be shown in the template picker. When applied it will run the scripts as referenced by the IDs. Use Get-PnPSiteScript to receive Site Scripts. The WebTemplate parameter specifies that this design applies to modern Team Sites. EXAMPLE 3 Add-PnPSiteDesign -Title \"My Company Design\" -SiteScriptIds \"e84dcb46-3ab9-4456-a136-66fc6ae3d3c5\",\"6def687f-0e08-4f1e-999c-791f3af9a600\" -Description \"My description\" -WebTemplate TeamSite -ThumbnailUrl \"https://contoso.sharepoint.com/sites/templates/my images/logo.png\" Adds a new Site Design, with the specified title, description and logo to be shown in the template picker. When applied it will run the scripts as referenced by the IDs. Use Get-PnPSiteScript to receive Site Scripts. The WebTemplate parameter specifies that this design applies to modern Team Sites. Notice that when the location for the TumbnailUrl contains a space, it should be provided URL decoded, so i.e. no %20 for spaces. PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the site design Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsDefault Specifies that the site design is a default site design Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PreviewImageAltText Sets the text for the preview image. This was used in the old site designs approach and currently has no function anymore. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PreviewImageUrl Sets the url to the preview image. This was used in the old site designs approach and currently has no function anymore. Use ThumbnailUrl instead. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteScriptIds An array of guids of site scripts Type: Guid[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the site design Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WebTemplate Specifies the type of site to which this design applies Type: SiteWebTemplate Parameter Sets: (All) Accepted values: TeamSite, CommunicationSite, GrouplessTeamSite, ChannelSite Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ThumbnailUrl The full URL of a thumbnail image, i.e. https://contoso.sharepoint/siteassets/image.png . If none is specified, SharePoint uses a generic image. Recommended size is 400 x 300 pixels. This is the image that will be shown when selecting a template through \"Apply a site template\" or \"Browse templates\" shown in \"Start designing your site\" shown when creating a new site. If there are spaces in the URL, do not URL encode them, so i.e. do not use %20 where there is a space, but instead just provide the link with the space inside. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DesignPackageId Sets the design package Id of this site design. Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPSiteDesignFromWeb.html": {
    "href": "cmdlets/Add-PnPSiteDesignFromWeb.html",
    "title": "Add-PnPSiteDesignFromWeb | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Add-PnPSiteDesignFromWeb SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Creates a new Site Design on the current tenant based on the site provided through -Url or the currently connected to site if -Url is omitted SYNTAX Add-PnPSiteDesignFromWeb -Title <String> [-Description <String>] [-IsDefault] [-PreviewImageAltText <String>] [-PreviewImageUrl <String>] [-WebTemplate <SiteWebTemplate>] [-ThumbnailUrl <String>] [-DesignPackageId <Guid>] [-Lists <String[]>] [-IncludeBranding] [-IncludeLinksToExportedItems] [-IncludeRegionalSettings] [-IncludeSiteExternalSharingCapability] [-IncludeTheme] [-Connection <PnPConnection>] DESCRIPTION Creates a new Site Design on the current tenant based on the site provided through -Url or the currently connected to site if -Url is omitted. It combines the steps of Get-PnPSiteScriptFromWeb , Add-PnPSiteScript and Add-PnPSiteDesign into one cmdlet. The information returned from running the cmdlet is the information of the Site Design that has been created. EXAMPLES EXAMPLE 1 Add-PnPSiteDesignFromWeb -Title \"My Company Design\" -Description \"My description\" -WebTemplate TeamSite -IncludeAll Generates a site script based on all the components of the currently connected to site, excluding its lists and libraries and based on the generated script it will create a site script and a site design with the specified title and description for modern team sites. EXAMPLE 2 Add-PnPSiteDesignFromWeb -Title \"My Company Design\" -Description \"My description\" -WebTemplate TeamSite -IncludeAll -Lists (\"/lists/Issue list\", \"Shared Documents) Generates a site script based on all the components of the currently connected to site, including the list \"Issue list\" and the default document library \"Shared Documents\" and based on the generated script it will create a site script and a site design with the specified title and description for modern team sites. EXAMPLE 3 Add-PnPSiteDesignFromWeb -Title \"My Company Design\" -Description \"My description\" -WebTemplate TeamSite -Lists \"/lists/Issue list\" -ThumbnailUrl https://contoso.sharepoint.com/SiteAssets/logo.png Generates a site script based on the list \"Issue list\" in the current site and based on the generated script it will create a site script and a site design with the specified title, description and logo for modern team sites. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the site design Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsDefault Specifies if the site design is a default site design Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PreviewImageAltText Sets the text for the preview image. This was used in the old site designs approach and currently has no function anymore. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PreviewImageUrl Sets the url to the preview image. This was used in the old site designs approach and currently has no function anymore. Use ThumbnailUrl instead. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the site design Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WebTemplate Specifies the type of site to which this design applies Type: SiteWebTemplate Parameter Sets: (All) Accepted values: TeamSite, CommunicationSite, GrouplessTeamSite, ChannelSite Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ThumbnailUrl The full URL of a thumbnail image, i.e. https://contoso.sharepoint/siteassets/image.png . If none is specified, SharePoint uses a generic image. Recommended size is 400 x 300 pixels. This is the image that will be shown when selecting a template through \"Apply a site template\" or \"Browse templates\" shown in \"Start designing your site\" shown when creating a new site. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DesignPackageId Sets the design package Id of this site design Type: SiteWebTemplate Parameter Sets: (All) Accepted values: TeamSite, CommunicationSite Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeAll If specified will include all supported components into the Site Script except for the lists and document libraries, these need to be explicitly be specified through -Lists Type: SwitchParameter Parameter Sets: All components Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeBranding If specified will include the branding of the site into the Site Script Type: SwitchParameter Parameter Sets: Specific components Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeLinksToExportedItems If specified will include navigation links into the Site Script Type: SwitchParameter Parameter Sets: Specific components Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeRegionalSettings If specified will include the regional settings into the Site Script Type: SwitchParameter Parameter Sets: Specific components Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeSiteExternalSharingCapability If specified will include the external sharing configuration into the Site Script Type: SwitchParameter Parameter Sets: Specific components Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeTheme If specified will include the branding of the site into the Site Script Type: SwitchParameter Parameter Sets: Specific components Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Lists Allows specifying one or more site relative URLs of lists that should be included into the Site Script, i.e. \"Shared Documents\",\"List\\MyList\" Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPSiteDesignTask.html": {
    "href": "cmdlets/Add-PnPSiteDesignTask.html",
    "title": "Add-PnPSiteDesignTask | PnP PowerShell",
    "keywords": "Add-PnPSiteDesignTask SYNOPSIS This command is used to apply a published site design to a specified site collection target. It schedules the operation, allowing for the application of larger site scripts (Invoke-PnPSiteDesign is limited to 30 actions and subactions). This command is intended to replace Invoke-PnPSiteDesign and is useful when you need to apply a large number of actions or multiple site scripts. SYNTAX Add-PnPSiteDesignTask -SiteDesignId <Guid> [-WebUrl <String>] [-Connection <PnPConnection>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPSiteDesignTask -SiteDesignId 501z8c32-4147-44d4-8607-26c2f67cae82 This example applies a site design the currently connected to site. Executing the commands will schedule the site design to be queued and run against the designated site collection. EXAMPLE 2 Add-PnPSiteDesignTask -SiteDesignId 501z8c32-4147-44d4-8607-26c2f67cae82 -WebUrl \"https://contoso.sharepoint.com/sites/project\" This example applies a site design to the designated site. Executing the commands will schedule the site design to be queued and run against the designated site collection. PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteDesignId The ID of the site design to apply. Type: Guid Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WebUrl The URL of the site collection where the site design will be applied. If not specified the design will be applied to the site you connected to with Connect-PnPOnline. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPSiteScript.html": {
    "href": "cmdlets/Add-PnPSiteScript.html",
    "title": "Add-PnPSiteScript | PnP PowerShell",
    "keywords": "Add-PnPSiteScript SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Creates a new Site Script on the current tenant SYNTAX Add-PnPSiteScript -Title <String> [-Description <String>] -Content <String> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPSiteScript -Title \"My Site Script\" -Description \"A more detailed description\" -Content $script Adds a new Site Script, where $script variable contains the script. PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Content A JSON string containing the site script. See https://docs.microsoft.com/sharepoint/dev/declarative-customization/site-design-json-schema for documentation on how to create such a JSON schema. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the site script Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the site script Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPSiteScriptPackage.html": {
    "href": "cmdlets/Add-PnPSiteScriptPackage.html",
    "title": "Add-PnPSiteScriptPackage | PnP PowerShell",
    "keywords": "Add-PnPSiteScriptPackage SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Creates a new Site Script Package on the current tenant. Site script packages can contain files in addition to the site scripts which can be used to upload files to sites on which a site template gets applied. SYNTAX Add-PnPSiteScriptPackage -Title <String> [-Description <String>] -ContentPath <String> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPSiteScriptPackage -Title \"My Site Script Package\" -Description \"A more detailed description\" -ContentPath \"c:\\package.zip\" Adds a new Site Script Package PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentPath The full path to the locally stored Site Script Package to upload Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the site script package Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the site script package Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPSiteTemplate.html": {
    "href": "cmdlets/Add-PnPSiteTemplate.html",
    "title": "Add-PnPSiteTemplate | PnP PowerShell",
    "keywords": "Add-PnPSiteTemplate SYNOPSIS Adds a PnP Site Template object to a tenant template SYNTAX Add-PnPSiteTemplate -SiteTemplate <SiteTemplate> -TenantTemplate <ProvisioningHierarchy> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnpSiteTemplate -TenantTemplate $tenanttemplate -SiteTemplate $sitetemplate Adds an existing site template to an existing tenant template object PARAMETERS -SiteTemplate The template to add to the tenant template Type: SiteTemplate Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TenantTemplate The tenant template to add the template to Type: ProvisioningHierarchy Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPStoredCredential.html": {
    "href": "cmdlets/Add-PnPStoredCredential.html",
    "title": "Add-PnPStoredCredential | PnP PowerShell",
    "keywords": "Add-PnPStoredCredential SYNOPSIS Adds a credential to the Windows Credential Manager or Mac OS Key Chain Entry. SYNTAX Add-PnPStoredCredential -Name <String> -Username <String> [-Password <SecureString>] [-Overwrite] [<CommonParameters>] DESCRIPTION Adds an entry to the Windows Credential Manager or Mac OS Key Chain Entry. If you add an entry in the form of the URL of your tenant/server PnP PowerShell will check if that entry is available when you connect using Connect-PnPOnline. If it finds a matching URL it will use the associated credentials. If you add a Credential with a name of \"https://yourtenant.sharepoint.com\" it will find a match when you connect to \"https://yourtenant.sharepoint.com\" but also when you connect to \"https://yourtenant.sharepoint.com/sites/demo1\". Of course you can specify more granular entries, allow you to automatically provide credentials for different URLs. EXAMPLES EXAMPLE 1 Add-PnPStoredCredential -Name \"https://tenant.sharepoint.com\" -Username yourname@tenant.onmicrosoft.com You will be prompted to specify the password and a new entry will be added with the specified values EXAMPLE 2 Add-PnPStoredCredential -Name \"https://tenant.sharepoint.com\" -Username yourname@tenant.onmicrosoft.com -Password (ConvertTo-SecureString -String \"YourPassword\" -AsPlainText -Force) A new entry will be added with the specified values EXAMPLE 3 Add-PnPStoredCredential -Name \"https://tenant.sharepoint.com\" -Username yourname@tenant.onmicrosoft.com -Password (ConvertTo-SecureString -String \"YourPassword\" -AsPlainText -Force) Connect-PnPOnline -Url \"https://tenant.sharepoint.com/sites/mydemosite\" A new entry will be added with the specified values, and a subsequent connection to a sitecollection starting with the entry name will be made. Notice that no password prompt will occur. PARAMETERS -Name The credential to set Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Overwrite Use parameter to overwrite existing Mac OS Key Chain Entry. Not required on Windows. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Password If not specified you will be prompted to enter your password. If you want to specify this value use ConvertTo-SecureString -String 'YourPassword' -AsPlainText -Force Type: SecureString Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Username Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPTaxonomyField.html": {
    "href": "cmdlets/Add-PnPTaxonomyField.html",
    "title": "Add-PnPTaxonomyField | PnP PowerShell",
    "keywords": "Add-PnPTaxonomyField SYNOPSIS Add a taxonomy field SYNTAX Path Add-PnPTaxonomyField [-List <ListPipeBind>] -DisplayName <String> -InternalName <String> -TermSetPath <String> [-TermPathDelimiter <String>] [-Group <String>] [-Id <Guid>] [-AddToDefaultView] [-MultiValue] [-Required] [-FieldOptions <AddFieldOptions>] [-Connection <PnPConnection>] [<CommonParameters>] Id Add-PnPTaxonomyField [-List <ListPipeBind>] -DisplayName <String> -InternalName <String> -TaxonomyItemId <Guid> [-Group <String>] [-Id <Guid>] [-AddToDefaultView] [-MultiValue] [-Required] [-FieldOptions <AddFieldOptions>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Adds a taxonomy/managed metadata field to a list or as a site column. EXAMPLES EXAMPLE 1 Add-PnPTaxonomyField -DisplayName \"Test\" -InternalName \"Test\" -TermSetPath \"TestTermGroup|TestTermSet\" Adds a new taxonomy field called \"Test\" that points to the TestTermSet which is located in the TestTermGroup EXAMPLE 2 Add-PnPTaxonomyField -DisplayName \"Test\" -InternalName \"Test\" -TaxonomyItemId \"0e5fe3c6-3e6a-4d25-9f48-82a655f15992\" Adds a new taxonomy field called \"Test\" that points to the Term set with the term set id of 0e5fe3c6-3e6a-4d25-9f48-82a655f15992 PARAMETERS -AddToDefaultView Switch Parameter if this field must be added to the default view Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName The display name of the field Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FieldOptions Specifies the control settings while adding a field. See https://docs.microsoft.com/previous-versions/office/sharepoint-server/ee542202(v=office.15) for details Type: AddFieldOptions Parameter Sets: (All) Accepted values: DefaultValue, AddToDefaultContentType, AddToNoContentType, AddToAllContentTypes, AddFieldInternalNameHint, AddFieldToDefaultView, AddFieldCheckDisplayName Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group The group name to where this field belongs to Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Id The ID for the field, must be unique Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InternalName The internal name of the field Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list object or name where this field needs to be added Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MultiValue Switch Parameter if this Taxonomy field can hold multiple values Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Required Switch Parameter if the field is a required field Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TaxonomyItemId The ID of the Taxonomy item Type: Guid Parameter Sets: Id Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermPathDelimiter The path delimiter to be used, by default this is '|' Type: String Parameter Sets: Path Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermSetPath The path to the term that this needs to be bound Type: String Parameter Sets: Path Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPTeamsChannel.html": {
    "href": "cmdlets/Add-PnPTeamsChannel.html",
    "title": "Add-PnPTeamsChannel | PnP PowerShell",
    "keywords": "Add-PnPTeamsChannel SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Adds a channel to an existing Microsoft Teams instance. SYNTAX Public channel Add-PnPTeamsChannel -Team <TeamsTeamPipeBind> -DisplayName <String> [-Description <String>] [-IsFavoriteByDefault <Boolean>] [<CommonParameters>] Private channel Add-PnPTeamsChannel -Team <TeamsTeamPipeBind> -DisplayName <String> -OwnerUPN <String> [-Description <String>] [-Private] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPTeamsChannel -Team 4efdf392-8225-4763-9e7f-4edeb7f721aa -DisplayName \"My Channel\" -IsFavoriteByDefault $true Adds a new channel to the specified Teams instance and marks the channel as by default visible for members. EXAMPLE 2 Add-PnPTeamsChannel -Team MyTeam -DisplayName \"My Channel\" Adds a new channel to the specified Teams instance EXAMPLE 3 Add-PnPTeamsChannel -Team MyTeam -DisplayName \"My Channel\" -Private -OwnerUPN user1@domain.com Adds a new private channel to the specified Teams instance PARAMETERS -Description An optional description of the channel. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName The display name of the new channel. Letters, numbers and spaces are allowed. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsFavoriteByDefault Allows you to specify if the channel is by default visible for members Type: Boolean Parameter Sets: Public channel Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OwnerUPN The User Principal Name (email) of the owner of the channel. Type: String Parameter Sets: Private channel Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Private Specify to mark the channel as private. Type: SwitchParameter Parameter Sets: Private channel Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnpTeamsChannelUser.html": {
    "href": "cmdlets/Add-PnpTeamsChannelUser.html",
    "title": "Add-PnPTeamsChannelUser | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Add-PnPTeamsChannelUser SYNOPSIS Required Permissions Microsoft Graph API: ChannelMember.ReadWrite.All Adds a user to an existing Microsoft Teams private channel. SYNTAX Add-PnPTeamsChannelUser -Team <TeamsTeamPipeBind> -Channel <TeamsChannelPipeBind> -User <String> -Role <String> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPTeamsChannelUser -Team 4efdf392-8225-4763-9e7f-4edeb7f721aa -Channel \"19:796d063b63e34497aeaf092c8fb9b44e@thread.skype\" -User john@doe.com -Role Owner Adds user as an owner to the private channel. EXAMPLE 2 Add-PnPTeamsChannelUser -Team \"My Team\" -Channel \"My Private Channel\" -User john@doe.com -Role Member Adds user as a member to the private channel. PARAMETERS -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Channel The id or name of the channel to retrieve. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User Specify the UPN (e.g. john@doe.com) Type: String Parameter Sets: (User) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Role Specify the role of the user Type: String Parameter Sets: (All) Accepted values: Owner, Member Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPTeamsTab.html": {
    "href": "cmdlets/Add-PnPTeamsTab.html",
    "title": "Add-PnPTeamsTab | PnP PowerShell",
    "keywords": "Add-PnPTeamsTab SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Adds a tab to an existing Channel. Note that the -ContentUrl is a 'dynamic' parameter and will only be valid for tab types that support it. SYNTAX Add-PnPTeamsTab -Team <TeamsTeamPipeBind> -Channel <TeamsChannelPipeBind> -DisplayName <String> -Type <TeamTabType> -ContentUrl <String> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPTeamsTab -Team \"My Team\" -Channel \"My Channel\" -DisplayName \"My Tab Name\" -Type WebSite -ContentUrl \"https://aka.ms/m365pnp\" Adds a web site tab to the specified channel. EXAMPLE 2 Add-PnPTeamsTab -Team \"My Team\" -Channel \"My Channel\" -DisplayName \"My Tab Name\" -Type PDF -ContentUrl \"https://contoso.sharepoint.com/sites/Marketing/Shared Documents/General/MyFile.pdf\" -EntityId \"null\" Adds the specified PDF file from the \"Documents\" library as a tab. PARAMETERS -Channel Specify the channel id or name of the team to retrieve. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -ContentUrl Specifies the Url to add Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName Specify the tab type Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Type Specify the tab type Type: TeamTabType Parameter Sets: (All) Accepted values: WebSite, DocumentLibrary, Wiki, Planner, MicrosoftStream, MicrosoftForms, Word, Excel, PowerPoint, PDF, OneNote, PowerBI, SharePointPageAndList, Custom Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPTeamsTeam.html": {
    "href": "cmdlets/Add-PnPTeamsTeam.html",
    "title": "Add-PnPTeamsTeam | PnP PowerShell",
    "keywords": "Add-PnPTeamsTeam SYNOPSIS Adds a Teams team to an existing, group connected, site collection SYNTAX Add-PnPTeamsTeam [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This command allows you to add a Teams team to an existing, Microsoft 365 group connected, site collection. EXAMPLES EXAMPLE 1 Add-PnPTeamsTeam This create a teams team for the connected site collection PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPTeamsUser.html": {
    "href": "cmdlets/Add-PnPTeamsUser.html",
    "title": "Add-PnPTeamsUser | PnP PowerShell",
    "keywords": "Add-PnPTeamsUser SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Adds a user to an existing Microsoft Teams instance. SYNTAX User Add-PnPTeamsUser -Team <TeamsTeamPipeBind> -Channel <TeamsChannelPipeBind> -User <String> -Role <String> [<CommonParameters>] Users Add-PnPTeamsUser -Team <TeamsTeamPipeBind> -Users <String[]> -Role <String> [<CommonParameters>] DESCRIPTION This cmdlet adds one or more users to an existing Team. EXAMPLES EXAMPLE 1 Add-PnPTeamsUser -Team MyTeam -User john@doe.com -Role Owner Adds a user as an owner to the team. EXAMPLE 2 Add-PnPTeamsUser -Team MyTeam -User john@doe.com -Role Member Adds a user as a member to the team. EXAMPLE 3 Add-PnPTeamsUser -Team MyTeam -Users \"john@doe.com\",\"jane@doe.com\" -Role Member Adds multiple users as members to the team. EXAMPLE 4 Add-PnPTeamsUser -Team MyTeam -User \"jane@doe.com\" -Role Member -Channel Private Adds user as a member to a private channel named Private in MyTeam team. PARAMETERS -Role Specify the role of the user Type: String Parameter Sets: (All) Accepted values: Owner, Member Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Channel Specify the channel id or name of the team to retrieve. Type: TeamsChannelPipeBind Parameter Sets: (User) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User Specify the UPN (e.g. john@doe.com) Type: String Parameter Sets: (User) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Users Specify the users UPN (e.g. john@doe.com, jane@doe.com) Type: String array Parameter Sets: (Users) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPTenantCdnOrigin.html": {
    "href": "cmdlets/Add-PnPTenantCdnOrigin.html",
    "title": "Add-PnPTenantCdnOrigin | PnP PowerShell",
    "keywords": "Add-PnPTenantCdnOrigin SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Adds a new origin to the public or private content delivery network (CDN). SYNTAX Add-PnPTenantCdnOrigin -OriginUrl <String> -CdnType <SPOTenantCdnType> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Add a new origin to the public or private CDN, on either Tenant level or on a single Site level. Effectively, a tenant admin points out to a document library, or a folder in the document library and requests that content in that library should be retrievable by using a CDN. You must be a SharePoint Online global administrator and a site collection administrator to run the cmdlet. EXAMPLES EXAMPLE 1 Add-PnPTenantCdnOrigin -OriginUrl /sites/site/subfolder -CdnType Public This example configures a public CDN on site level. PARAMETERS -CdnType Specifies the CDN type. The valid values are: public or private. Type: SPOTenantCdnType Parameter Sets: (All) Accepted values: Public, Private Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OriginUrl Specifies a path to the doc library to be configured. It can be provided in two ways: relative path, or a mask. Relative-Relative path depends on the OriginScope. If the originScope is Tenant, a path must be a relative path under the tenant root. If the originScope is Site, a path must be a relative path under the given Site. The path must point to the valid Document Library or a folder with a document library. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPTenantSequence.html": {
    "href": "cmdlets/Add-PnPTenantSequence.html",
    "title": "Add-PnPTenantSequence | PnP PowerShell",
    "keywords": "Add-PnPTenantSequence SYNOPSIS Adds a tenant sequence object to a tenant template SYNTAX Add-PnPTenantSequence -Template <ProvisioningHierarchy> -Sequence <ProvisioningSequence> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPTenantSequence -Template $mytemplate -Sequence $mysequence Adds an existing sequence object to an existing template object EXAMPLE 2 New-PnPTenantSequence -Id \"MySequence\" | Add-PnPTenantSequence -Template $template Creates a new instance of a provisioning sequence object and sets the Id to the value specified, then the sequence is added to an existing template object PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Sequence Optional Id of the sequence Type: ProvisioningSequence Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Template The template to add the sequence to Type: ProvisioningHierarchy Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPTenantSequenceSite.html": {
    "href": "cmdlets/Add-PnPTenantSequenceSite.html",
    "title": "Add-PnPTenantSequenceSite | PnP PowerShell",
    "keywords": "Add-PnPTenantSequenceSite SYNOPSIS Adds a existing tenant sequence site object to a tenant template SYNTAX Add-PnPTenantSequenceSite -Site <ProvisioningSitePipeBind> -Sequence <ProvisioningSequence> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPTenantSequenceSite -Site $myteamsite -Sequence $mysequence Adds an existing site object to an existing template sequence PARAMETERS -Sequence The sequence to add the site to Type: ProvisioningSequence Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Site Type: ProvisioningSitePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPTenantSequenceSubSite.html": {
    "href": "cmdlets/Add-PnPTenantSequenceSubSite.html",
    "title": "Add-PnPTenantSequenceSubSite | PnP PowerShell",
    "keywords": "Add-PnPTenantSequenceSubSite SYNOPSIS Adds a tenant sequence sub site object to a tenant sequence site object SYNTAX Add-PnPTenantSequenceSubSite -SubSite <TeamNoGroupSubSite> -Site <SiteCollection> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPTenantSequenceSubSite -Site $mysite -SubSite $mysubsite Adds an existing subsite object to an existing sequence site object PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site The site to add the subsite to Type: SiteCollection Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -SubSite The subsite to add Type: TeamNoGroupSubSite Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPTenantTheme.html": {
    "href": "cmdlets/Add-PnPTenantTheme.html",
    "title": "Add-PnPTenantTheme | PnP PowerShell",
    "keywords": "Add-PnPTenantTheme SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Adds or updates a theme to the tenant. SYNTAX Add-PnPTenantTheme [-Overwrite] -Identity <ThemePipeBind> -Palette <ThemePalettePipeBind> -IsInverted <Boolean> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Adds or updates a theme to the tenant. EXAMPLES EXAMPLE 1 $themepalette = @{ \"themePrimary\" = \"#00ffff\"; \"themeLighterAlt\" = \"#f3fcfc\"; \"themeLighter\" = \"#daffff\"; \"themeLight\" = \"#affefe\"; \"themeTertiary\" = \"#76ffff\"; \"themeSecondary\" = \"#39ffff\"; \"themeDarkAlt\" = \"#00c4c4\"; \"themeDark\" = \"#009090\"; \"themeDarker\" = \"#005252\"; \"neutralLighterAlt\" = \"#f8f8f8\"; \"neutralLighter\" = \"#f4f4f4\"; \"neutralLight\" = \"#eaeaea\"; \"neutralQuaternaryAlt\" = \"#dadada\"; \"neutralQuaternary\" = \"#d0d0d0\"; \"neutralTertiaryAlt\" = \"#c8c8c8\"; \"neutralTertiary\" = \"#a6a6a6\"; \"neutralSecondaryAlt\" = \"#767676\"; \"neutralSecondary\" = \"#666666\"; \"neutralPrimary\" = \"#333\"; \"neutralPrimaryAlt\" = \"#3c3c3c\"; \"neutralDark\" = \"#212121\"; \"black\" = \"#000000\"; \"white\" = \"#fff\"; \"primaryBackground\" = \"#fff\"; \"primaryText\" = \"#333\" } Add-PnPTenantTheme -Identity \"MyCompanyTheme\" -Palette $themepalette -IsInverted $false This example adds a theme to the current tenant. EXAMPLE 2 $themepalette = @{ \"themePrimary\" = \"#00ffff\"; \"themeLighterAlt\" = \"#f3fcfc\"; \"themeLighter\" = \"#daffff\"; \"themeLight\" = \"#affefe\"; \"themeTertiary\" = \"#76ffff\"; \"themeSecondary\" = \"#39ffff\"; \"themeDarkAlt\" = \"#00c4c4\"; \"themeDark\" = \"#009090\"; \"themeDarker\" = \"#005252\"; \"neutralLighterAlt\" = \"#f8f8f8\"; \"neutralLighter\" = \"#f4f4f4\"; \"neutralLight\" = \"#eaeaea\"; \"neutralQuaternaryAlt\" = \"#dadada\"; \"neutralQuaternary\" = \"#d0d0d0\"; \"neutralTertiaryAlt\" = \"#c8c8c8\"; \"neutralTertiary\" = \"#a6a6a6\"; \"neutralSecondaryAlt\" = \"#767676\"; \"neutralSecondary\" = \"#666666\"; \"neutralPrimary\" = \"#333\"; \"neutralPrimaryAlt\" = \"#3c3c3c\"; \"neutralDark\" = \"#212121\"; \"black\" = \"#000000\"; \"white\" = \"#fff\"; \"primaryBackground\" = \"#fff\"; \"primaryText\" = \"#333\" } Add-PnPTenantTheme -Identity \"MyCompanyTheme\" -Palette $themepalette -IsInverted $false -Overwrite This example overwrites an existing theme on the current tenant. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name of the theme to add or update Type: ThemePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -IsInverted If the theme is inverted or not Type: Boolean Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Overwrite Use this parameter to allow existing theme with the same name to be overwritten. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Palette The palette to add. See examples for more information. Type: ThemePalettePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPTermToTerm.html": {
    "href": "cmdlets/Add-PnPTermToTerm.html",
    "title": "Add-PnPTermToTerm | PnP PowerShell",
    "keywords": "Add-PnPTermToTerm SYNOPSIS Adds a new term to an existing term. SYNTAX Add-PnPTermToTerm -ParentTerm <Guid|Term> -Name <String> [-Id <Guid>] [-Lcid <Int32>] [-LocalCustomProperties <Hashtable>] [-TermStore <Guid>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This cmdlet adds a new taxonomy term as a child term to an existing term. EXAMPLES EXAMPLE 1 Add-PnPTermToTerm -ParentTerm 2d1f298b-804a-4a05-96dc-29b667adec62 -Name SubTerm -CustomProperties @{\"Department\"=\"Marketing\"} Creates a new taxonomy child term named \"SubTerm\" in the specified term by id 2d1f298b-804a-4a05-96dc-29b667adec62. EXAMPLE 2 $parentTerm = Get-PnPTerm -Name Marketing -TermSet Departments -TermGroup Corporate Add-PnPTermToTerm -ParentTerm $parentTerm -Name \"Conference Team\" Creates a new taxonomy child term named \"Conference Team\" in the specified term called Marketing which is located in the Departments term set. PARAMETERS -ParentTerm The name of the term. Type: Guid or Term Object Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Name The name of the term. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Description Descriptive text to help users understand the intended use of this term. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Id The Id to use for the term; if not specified, or the empty GUID, a random GUID is generated and used. Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Lcid The locale id to use for the term. Defaults to the current locale id. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CustomProperties Custom Properties Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LocalCustomProperties Custom Properties Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPView.html": {
    "href": "cmdlets/Add-PnPView.html",
    "title": "Add-PnPView | PnP PowerShell",
    "keywords": "Add-PnPView SYNOPSIS Adds a view to a list SYNTAX Add-PnPView [-List] <ListPipeBind> -Title <String> [-Query <String>] -Fields <String[]> [-ViewType <ViewType>] [-RowLimit <UInt32>] [-Personal] [-SetAsDefault] [-Paged] [-Aggregations <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPView -List \"Demo List\" -Title \"Demo View\" -Fields \"Title\",\"Address\" Adds a view named \"Demo view\" to the \"Demo List\" list. EXAMPLE 2 Add-PnPView -List \"Demo List\" -Title \"Demo View\" -Fields \"Title\",\"Address\" -Paged Adds a view named \"Demo view\" to the \"Demo List\" list and makes sure there's paging on this view. EXAMPLE 3 Add-PnPView -List \"Demo List\" -Title \"Demo View\" -Fields \"Title\",\"Address\" -Aggregations \"<FieldRef Name='Title' Type='COUNT'/>\" Adds a view named \"Demo view\" to the \"Demo List\" list and sets the totals (aggregations) to Count on the Title field. PARAMETERS -Aggregations A valid XML fragment containing one or more Aggregations Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Fields A list of fields to add. Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Paged If specified, the view will have paging. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Personal If specified, a personal view will be created. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Query A valid CAML Query. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RowLimit The row limit for the view. Defaults to 30. Type: UInt32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SetAsDefault If specified, the view will be set as the default view for the list. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the view. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ViewType The type of view to add. Type: ViewType Parameter Sets: (All) Accepted values: None, Html, Grid, Recurrence, Chart, Calendar, Gantt Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPViewsFromXML.html": {
    "href": "cmdlets/Add-PnPViewsFromXML.html",
    "title": "Add-PnPViewsFromXML | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Add-PnPViewsFromXML SYNOPSIS Adds one or more views to a list from an XML string. SYNTAX Add-PnPViewsFromXML [-List] <ListPipeBind> [-ViewsXML <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This cmdlet allows the creation of one or more views on a SharePoint Online list based on passing in an XML definition with the view details. EXAMPLES EXAMPLE 1 $viewsXML = @\" <ListViews> <List Type='GenericList'> <View Name='Demo View' ViewTypeKind='Html' OrderedView='TRUE' ViewFields='Author,Created,Editor,Modified' RowLimit='30' DefaultView='TRUE'> <ViewQuery> <OrderBy> <FieldRef Name='ID' Ascending='FALSE'/> </OrderBy> </ViewQuery> </View> </List> </ListViews> \"@ Add-PnPViewsFromXML -List \"Demo List\" -ViewsXML $viewsXML Adds one view named \"Demo view\" to the \"Demo List\" list from the XML string. EXAMPLE 2 $viewsXML = @\" <ListViews> <List Type='GenericList'> <View Name='Demo View' ViewTypeKind='Html' OrderedView='TRUE' ViewFields='Author,Created,Editor,Modified' RowLimit='30' DefaultView='TRUE'> <ViewQuery> <OrderBy> <FieldRef Name='ID' Ascending='FALSE'/> </OrderBy> </ViewQuery> </View> </List> <List Type='GenericList'> <View Name='Created By Me' ViewTypeKind='Html' OrderedView='TRUE' ViewFields='Author,Created,Editor,Modified' RowLimit='30' DefaultView='FALSE'> <ViewQuery> <Where> <Eq> <FieldRef Name='Author' /> <Value Type='Integer'> <UserID Type='Integer' /> </Value> </Eq> </Where> <OrderBy> <FieldRef Name='Created' Ascending='FALSE'/> </OrderBy> </ViewQuery> </View> </List> </ListViews> \"@ Add-PnPViewsFromXML -List \"Demo List\" -ViewsXML $viewsXML Adds two views named \"Demo view\" and \"Created By Me\" to the \"Demo List\" list from the XML string. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID or Url of the list to add the view to. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -ViewsXML The XML string of the view(s) that you want to add to the list. Type: string Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPVivaConnectionsDashboardACE.html": {
    "href": "cmdlets/Add-PnPVivaConnectionsDashboardACE.html",
    "title": "Add-PnPVivaConnectionsDashboardACE | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Add-PnPVivaConnectionsDashboardACE SYNOPSIS Add an Adaptive card extension in the Viva connections dashboard page. This requires that you connect to a SharePoint Home site and have configured the Viva connections page. SYNTAX Add-PnPVivaConnectionsDashboardACE [-Identity <DefaultACE>] [-Title <string>] [-PropertiesJSON <string>] [-Description <string>] [-IconProperty <string>] [-Order <Int>][-CardSize <CardSize>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPVivaConnectionsDashboardACE -Identity CardDesigner -Order 3 -Title \"Hello there\" -PropertiesJSON $myProperties -CardSize Large -Description \"ACE description\" -Iconproperty \"https://cdn.hubblecontent.osi.office.net/m365content/publish/002f8bf9-b8ee-4689-ae97-e411b756099d/691108002.jpg\" Add an Adaptive card extension of type Card Designer in the Viva connections dashboard page with Title, Description, IconProperty, Order , CardSize and PropertiesJSON of the ACE. EXAMPLE 2 Add-PnPVivaConnectionsDashboardACE -Identity ThirdPartyApp -Order 1 -Title \"Hello there\" -PropertiesJSON $myProperties -CardSize Medium -Description \"ACE with description\" -Iconproperty \"https://cdn.hubblecontent.osi.office.net/m365content/publish/002f8bf9-b8ee-4689-ae97-e411b756099d/691108002.jpg\" Add an Adaptive card extension of type Third party(custom adaptive card) in the Viva connections dashboard page with Title, Description, IconProperty, Order , CardSize and PropertiesJSON of the ACE. EXAMPLE 3 Add-PnPVivaConnectionsDashboardACE -Identity AssignedTasks -Order 2 -Title \"Tasks\" -PropertiesJSON $myProperties -CardSize Medium -Description \"My Assigned tasks\" -Iconproperty \"https://cdn.hubblecontent.osi.office.net/m365content/publish/002f8bf9-b8ee-4689-ae97-e411b756099d/691108002.jpg\" Add an Adaptive card extension of type AssignedTasks in the Viva connections dashboard page with Title, Description, IconProperty, Order , CardSize and PropertiesJSON of the ACE. PARAMETERS -Identity The Id of the Adaptive Card on the Viva connections dashboard page. Supported values are: Approvals AssignedTasks CardDesigner Shifts TeamsApp ThirdParty WebLink Type: DefaultACE Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The Tite of the Adaptive Card extension. Type: string Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The Description of the Adaptive Card extension. Type: string Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IconProperty The Icon used by Adaptive Card extension. Type: string Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PropertiesJSON The properties of the Adaptive Card extension. You can get the properties by executing Get-PnPVivaConnectionsDashboardACE and then use the JSONProperties . Type: string Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Order The Order of appearance of the Adaptive Card extension on the Viva connections dashboard page. The default value is 0. Type: Int Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CardSize The size of the Adaptive Card extension. The available values are Large or Medium . Default card size is Medium Type: CardSize Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPWebhookSubscription.html": {
    "href": "cmdlets/Add-PnPWebhookSubscription.html",
    "title": "Add-PnPWebhookSubscription | PnP PowerShell",
    "keywords": "Add-PnPWebhookSubscription SYNOPSIS Adds a new Webhook subscription SYNTAX Add-PnPWebhookSubscription [-List <ListPipeBind>] -NotificationUrl <String> [-ExpirationDate <DateTime>] [-ClientState <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPWebhookSubscription -List MyList -NotificationUrl https://my-func.azurewebsites.net/webhook Add a Webhook subscription for the specified notification Url on the list MyList EXAMPLE 2 Add-PnPWebhookSubscription -List MyList -NotificationUrl https://my-func.azurewebsites.net/webhook -ExpirationDate \"2017-09-01\" Add a Webhook subscription for the specified notification Url on the list MyList with an expiration date set on September 1st, 2017 EXAMPLE 3 Add-PnPWebhookSubscription -List MyList -NotificationUrl https://my-func.azurewebsites.net/webhook -ExpirationDate \"2017-09-01\" -ClientState \"Hello State!\" Add a Webhook subscription for the specified notification Url on the list MyList with an expiration date set on September 1st, 2017 with a specific client state PARAMETERS -ClientState A client state information that will be passed through notifications Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExpirationDate The date at which the Webhook subscription will expire. (Default: 6 months from today) Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list object or name where the Webhook subscription will be added to Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NotificationUrl The URL of the Webhook endpoint that will be notified of the change Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPWebPartToWebPartPage.html": {
    "href": "cmdlets/Add-PnPWebPartToWebPartPage.html",
    "title": "Add-PnPWebPartToWebPartPage | PnP PowerShell",
    "keywords": "Add-PnPWebPartToWebPartPage SYNOPSIS Adds a web part to a web part page in a specified zone SYNTAX XML Add-PnPWebPartToWebPartPage -ServerRelativePageUrl <String> -Xml <String> -ZoneId <String> -ZoneIndex <Int32> [-Connection <PnPConnection>] [<CommonParameters>] FILE Add-PnPWebPartToWebPartPage -ServerRelativePageUrl <String> -Path <String> -ZoneId <String> -ZoneIndex <Int32> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPWebPartToWebPartPage -ServerRelativePageUrl \"/sites/demo/sitepages/home.aspx\" -Path \"c:\\myfiles\\listview.webpart\" -ZoneId \"Header\" -ZoneIndex 1 This will add the web part as defined by the XML in the listview.webpart file to the specified page in the specified zone and with the order index of 1 EXAMPLE 2 Add-PnPWebPartToWebPartPage -ServerRelativePageUrl \"/sites/demo/sitepages/home.aspx\" -XML $webpart -ZoneId \"Header\" -ZoneIndex 1 This will add the web part as defined by the XML in the $webpart variable to the specified page in the specified zone and with the order index of 1 PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path A path to a web part file on a the file system. Type: String Parameter Sets: FILE Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativePageUrl Server Relative Url of the page to add the web part to. Type: String Parameter Sets: (All) Aliases: PageUrl Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Xml A string containing the XML for the web part. Type: String Parameter Sets: XML Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ZoneId The Zone Id where the web part must be placed Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ZoneIndex The Zone Index where the web part must be placed Type: Int32 Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPWebPartToWikiPage.html": {
    "href": "cmdlets/Add-PnPWebPartToWikiPage.html",
    "title": "Add-PnPWebPartToWikiPage | PnP PowerShell",
    "keywords": "Add-PnPWebPartToWikiPage SYNOPSIS Adds a web part to a wiki page in a specified table row and column SYNTAX XML Add-PnPWebPartToWikiPage -ServerRelativePageUrl <String> -Xml <String> -Row <Int32> -Column <Int32> [-AddSpace] [-Connection <PnPConnection>] [<CommonParameters>] FILE Add-PnPWebPartToWikiPage -ServerRelativePageUrl <String> -Path <String> -Row <Int32> -Column <Int32> [-AddSpace] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPWebPartToWikiPage -ServerRelativePageUrl \"/sites/demo/sitepages/home.aspx\" -Path \"c:\\myfiles\\listview.webpart\" -Row 1 -Column 1 This will add the web part as defined by the XML in the listview.webpart file to the specified page in the first row and the first column of the HTML table present on the page EXAMPLE 2 Add-PnPWebPartToWikiPage -ServerRelativePageUrl \"/sites/demo/sitepages/home.aspx\" -XML $webpart -Row 1 -Column 1 This will add the web part as defined by the XML in the $webpart variable to the specified page in the first row and the first column of the HTML table present on the page PARAMETERS -AddSpace Must there be a extra space between the web part Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Column Column number where the web part must be placed Type: Int32 Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path A path to a web part file on a the file system. Type: String Parameter Sets: FILE Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Row Row number where the web part must be placed Type: Int32 Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativePageUrl Full server relative url of the web part page, e.g. /sites/demo/sitepages/home.aspx Type: String Parameter Sets: (All) Aliases: PageUrl Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Xml A string containing the XML for the web part. Type: String Parameter Sets: XML Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Add-PnPWikiPage.html": {
    "href": "cmdlets/Add-PnPWikiPage.html",
    "title": "Add-PnPWikiPage | PnP PowerShell",
    "keywords": "Add-PnPWikiPage SYNOPSIS Adds a wiki page SYNTAX WithContent Add-PnPWikiPage -ServerRelativePageUrl <String> -Content <String> [-Connection <PnPConnection>] [<CommonParameters>] WithLayout Add-PnPWikiPage -ServerRelativePageUrl <String> -Layout <WikiPageLayout> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Add-PnPWikiPage -PageUrl '/sites/demo1/pages/wikipage.aspx' -Content 'New WikiPage' Creates a new wiki page '/sites/demo1/pages/wikipage.aspx' and sets the content to 'New WikiPage' PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Content Type: String Parameter Sets: WithContent Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Layout Type: WikiPageLayout Parameter Sets: WithLayout Accepted values: OneColumn, OneColumnSideBar, TwoColumns, TwoColumnsHeader, TwoColumnsHeaderFooter, ThreeColumns, ThreeColumnsHeader, ThreeColumnsHeaderFooter, Custom Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativePageUrl The server relative page URL Type: String Parameter Sets: (All) Aliases: PageUrl Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Approve-PnPTenantServicePrincipalPermissionRequest.html": {
    "href": "cmdlets/Approve-PnPTenantServicePrincipalPermissionRequest.html",
    "title": "Approve-PnPTenantServicePrincipalPermissionRequest | PnP PowerShell",
    "keywords": "Approve-PnPTenantServicePrincipalPermissionRequest SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Approves a permission request for the current tenant's \"SharePoint Online Client\" service principal SYNTAX Approve-PnPTenantServicePrincipalPermissionRequest -RequestId <Guid> [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Approves a permission request for the current tenant's \"SharePoint Online Client\" service principal The return value of a successful call is a permission grant object. To get the collection of permission grants for the \"SharePoint Online Client\" service principal, use the Get-PnPTenantServicePrincipalPermissionGrants command. Approving a permission request also removes that request from the list of permission requests. EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RequestId Type: Guid Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Clear-PnPAzureADGroupMember.html": {
    "href": "cmdlets/Clear-PnPAzureADGroupMember.html",
    "title": "Clear-PnPAzureADGroupMember | PnP PowerShell",
    "keywords": "Clear-PnPAzureADGroupMember SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.ReadWrite.All, Group.ReadWrite.All, GroupMember.ReadWrite.All Removes all current members from a particular Azure Active Directory group. This can be a security, distribution or Microsoft 365 group. SYNTAX Clear-PnPAzureADGroupMember -Identity <AzureADGroupPipeBind> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Clear-PnPAzureADGroupMember -Identity \"Project Team\" Removes all the current members from the Azure Active Directory group named \"Project Team\" PARAMETERS -Identity The Identity of the Azure Active Directory group to remove all members from Type: AzureADGroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Clear-PnPAzureADGroupOwner.html": {
    "href": "cmdlets/Clear-PnPAzureADGroupOwner.html",
    "title": "Clear-PnPAzureADGroupOwner | PnP PowerShell",
    "keywords": "Clear-PnPAzureADGroupOwner SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.ReadWrite.All, Group.ReadWrite.All Removes all current owners from a particular Azure Active Directory group. This can be a security, distribution or Microsoft 365 group. SYNTAX Clear-PnPAzureADGroupOwner -Identity <AzureADGroupPipeBind> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Clear-PnPAzureADGroupOwner -Identity \"Project Team\" Removes all the current owners from the Azure Active Directory group named \"Project Team\" PARAMETERS -Identity The Identity of the Azure Active Directory group to remove all owners from Type: AzureADGroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Clear-PnPDefaultColumnValues.html": {
    "href": "cmdlets/Clear-PnPDefaultColumnValues.html",
    "title": "Clear-PnPDefaultColumnValues | PnP PowerShell",
    "keywords": "Clear-PnPDefaultColumnValues SYNOPSIS Clear default column values for a document library SYNTAX Clear-PnPDefaultColumnValues [-List] <ListPipeBind> -Field <FieldPipeBind> [-Folder <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Clear default column values for a document library, per folder, or for the root folder if the folder parameter has not been specified. EXAMPLES EXAMPLE 1 Clear-PnPDefaultColumnValues -List Documents -Field MyField Clears the default value for the field MyField on a library EXAMPLE 2 Clear-PnPDefaultColumnValues -List Documents -Field MyField -Folder A Clears the default value for the field MyField on the folder A on a library PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Field The internal name, id or a reference to a field Type: FieldPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder A library relative folder path, if not specified it will set the default column values on the root folder of the library ('/') Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Name or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Clear-PnPListItemAsRecord.html": {
    "href": "cmdlets/Clear-PnPListItemAsRecord.html",
    "title": "Clear-PnPListItemAsRecord | PnP PowerShell",
    "keywords": "Clear-PnPListItemAsRecord SYNOPSIS Undeclares a list item as a record SYNTAX Clear-PnPListItemAsRecord [-List] <ListPipeBind> -Identity <ListItemPipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Clear-PnPListItemAsRecord -List \"Documents\" -Identity 4 Undeclares the document in the documents library with id 4 as a record PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Clear-PnPMicrosoft365GroupMember.html": {
    "href": "cmdlets/Clear-PnPMicrosoft365GroupMember.html",
    "title": "Clear-PnPMicrosoft365GroupMember | PnP PowerShell",
    "keywords": "Clear-PnPMicrosoft365GroupMember SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.ReadWrite.All, Group.ReadWrite.All, GroupMember.ReadWrite.All Removes all current members from a particular Microsoft 365 Group SYNTAX Clear-PnPMicrosoft365GroupMember -Identity <Microsoft365GroupPipeBind> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Clear-PnPMicrosoft365GroupMember -Identity \"Project Team\" Removes all the current members from the Microsoft 365 Group named \"Project Team\" PARAMETERS -Identity The Identity of the Microsoft 365 Group to remove all members from Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Clear-PnPMicrosoft365GroupOwner.html": {
    "href": "cmdlets/Clear-PnPMicrosoft365GroupOwner.html",
    "title": "Clear-PnPMicrosoft365GroupOwner | PnP PowerShell",
    "keywords": "Clear-PnPMicrosoft365GroupOwner SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.ReadWrite.All, Group.ReadWrite.All Removes all current owners from a particular Microsoft 365 Group (aka Unified Group) SYNTAX Clear-PnPMicrosoft365GroupOwner -Identity <Microsoft365GroupPipeBind> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Clear-PnPMicrosoft365GroupOwner -Identity \"Project Team\" Removes all the current owners from the Microsoft 365 Group named \"Project Team\" PARAMETERS -Identity The Identity of the Microsoft 365 Group to remove all owners from Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Clear-PnpRecycleBinItem.html": {
    "href": "cmdlets/Clear-PnpRecycleBinItem.html",
    "title": "Clear-PnPRecycleBinItem | PnP PowerShell",
    "keywords": "Clear-PnPRecycleBinItem SYNOPSIS Permanently deletes all or a specific recycle bin item SYNTAX All (Default) Clear-PnPRecycleBinItem [-All] [-SecondStageOnly] [-Force] [-RowLimit <Int32>] [-Connection <PnPConnection>] [<CommonParameters>] Identity Clear-PnPRecycleBinItem -Identity <RecycleBinItemPipeBind> [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPRecycleBinItem | Where-Object LeafName -like \"*.docx\" | Clear-PnpRecycleBinItem Permanently deletes all the items in the first and second stage recycle bins of which the file names have the .docx extension EXAMPLE 2 Clear-PnPRecycleBinItem -Identity 72e4d749-d750-4989-b727-523d6726e442 Permanently deletes the recycle bin item with Id 72e4d749-d750-4989-b727-523d6726e442 from the recycle bin EXAMPLE 3 Clear-PnPRecycleBinItem -Identity $item -Force Permanently deletes the recycle bin item stored under variable $item from the recycle bin without asking for confirmation from the end user first EXAMPLE 4 Clear-PnPRecycleBinItem -All -RowLimit 10000 Permanently deletes up to 10,000 items in the recycle bin PARAMETERS -All Clears all items Type: SwitchParameter Parameter Sets: All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be asked to restore the recycle bin item Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Id of the recycle bin item or the recycle bin item itself to permanently delete Type: RecycleBinItemPipeBind Parameter Sets: Identity Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -RowLimit Limits deletion to specified number of items Type: Int32 Parameter Sets: All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SecondStageOnly If provided, only all the items in the second stage recycle bin will be cleared Type: SwitchParameter Parameter Sets: All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Clear-PnPTenantAppCatalogUrl.html": {
    "href": "cmdlets/Clear-PnPTenantAppCatalogUrl.html",
    "title": "Clear-PnPTenantAppCatalogUrl | PnP PowerShell",
    "keywords": "Clear-PnPTenantAppCatalogUrl SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes the url of the tenant scoped app catalog. It will not delete the site collection itself. SYNTAX Clear-PnPTenantAppCatalogUrl [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Clear-PnPTenantAppCatalogUrl Removes the url of the tenant scoped app catalog PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Clear-PnPTenantRecycleBinItem.html": {
    "href": "cmdlets/Clear-PnPTenantRecycleBinItem.html",
    "title": "Clear-PnPTenantRecycleBinItem | PnP PowerShell",
    "keywords": "Clear-PnPTenantRecycleBinItem SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Permanently deletes a site collection from the tenant scoped recycle bin SYNTAX Clear-PnPTenantRecycleBinItem -Url <String> [-Wait] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION The Clear-PnPTenantRecycleBinItem cmdlet allows a site collection that has been deleted and still exists in the tenant recycle bin to be permanently deleted from the recycle bin as well. EXAMPLES EXAMPLE 1 Clear-PnPTenantRecycleBinItem -Url \"https://tenant.sharepoint.com/sites/contoso\" This will permanently delete site collection with the url 'https://tenant.sharepoint.com/sites/contoso' from the tenant recycle bin EXAMPLE 2 Clear-PnPTenantRecycleBinItem -Url \"https://tenant.sharepoint.com/sites/contoso\" -Wait This will permanently delete site collection with the url 'https://tenant.sharepoint.com/sites/contoso' from the tenant recycle bin and will wait with executing further PowerShell commands until the operation has completed PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be asked to permanently delete the site collection from the tenant recycle bin Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Url of the site collection to permanently delete from the tenant recycle bin Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Wait If provided, the PowerShell execution will halt until the operation has completed Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Connect-PnPOnline.html": {
    "href": "cmdlets/Connect-PnPOnline.html",
    "title": "Connect-PnPOnline | PnP PowerShell",
    "keywords": "Connect-PnPOnline SYNOPSIS Connect to a SharePoint site SYNTAX Credentials (Default) Connect-PnPOnline [-ReturnConnection] [-Url] <String> [-Credentials <CredentialPipeBind>] [-CurrentCredentials] [-CreateDrive] [-DriveName <String>] [-ClientId <String>] [-RedirectUri <String>] [-AzureEnvironment <AzureEnvironment>] [-TenantAdminUrl <String>] [-TransformationOnPrem] [-ValidateConnection] [<CommonParameters>] SharePoint ACS (Legacy) App Only Connect-PnPOnline [-ReturnConnection] [-Url] <String> [-Realm <String>] -ClientSecret <String> [-CreateDrive] [-DriveName <String>] -ClientId <String> [-AzureEnvironment <AzureEnvironment>] [-TenantAdminUrl <String>] [-ValidateConnection] [<CommonParameters>] App-Only with Azure Active Directory Connect-PnPOnline [-ReturnConnection] [-Url] <String> [-CreateDrive] [-DriveName <String>] -ClientId <String> -Tenant <String> [-CertificatePath <String>] [-CertificateBase64Encoded <String>] [-CertificatePassword <SecureString>] [-AzureEnvironment <AzureEnvironment>] [-TenantAdminUrl <String>] [-ValidateConnection] [<CommonParameters>] App-Only with Azure Active Directory using a certificate from the Windows Certificate Management Store by thumbprint Connect-PnPOnline [-ReturnConnection] [-Url] <String> [-CreateDrive] [-DriveName <String>] -ClientId <String> -Tenant <String> -Thumbprint <String> [-AzureEnvironment <AzureEnvironment>] [-TenantAdminUrl <String>] [-ValidateConnection] [<CommonParameters>] PnP Management Shell / DeviceLogin Connect-PnPOnline [-ReturnConnection] [-Url] <String> [-CreateDrive] [-DriveName <String>] [-DeviceLogin] [-LaunchBrowser] [-ClientId <String>] [-AzureEnvironment <AzureEnvironment>] [-ValidateConnection] [<CommonParameters>] Web Login for Multi Factor Authentication Connect-PnPOnline [-ReturnConnection] [-Url] <String> [-CreateDrive] [-DriveName <String>] [-TenantAdminUrl <String>] [-UseWebLogin] [-ForceAuthentication] [-ValidateConnection] [<CommonParameters>] Interactive for Multi Factor Authentication Connect-PnPOnline -Interactive [-ReturnConnection] -Url <String> [-CreateDrive] [-DriveName <String>] [-LaunchBrowser] [-ClientId <String>] [-AzureEnvironment <AzureEnvironment>] [-TenantAdminUrl <String>] [-ForceAuthentication] [-ValidateConnection] [<CommonParameters>] On-premises login for page transformation from on-premises SharePoint to SharePoint Online Connect-PnPOnline -Url <String> -TransformationOnPrem [-CurrentCredential] Access Token Connect-PnPOnline [-ReturnConnection] [-Url] <String> [-AzureEnvironment <AzureEnvironment>] -AccessToken <String> [<CommonParameters>] Managed Identity Connect-PnPOnline [-NoTelemetry] [<CommonParameters>] DESCRIPTION Connects to a SharePoint site or another API and creates a context that is required for the other PnP Cmdlets. See https://pnp.github.io/powershell/articles/connecting.html for more information on the options to connect. EXAMPLES EXAMPLE 1 Connect-PnPOnline -Url \"https://contoso.sharepoint.com\" Connect to SharePoint prompting for the username and password. When a generic credential is added to the Windows Credential Manager with https://contoso.sharepoint.com , PowerShell will not prompt for username and password and use those stored credentials instead. EXAMPLE 2 Connect-PnPOnline -Url \"https://contoso.sharepoint.com\" -Credentials (Get-Credential) Connect to SharePoint prompting for the username and password to use to authenticate EXAMPLE 3 Connect-PnPOnline -Url \"https://contoso.sharepoint.de\" -ClientId 344b8aab-389c-4e4a-8fa1-4c1ae2c0a60d -ClientSecret $clientSecret This will authenticate you to the site using Legacy ACS authentication EXAMPLE 4 Connect-PnPOnline -Url \"https://contoso.sharepoint.com\" -DeviceLogin This will authenticate you using the PnP Management Shell Multi-Tenant application. A browser window will have to be opened where you have to enter a code that is shown in your PowerShell window. EXAMPLE 5 Connect-PnPOnline -Url \"https://contoso.sharepoint.com\" -DeviceLogin -LaunchBrowser This will authenticate you using the PnP Management Shell Multi-Tenant application. A browser window will automatically open and the code you need to enter will be automatically copied to your clipboard. EXAMPLE 6 $password = (ConvertTo-SecureString -AsPlainText 'myprivatekeypassword' -Force) Connect-PnPOnline -Url \"https://contoso.sharepoint.com\" -ClientId 6c5c98c7-e05a-4a0f-bcfa-0cfc65aa1f28 -CertificatePath 'c:\\mycertificate.pfx' -CertificatePassword $password -Tenant 'contoso.onmicrosoft.com' Connects using an Azure Active Directory registered application using a locally available certificate containing a private key. See https://docs.microsoft.com/sharepoint/dev/solution-guidance/security-apponly-azuread for a sample on how to get started. EXAMPLE 7 Connect-PnPOnline -Url \"https://contoso.sharepoint.com\" -ClientId 6c5c98c7-e05a-4a0f-bcfa-0cfc65aa1f28 -Tenant 'contoso.onmicrosoft.com' -Thumbprint 34CFAA860E5FB8C44335A38A097C1E41EEA206AA Connects to SharePoint using app-only tokens via an app's declared permission scopes. See https://github.com/SharePoint/PnP-PowerShell/tree/master/Samples/SharePoint.ConnectUsingAppPermissions for a sample on how to get started. Ensure you have imported the private key certificate, typically the .pfx file, into the Windows Certificate Store for the certificate with the provided thumbprint. EXAMPLE 8 Connect-PnPOnline -Url \"https://contoso.sharepoint.com\" -ClientId 6c5c98c7-e05a-4a0f-bcfa-0cfc65aa1f28 -CertificateBase64Encoded $base64encodedstring -Tenant 'contoso.onmicrosoft.com' Connects using an Azure Active Directory registered application using a certificate with a private key that has been base64 encoded. See https://docs.microsoft.com/sharepoint/dev/solution-guidance/security-apponly-azuread for a sample on how to get started. EXAMPLE 9 Connect-PnPOnline -Url \"https://contoso.sharepoint.com\" -UseWebLogin Note: See Example 10 as this is a preferred option over using -UseWebLogin. Connects to SharePoint using legacy cookie based authentication. Notice this type of authentication is limited in its functionality. We will for instance not be able to acquire an access token for the Graph, and as a result none of the Graph related cmdlets will work. Also some of the functionality of the provisioning engine (Get-PnPSiteTemplate, Get-PnPTenantTemplate, Invoke-PnPSiteTemplate, Invoke-PnPTenantTemplate) will not work because of this reason. The cookies will in general expire within a few days and if you use -UseWebLogin within that time popup window will appear that will dissappear immediately, this is expected. Use -ForceAuthentication to reset the authentication cookies and force a new login. See example 10 for a full support for interactive logins using MFA and the ability to acquire Graph tokens. EXAMPLE 10 Connect-PnPOnline -Url \"https://contoso.sharepoint.com\" -Interactive Connects to the Azure AD, acquires an access token and allows PnP PowerShell to access both SharePoint and the Microsoft Graph. By default it will use the PnP Management Shell multi-tenant application behind the scenes, so make sure to run `Register-PnPManagementShellAccess` first. EXAMPLE 11 Connect-PnPOnline -Url \"https://portal.contoso.com\" -TransformationOnPrem -CurrentCredential Connects to on-premises SharePoint 2013, 2016 or 2019 site with the current user's on-premises Windows credential (e.g. domain\\user). This option is only supported for being able to transform on-premises classic wiki, webpart, blog and publishing pages into modern pages in a SharePoint Online site. Although other PnP cmdlets might work as well, they're officially not supported for being used in an on-premises context. See http://aka.ms/sharepoint/modernization/pages for more details on page transformation. EXAMPLE 12 Connect-PnPOnline -ManagedIdentity Get-PnPTeamsTeam Using this way of connecting only works with environments that support managed identies: Azure Functions and the Azure Cloud Shell. You cannot access SharePoint artifacts using this connection method: only the cmdlets that use the Microsoft Graph or Azure AD resources behind the scenes will work: Teams cmdlets, Flow cmdlets, Planner cmdlets and the Microsoft 365 Group cmdlets. EXAMPLE 13 Connect-PnPOnline -Url https://contoso.sharepoint.com -AccessToken $token This method assumes you have acquired a valid OAuth2 access token from Azure AD with the correct audience and permissions set. Using this method PnP PowerShell will not acquire tokens dynamically and if the token expires (typically after 1 hour) cmdlets will fail to work using this method. PARAMETERS -AccessToken Using this parameter you can provide your own access token. Notice that it is recommend to use one of the other connection methods as this will limits the offered functionality on PnP PowerShell. For instance if the token expires (typically after 1 hour) will not be able to acquire a new valid token, which the other connection methods do allow. You are fully responsible for providing your own valid token, for the correct audience, with the correct permissions scopes. Type: String Parameter Sets: Access Token Aliases: Required: True Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -AzureEnvironment The Azure environment to use for authentication, the defaults to 'Production' which is the main Azure environment. Type: AzureEnvironment Parameter Sets: Credentials, SharePoint ACS (Legacy) App Only, App-Only with Azure Active Directory, App-Only with Azure Active Directory using a certificate from the Windows Certificate Management Store by thumbprint, PnP Management Shell / DeviceLogin, Interactive, Access Token Aliases: Accepted values: Production, PPE, China, Germany, USGovernment, USGovernmentHigh, USGovernmentDoD Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CertificatePassword Password to the certificate (*.pfx) Type: SecureString Parameter Sets: App-Only with Azure Active Directory Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CertificatePath Path to the certificate containing the private key (*.pfx) Type: String Parameter Sets: App-Only with Azure Active Directory Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClientId The Client ID of the Azure AD Application Type: String Parameter Sets: Credentials, PnP Management Shell / DeviceLogin, Interactive Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False Type: String Parameter Sets: SharePoint ACS (Legacy) App Only, App-Only with Azure Active Directory, App-Only with Azure Active Directory using a certificate from the Windows Certificate Management Store by thumbprint Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClientSecret The client secret to use. Type: String Parameter Sets: SharePoint ACS (Legacy) App Only Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CreateDrive If you want to create a PSDrive connected to the URL Type: SwitchParameter Parameter Sets: Credentials, SharePoint ACS (Legacy) App Only, App-Only with Azure Active Directory, App-Only with Azure Active Directory using a certificate from the Windows Certificate Management Store by thumbprint, SPO Management Shell Credentials, PnP Management Shell / DeviceLogin, Web Login for Multi Factor Authentication, Interactive for Multi Factor Authentication Aliases: Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -Credentials Credentials of the user to connect with. Either specify a PSCredential object or a string. In case of a string value a lookup will be done to the Generic Credentials section of the Windows Credentials in the Windows Credential Manager for the correct credentials. Type: CredentialPipeBind Parameter Sets: Credentials Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CurrentCredentials Use credentials of the currently logged in user. Applicable exclusively when connecting to on premises SharePoint Server via PnP. Switch parameter. Type: CredentialPipeBind Parameter Sets: Credentials Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DriveName Name of the PSDrive to create (default: SPO) Type: String Parameter Sets: Credentials, SharePoint ACS (Legacy) App Only, App-Only with Azure Active Directory, App-Only with Azure Active Directory using a certificate from the Windows Certificate Management Store by thumbprint, SPO Management Shell Credentials, PnP Management Shell / DeviceLogin, Web Login for Multi Factor Authentication, Interactive for Multi Factor Authentication Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LaunchBrowser Launch a browser automatically and copy the code to enter to the clipboard Type: SwitchParameter Parameter Sets: PnP Management Shell / DeviceLogin, Interactive Aliases: Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -DeviceLogin Log in using the Device Code flow. By default it will use the PnP Management Shell multi-tenant Azure AD application registration. You will be asked to consent to: Read and write managed metadata Have full control of all site collections Read user profiles Invite guest users to the organization Read and write all groups Read and write directory data Read and write identity providers Access the directory as you Type: SwitchParameter Parameter Sets: PnP Management Shell / DeviceLogin Aliases: PnPManagementShell, PnPO365ManagementShell Required: True Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -Realm Authentication realm. If not specified will be resolved from the url specified. Type: String Parameter Sets: SharePoint ACS (Legacy) App Only Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RedirectUri The Redirect URI of the Azure AD Application Type: String Parameter Sets: Credentials Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ReturnConnection Returns the connection for use with the -Connection parameter on cmdlets. Type: SwitchParameter Parameter Sets: Credentials, SharePoint ACS (Legacy) App Only, App-Only with Azure Active Directory, App-Only with Azure Active Directory using a certificate from the Windows Certificate Management Store by thumbprint, SPO Management Shell Credentials, PnP Management Shell / DeviceLogin, Web Login for Multi Factor Authentication, Interactive for Multi Factor Authentication, Access Token Aliases: Required: False Position: Named Default value: False Accept pipeline input: True (ByValue) Accept wildcard characters: False -Tenant The Azure AD Tenant name,e.g. mycompany.onmicrosoft.com Type: String Parameter Sets: App-Only with Azure Active Directory, App-Only with Azure Active Directory using a certificate from the Windows Certificate Management Store by thumbprint Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TenantAdminUrl The url to the Tenant Admin site. If not specified, the cmdlets will assume to connect automatically to https://[tenantname]-admin.sharepoint.com where appropriate. Type: String Parameter Sets: Credentials, SharePoint ACS (Legacy) App Only, App-Only with Azure Active Directory, App-Only with Azure Active Directory using a certificate from the Windows Certificate Management Store by thumbprint, SPO Management Shell Credentials, Web Login for Multi Factor Authentication, Interactive for Multi Factor Authentication Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Thumbprint The thumbprint of the certificate containing the private key registered with the application in Azure Active Directory Type: String Parameter Sets: App-Only with Azure Active Directory using a certificate from the Windows Certificate Management Store by thumbprint Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url The Url of the site collection to connect to Type: String Parameter Sets: Credentials, SharePoint ACS (Legacy) App Only, App-Only with Azure Active Directory, App-Only with Azure Active Directory using a certificate from the Windows Certificate Management Store by thumbprint, SPO Management Shell Credentials, PnP Management Shell / DeviceLogin, Web Login for Multi Factor Authentication, Interactive for Multi Factor Authentication, Access Token Aliases: Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -ValidateConnection When provided, the cmdlet will check to ensure the SharePoint Online site specified through -Url exists and if not, will throw an exception. If you omit this flag or set it to $false, it will blindly set up a connection without validating that the site actually exists. Making use of this option does make one extra call on the connection attempt, so it is recommended to only use it in scenarios where you know the site you're trying to connect o may not exist and would like to have feedback on this during the connect. Type: SwitchParameter Parameter Sets: Credentials, SharePoint ACS (Legacy) App Only, App-Only with Azure Active Directory, App-Only with Azure Active Directory using a certificate from the Windows Certificate Management Store by thumbprint, SPO Management Shell Credentials, PnP Management Shell / DeviceLogin, Web Login for Multi Factor Authentication, Interactive for Multi Factor Authentication, Access Token Aliases: Required: False Default value: False Accept pipeline input: False Accept wildcard characters: False -TransformationOnPrem If you want to the use page transformation cmdlets, setting this switch will allow you to connect to an on-prem server. Notice that this -only- applies to Transformation cmdlets. Type: SwitchParameter Parameter Sets: Credentials Aliases: Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -UseWebLogin Windows only: Connects to SharePoint using legacy cookie based authentication. Notice this type of authentication is limited in its functionality. We will for instance not be able to acquire an access token for the Graph, and as a result none of the Graph related cmdlets will work. Also some of the functionality of the provisioning engine (Get-PnPSiteTemplate, Get-PnPTenantTemplate, Invoke-PnPSiteTemplate, Invoke-PnPTenantTemplate) will not work because of this reason. The cookies will in general expire within a few days and if you use -UseWebLogin within that time popup window will appear that will dissappear immediately, this is expected. Use -ForceAuthentication to reset the authentication cookies and force a new login. Type: SwitchParameter Parameter Sets: Web Login for Multi Factor Authentication Aliases: Required: True Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -Interactive Connects to the Azure AD using interactive login, allowing you to authenticate using multi-factor authentication. This parameter has preference over `-UseWebLogin`. Type: SwitchParameter Parameter Sets: Interactive for Multi Factor Authentication Aliases: Required: True Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -ForceAuthentication Will clear the stored authentication information when using -UseWebLogin (Windows Only) or -Interactive (all platforms) and allows you to authenticate again towards a site with different credentials. Type: SwitchParameter Parameter Sets: Web Login for Multi Factor Authentication, Interactive for Multi Factor Authentication Aliases: Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -ManagedIdentity For use with Azure Functions (if configured to use a managed identity) or Azure Cloud Shell only. This method will acquire a token using the built-in endpoints in the Azure Cloud Shell and Azure Functions. Notice that using this connection method will not allow you to access SharePoint artifacts due to limitations of token acquisition. It will however allow you to use the Teams cmdlets, Flow cmdlets, Planner cmdlets and Microsoft 365 Group cmdlets. Type: SwitchParameter Parameter Sets: Managed Identity Aliases: Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -CertificateBase64Encoded Specify a base64 encoded string as representing the private certificate. Type: String Parameter Sets: App-Only with Azure Active Directory Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while going through setting up a connection. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Convert-PnPFolderToSiteTemplate.html": {
    "href": "cmdlets/Convert-PnPFolderToSiteTemplate.html",
    "title": "Convert-PnPFolderToSiteTemplate | PnP PowerShell",
    "keywords": "Convert-PnPFolderToSiteTemplate SYNOPSIS Creates a pnp package file of an existing template xml, and includes all files in the current folder SYNTAX Convert-PnPFolderToSiteTemplate [-Out] <String> [[-Folder] <String>] [-Force] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Convert-PnPFolderToSiteTemplate -Out template.pnp Creates a pnp package file of an existing template xml, and includes all files in the current folder EXAMPLE 2 Convert-PnPFolderToSiteTemplate -Out template.pnp -Folder c:\\temp Creates a pnp package file of an existing template xml, and includes all files in the c:\\temp folder PARAMETERS -Folder Folder to process. If not specified the current folder will be used. Type: String Parameter Sets: (All) Required: False Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Overwrites the output file if it exists. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Out Filename to write to, optionally including full path. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Convert-PnPSiteTemplate.html": {
    "href": "cmdlets/Convert-PnPSiteTemplate.html",
    "title": "Convert-PnPSiteTemplate | PnP PowerShell",
    "keywords": "Convert-PnPSiteTemplate SYNOPSIS Converts a provisioning template to an other schema version SYNTAX Convert-PnPSiteTemplate [-Path] <String> [-Out <String>] [[-ToSchema] <XMLPnPSchemaVersion>] [-Encoding <Encoding>] [-Force] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Convert-PnPSiteTemplate -Path template.xml Converts a provisioning template to the latest schema and outputs the result to current console. EXAMPLE 2 Convert-PnPSiteTemplate -Path template.xml -Out newtemplate.xml Converts a provisioning template to the latest schema and outputs the result the newtemplate.xml file. EXAMPLE 3 Convert-PnPSiteTemplate -Path template.xml -Out newtemplate.xml -ToSchema V201512 Converts a provisioning template to the latest schema using the 201512 schema and outputs the result the newtemplate.xml file. PARAMETERS -Encoding The encoding type of the XML file, Unicode is default Type: Encoding Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Overwrites the output file if it exists Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Out Filename to write to, optionally including full path Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Path to the xml file containing the site template Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByPropertyName, ByValue) Accept wildcard characters: False -ToSchema The schema of the output to use, defaults to the latest schema Type: XMLPnPSchemaVersion Parameter Sets: (All) Accepted values: LATEST, V201503, V201505, V201508, V201512, V201605, V201705, V201801, V201805, V201807, V201903, V201909, V202002 Required: False Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Encoding documentation"
  },
  "cmdlets/Convert-PnPSiteTemplateToMarkdown.html": {
    "href": "cmdlets/Convert-PnPSiteTemplateToMarkdown.html",
    "title": "convert-pnpsitetemplatetomarkdown | PnP PowerShell",
    "keywords": "Convert-PnPSiteTemplateToMarkdown SYNOPSIS Converts an existing PnP Site Template to a markdown report SYNTAX Convert-PnPSiteTemplateToMarkdown -TemplatePath <String> [-Out <String>] [-Force <SwitchParameter>] DESCRIPTION Converts an existing PnP Site Template to markdown report. Notice that this cmdlet is work in work progress, and the completeness of the report will increase in the future. EXAMPLES EXAMPLE 1 Convert-PnPSiteTemplateToMarkdown -TemplatePath ./mytemplate.xml This will convert the site template to a markdown file and outputs the result to the console. EXAMPLE 2 Convert-PnPSiteTemplateToMarkdown -TemplatePath ./mytemplate.xml -Out ./myreport.md This will convert the site template to a markdown file and writes the result to the specified myreport.md file. PARAMETERS -TemplatePath The path to an existing PnP Site Template Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Out The output file name to write the report to in markdown format. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Overwrites the output file if it exists. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/ConvertTo-PnPClientSidePage.html": {
    "href": "cmdlets/ConvertTo-PnPClientSidePage.html",
    "title": "ConvertTo-PnPClientSidePage | PnP PowerShell",
    "keywords": "ConvertTo-PnPClientSidePage SYNOPSIS Converts a classic page (wiki or web part page) into a Client-Side Page SYNTAX ConvertTo-PnPClientSidePage -Identity <PagePipeBind> [-Library <String>] [-Folder <String>] [-WebPartMappingFile <String>] [-Overwrite [<SwitchParameter>]] [-TakeSourcePageName [<SwitchParameter>]] [-ReplaceHomePageWithDefault [<SwitchParameter>]] [-AddPageAcceptBanner [<SwitchParameter>]] [-SkipItemLevelPermissionCopyToClientSidePage [<SwitchParameter>]] [-SkipUrlRewriting [<SwitchParameter>]] [-SkipDefaultUrlRewriting [<SwitchParameter>]] [-UrlMappingFile <String>] [-ClearCache [<SwitchParameter>]] [-CopyPageMetadata [<SwitchParameter>]] [-AddTableListImageAsImageWebPart [<SwitchParameter>]] [-UseCommunityScriptEditor [<SwitchParameter>]] [-SummaryLinksToHtml [<SwitchParameter>]] [-TargetWebUrl <String>] [-LogType <ClientSidePageTransformatorLogType>] [-LogFolder <String>] [-LogSkipFlush [<SwitchParameter>]] [-LogVerbose [<SwitchParameter>]] [-DontPublish [<SwitchParameter>]] [-KeepPageCreationModificationInformation [<SwitchParameter>]] [-SetAuthorInPageHeader [<SwitchParameter>]] [-PostAsNews [<SwitchParameter>]] [-DisablePageComments [<SwitchParameter>]] [-PublishingPage [<SwitchParameter>]] [-BlogPage [<SwitchParameter>]] [-DelveBlogPage [<SwitchParameter>]] [-DelveKeepSubTitle [<SwitchParameter>]] [-PageLayoutMapping <String>] [-PublishingTargetPageName <String>] [-TargetPageName <String>] [-TargetPageFolder <String>] [-TargetPageFolderOverridesDefaultFolder [<SwitchParameter>]] [-RemoveEmptySectionsAndColumns [<SwitchParameter>]] [-TargetConnection <PnPConnection>] [-SkipUserMapping [<SwitchParameter>]] [-UserMappingFile <String>] [-TermMappingFile <String>] [-SkipTermStoreMapping [<SwitchParameter>]] [-LDAPConnectionString <String>] [-Web <WebPipeBind>] [-Connection <PnPConnection>] EXAMPLES ------------------EXAMPLE 1------------------ ConvertTo-PnPClientSidePage -Identity \"somepage.aspx\" -Overwrite Converts a wiki/web part page named 'somepage' to a client side page ------------------EXAMPLE 2------------------ ConvertTo-PnPClientSidePage -Identity \"somepage.aspx\" -Overwrite -WebPartMappingFile c:\\contoso\\webpartmapping.xml Converts a wiki/web part page named 'somepage' to a client side page using a custom provided mapping file ------------------EXAMPLE 3------------------ ConvertTo-PnPClientSidePage -Identity \"somepage.aspx\" -Overwrite -AddPageAcceptBanner Converts a wiki/web part page named 'somepage' to a client side page and adds the page accept banner web part on top of the page. This requires that the SPFX solution holding the web part ( https://github.com/SharePoint/sp-dev-modernization/blob/master/Solutions/PageTransformationUI/assets/sharepointpnp-pagetransformation-client.sppkg?raw=true ) has been installed to the tenant app catalog ------------------EXAMPLE 4------------------ ConvertTo-PnPClientSidePage -Identity \"somepage.aspx\" -Overwrite -CopyPageMetadata Converts a wiki/web part page named 'somepage' to a client side page, including the copying of the page metadata (if any) ------------------EXAMPLE 5------------------ ConvertTo-PnPClientSidePage -Identity \"somepage.aspx\" -PublishingPage -Overwrite -TargetWebUrl https://contoso.sharepoint.com/sites/targetmodernsite Converts a publishing page named 'somepage' to a client side page in the https://contoso.sharepoint.com/sites/targetmodernsite site ------------------EXAMPLE 6------------------ ConvertTo-PnPClientSidePage -Identity \"somepage.aspx\" -PublishingPage -Overwrite -TargetConnection $target Converts a publishing page named 'somepage' to a client side page in the site specified by the TargetConnection connection. This allows to read a page in one environment (on-premises, tenant A) and create in another online location (tenant B) ------------------EXAMPLE 7------------------ ConvertTo-PnPClientSidePage -Identity \"somepage.aspx\" -Library \"SiteAssets\" -Folder \"Folder1\" -Overwrite Converts a web part page named 'somepage' living inside the SiteAssets library in a folder named folder1 into a client side page ------------------EXAMPLE 8------------------ ConvertTo-PnPClientSidePage -Identity \"somepage.aspx\" -Folder \"<root>\" -Overwrite Converts a web part page named 'somepage' living inside the root of the site collection (so outside of a library) ------------------EXAMPLE 9------------------ ConvertTo-PnPClientSidePage -Identity \"somepage.aspx\" -Overwrite -TargetWebUrl https://contoso.sharepoint.com/sites/targetmodernsite Converts a wiki/web part page named 'somepage' to a client side page in the https://contoso.sharepoint.com/sites/targetmodernsite site ------------------EXAMPLE 10------------------ ConvertTo-PnPClientSidePage -Identity \"somepage.aspx\" -LogType File -LogFolder c:\\temp -LogVerbose -Overwrite Converts a wiki/web part page named 'somepage' and creates a log file in c:\\temp using verbose logging ------------------EXAMPLE 11------------------ ConvertTo-PnPClientSidePage -Identity \"somepage.aspx\" -LogType SharePoint -LogSkipFlush Converts a wiki/web part page named 'somepage' and creates a log file in SharePoint but skip the actual write. Use this option to make multiple ConvertTo-PnPClientSidePage invocations create a single log ------------------EXAMPLE 12------------------ ConvertTo-PnPClientSidePage -Identity \"My post title\" -BlogPage -LogType Console -Overwrite -TargetWebUrl https://contoso.sharepoint.com/sites/targetmodernsite Converts a blog page with a title starting with 'my post title' to a client side page in the https://contoso.sharepoint.com/sites/targetmodernsite site ------------------EXAMPLE 13------------------ ConvertTo-PnPClientSidePage -Identity \"My post title\" -DelveBlogPage -LogType Console -Overwrite -TargetWebUrl https://contoso.sharepoint.com/sites/targetmodernsite Converts a Delve blog page with a title starting with 'my post title' to a client side page in the https://contoso.sharepoint.com/sites/targetmodernsite site ------------------EXAMPLE 14------------------ ConvertTo-PnPClientSidePage -Identity \"somepage.aspx\" -PublishingPage -Overwrite -TargetConnection $target -UserMappingFile c:\\\\temp\\user_mapping_file.csv Converts a publishing page named 'somepage' to a client side page in the site specified by the TargetConnection connection. This allows to read a page in on-premises environment and create in another online locations including using specific user mappings between the two environments. PARAMETERS -AddPageAcceptBanner Adds the page accept banner web part. The actual web part is specified in webpartmapping.xml file Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -AddTableListImageAsImageWebPart When an image lives inside a table/list then it's also created as separate image web part underneath that table/list by default. Use this switch set to $false to change that Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -BlogPage I'm transforming a blog page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -ClearCache Clears the cache. Can be needed if you've installed a new web part to the site and want to use that in a custom webpartmapping file. Restarting your PS session has the same effect Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -CopyPageMetadata Copies the page metadata to the created modern page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -DelveBlogPage I'm transforming a Delve blog page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -DelveKeepSubTitle Transform the possible sub title as topic header on the modern page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -DisablePageComments Disable comments for the created modern page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -DontPublish Don't publish the created modern page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -Folder The folder to load the provided page from. If not provided all folders are searched Type: String Parameter Sets: (All) Required: False Position: 0 Accept pipeline input: True -Identity The name of the page to convert Type: PagePipeBind Parameter Sets: (All) Required: True Position: 0 Accept pipeline input: True -KeepPageCreationModificationInformation Keep the author, editor, created and modified information from the source page (when source page lives in SPO) Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -LDAPConnectionString Specifies a LDAP connection string e.g. LDAP://OU=Users,DC=Contoso,DC=local Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -Library The name of the library containing the page. If SitePages then please omit this parameter Type: String Parameter Sets: (All) Required: False Position: 0 Accept pipeline input: True -LogFolder Folder in where the log file will be created (if LogType==File) Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -LogSkipFlush By default each cmdlet invocation will result in a log file, use the -SkipLogFlush to delay the log flushing. The first call without -SkipLogFlush will then write all log entries to a single log Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -LogType Allows to generate a transformation log (File | SharePoint) Type: ClientSidePageTransformatorLogType Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -LogVerbose Configure logging to include verbose log entries Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -Overwrite Overwrites page if already existing Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -PageLayoutMapping Path and name of the page layout mapping file driving the publishing page transformation Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: True -PostAsNews Post the created, and published, modern page as news Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -PublishingPage I'm transforming a publishing page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -PublishingTargetPageName Name for the target page (only applies to publishing page transformation) Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -RemoveEmptySectionsAndColumns Remove empty sections and columns after transformation of the page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -ReplaceHomePageWithDefault Replaces a home page with a default stock modern home page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -SetAuthorInPageHeader Set's the author of the source page as author in the modern page header (when source page lives in SPO) Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -SkipDefaultUrlRewriting Set this flag to prevent the default URL rewriting while you still want to do URL rewriting using a custom URL mapping file Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -SkipItemLevelPermissionCopyToClientSidePage By default the item level permissions on a page are copied to the created client side page. Use this switch to prevent the copy Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -SkipTermStoreMapping Disables term mapping during transformation Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -SkipUrlRewriting If transforming cross site then by default urls in html and summarylinks are rewritten for the target site. Set this flag to prevent that Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -SkipUserMapping Disables user mapping during transformation Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -SummaryLinksToHtml By default summarylinks web parts are replaced by QuickLinks, but you can transform to plain html by setting this switch Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -TakeSourcePageName Created client side page takes name from previous classic page. Classic page gets renamed to previous_<Page>.aspx Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -TargetConnection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -TargetPageFolder Folder to create the target page in (will be used in conjunction with auto-generated folders that ensure page name uniqueness) Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -TargetPageFolderOverridesDefaultFolder When setting a target page folder then the target page folder overrides possibly default folder path (e.g. in the source page lived in a folder) instead of being appended to it Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -TargetPageName Name for the target page (only applies when doing cross site page transformation) Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -TargetWebUrl Url of the target web that will receive the modern page. Defaults to null which means in-place transformation Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -TermMappingFile Specifies a taxonomy term mapping file Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -UrlMappingFile File holding custom URL mapping definitions Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -UseCommunityScriptEditor Uses the community script editor ( https://github.com/SharePoint/sp-dev-fx-webparts/tree/master/samples/react-script-editor ) as replacement for the classic script editor web part Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -UserMappingFile Specifies a user mapping file Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -WebPartMappingFile Path and name of the web part mapping file driving the transformation Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: True -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -Web This parameter allows you to optionally apply the cmdlet action to a subweb within the current web. In most situations this parameter is not required and you can connect to the subweb using Connect-PnPOnline instead. Specify the GUID, server relative url (i.e. /sites/team1) or web instance of the web to apply the command to. Omit this parameter to use the current web. Type: WebPipeBind Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False RELATED LINKS SharePoint Developer Patterns and Practices"
  },
  "cmdlets/ConvertTo-PnPPage.html": {
    "href": "cmdlets/ConvertTo-PnPPage.html",
    "title": "ConvertTo-PnPPage | PnP PowerShell",
    "keywords": "ConvertTo-PnPPage SYNOPSIS Converts a classic page (wiki or web part page) into a modern page SYNTAX ConvertTo-PnPPage -Identity <PagePipeBind> [-Library <String>] [-Folder <String>] [-WebPartMappingFile <String>] [-Overwrite [<SwitchParameter>]] [-TakeSourcePageName [<SwitchParameter>]] [-ReplaceHomePageWithDefault [<SwitchParameter>]] [-AddPageAcceptBanner [<SwitchParameter>]] [-SkipItemLevelPermissionCopyToClientSidePage [<SwitchParameter>]] [-SkipUrlRewriting [<SwitchParameter>]] [-SkipDefaultUrlRewriting [<SwitchParameter>]] [-UrlMappingFile <String>] [-ClearCache [<SwitchParameter>]] [-CopyPageMetadata [<SwitchParameter>]] [-AddTableListImageAsImageWebPart [<SwitchParameter>]] [-UseCommunityScriptEditor [<SwitchParameter>]] [-SummaryLinksToHtml [<SwitchParameter>]] [-TargetWebUrl <String>] [-LogType <PageTransformatorLogType>] [-LogFolder <String>] [-LogSkipFlush [<SwitchParameter>]] [-LogVerbose [<SwitchParameter>]] [-DontPublish [<SwitchParameter>]] [-KeepPageCreationModificationInformation [<SwitchParameter>]] [-SetAuthorInPageHeader [<SwitchParameter>]] [-PostAsNews [<SwitchParameter>]] [-DisablePageComments [<SwitchParameter>]] [-PublishingPage [<SwitchParameter>]] [-BlogPage [<SwitchParameter>]] [-DelveBlogPage [<SwitchParameter>]] [-DelveKeepSubTitle [<SwitchParameter>]] [-PageLayoutMapping <String>] [-PublishingTargetPageName <String>] [-TargetPageName <String>] [-TargetPageFolder <String>] [-TargetPageFolderOverridesDefaultFolder [<SwitchParameter>]] [-RemoveEmptySectionsAndColumns [<SwitchParameter>]] [-TargetConnection <PnPConnection>] [-SkipUserMapping [<SwitchParameter>]] [-UserMappingFile <String>] [-TermMappingFile <String>] [-SkipTermStoreMapping [<SwitchParameter>]] [-LDAPConnectionString <String>] [-SkipHiddenWebParts [<SwitchParameter>]] [-Connection <PnPConnection>] EXAMPLES EXAMPLE 1 ConvertTo-PnPPage -Identity \"somepage.aspx\" -Overwrite Converts a wiki/web part page named 'somepage' to a client side page EXAMPLE 2 ConvertTo-PnPPage -Identity \"somepage.aspx\" -Overwrite -WebPartMappingFile c:\\contoso\\webpartmapping.xml Converts a wiki/web part page named 'somepage' to a client side page using a custom provided mapping file EXAMPLE 3 ConvertTo-PnPPage -Identity \"somepage.aspx\" -Overwrite -AddPageAcceptBanner Converts a wiki/web part page named 'somepage' to a client side page and adds the page accept banner web part on top of the page. This requires that the SPFX solution holding the web part ( https://github.com/SharePoint/sp-dev-modernization/blob/master/Solutions/PageTransformationUI/assets/sharepointpnp-pagetransformation-client.sppkg?raw=true ) has been installed to the tenant app catalog EXAMPLE 4 ConvertTo-PnPPage -Identity \"somepage.aspx\" -Overwrite -CopyPageMetadata Converts a wiki/web part page named 'somepage' to a client side page, including the copying of the page metadata (if any) EXAMPLE 5 ConvertTo-PnPPage -Identity \"somepage.aspx\" -PublishingPage -Overwrite -TargetWebUrl \"https://contoso.sharepoint.com/sites/targetmodernsite\" Converts a publishing page named 'somepage' to a client side page in the https://contoso.sharepoint.com/sites/targetmodernsite site EXAMPLE 6 ConvertTo-PnPPage -Identity \"somepage.aspx\" -PublishingPage -Overwrite -TargetConnection $target Converts a publishing page named 'somepage' to a client side page in the site specified by the TargetConnection connection. This allows to read a page in one environment (on-premises, tenant A) and create in another online location (tenant B) EXAMPLE 7 ConvertTo-PnPPage -Identity \"somepage.aspx\" -Library \"SiteAssets\" -Folder \"Folder1\" -Overwrite Converts a web part page named 'somepage' living inside the SiteAssets library in a folder named folder1 into a client side page EXAMPLE 8 ConvertTo-PnPPage -Identity \"somepage.aspx\" -Folder \"<root>\" -Overwrite Converts a web part page named 'somepage' living inside the root of the site collection (so outside of a library) EXAMPLE 9 ConvertTo-PnPPage -Identity \"somepage.aspx\" -Overwrite -TargetWebUrl \"https://contoso.sharepoint.com/sites/targetmodernsite\" Converts a wiki/web part page named 'somepage' to a client side page in the https://contoso.sharepoint.com/sites/targetmodernsite site EXAMPLE 10 ConvertTo-PnPPage -Identity \"somepage.aspx\" -LogType File -LogFolder c:\\temp -LogVerbose -Overwrite Converts a wiki/web part page named 'somepage' and creates a log file in c:\\temp using verbose logging EXAMPLE 11 ConvertTo-PnPPage -Identity \"somepage.aspx\" -LogType SharePoint -LogSkipFlush Converts a wiki/web part page named 'somepage' and creates a log file in SharePoint but skip the actual write. Use this option to make multiple ConvertTo-PnPPage invocations create a single log EXAMPLE 12 ConvertTo-PnPPage -Identity \"My post title\" -BlogPage -LogType Console -Overwrite -TargetWebUrl \"https://contoso.sharepoint.com/sites/targetmodernsite\" Converts a blog page with a title starting with 'my post title' to a client side page in the https://contoso.sharepoint.com/sites/targetmodernsite site EXAMPLE 13 ConvertTo-PnPPage -Identity \"My post title\" -DelveBlogPage -LogType Console -Overwrite -TargetWebUrl \"https://contoso.sharepoint.com/sites/targetmodernsite\" Converts a Delve blog page with a title starting with 'my post title' to a client side page in the https://contoso.sharepoint.com/sites/targetmodernsite site EXAMPLE 14 ConvertTo-PnPPage -Identity \"somepage.aspx\" -PublishingPage -Overwrite -TargetConnection $target -UserMappingFile c:\\\\temp\\user_mapping_file.csv Converts a publishing page named 'somepage' to a client side page in the site specified by the TargetConnection connection. This allows to read a page in on-premises environment and create in another online locations including using specific user mappings between the two environments. PARAMETERS -AddPageAcceptBanner Adds the page accept banner web part. The actual web part is specified in webpartmapping.xml file Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -AddTableListImageAsImageWebPart When an image lives inside a table/list then it's also created as separate image web part underneath that table/list by default. Use this switch set to $false to change that Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -BlogPage I'm transforming a blog page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -ClearCache Clears the cache. Can be needed if you've installed a new web part to the site and want to use that in a custom webpartmapping file. Restarting your PS session has the same effect Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -CopyPageMetadata Copies the page metadata to the created modern page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -DelveBlogPage I'm transforming a Delve blog page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -DelveKeepSubTitle Transform the possible sub title as topic header on the modern page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -DisablePageComments Disable comments for the created modern page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -DontPublish Don't publish the created modern page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -Folder The folder to load the provided page from. If not provided all folders are searched Type: String Parameter Sets: (All) Required: False Position: 0 Accept pipeline input: True -Identity The name of the page to convert Type: PagePipeBind Parameter Sets: (All) Required: True Position: 0 Accept pipeline input: True -KeepPageCreationModificationInformation Keep the author, editor, created and modified information from the source page (when source page lives in SPO) Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -LDAPConnectionString Specifies a LDAP connection string e.g. LDAP://OU=Users,DC=Contoso,DC=local Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -Library The name of the library containing the page. If SitePages then please omit this parameter Type: String Parameter Sets: (All) Required: False Position: 0 Accept pipeline input: True -LogFolder Folder in where the log file will be created (if LogType==File) Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -LogSkipFlush By default each cmdlet invocation will result in a log file, use the -SkipLogFlush to delay the log flushing. The first call without -SkipLogFlush will then write all log entries to a single log Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -LogType Allows to generate a transformation log (File | SharePoint) Type: PageTransformatorLogType Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -LogVerbose Configure logging to include verbose log entries Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -Overwrite Overwrites page if already existing Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -PageLayoutMapping Path and name of the page layout mapping file driving the publishing page transformation Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: True -PostAsNews Post the created, and published, modern page as news Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -PublishingPage I'm transforming a publishing page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -PublishingTargetPageName Name for the target page (only applies to publishing page transformation) Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -RemoveEmptySectionsAndColumns Remove empty sections and columns after transformation of the page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -ReplaceHomePageWithDefault Replaces a home page with a default stock modern home page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -SetAuthorInPageHeader Set's the author of the source page as author in the modern page header (when source page lives in SPO) Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -SkipDefaultUrlRewriting Set this flag to prevent the default URL rewriting while you still want to do URL rewriting using a custom URL mapping file Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -SkipHiddenWebParts Set this flag to skip hidden webparts during transformation Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -SkipItemLevelPermissionCopyToClientSidePage By default the item level permissions on a page are copied to the created client side page. Use this switch to prevent the copy Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -SkipTermStoreMapping Disables term mapping during transformation Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -SkipUrlRewriting If transforming cross site then by default urls in html and summarylinks are rewritten for the target site. Set this flag to prevent that Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -SkipUserMapping Disables user mapping during transformation Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -SummaryLinksToHtml By default summarylinks web parts are replaced by QuickLinks, but you can transform to plain html by setting this switch Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -TakeSourcePageName Created client side page takes name from previous classic page. Classic page gets renamed to previous_<Page>.aspx Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -TargetConnection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -TargetPageFolder Folder to create the target page in (will be used in conjunction with auto-generated folders that ensure page name uniqueness) Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -TargetPageFolderOverridesDefaultFolder When setting a target page folder then the target page folder overrides possibly default folder path (e.g. in the source page lived in a folder) instead of being appended to it Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -TargetPageName Name for the target page (only applies when doing cross site page transformation) Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -TargetWebUrl Url of the target web that will receive the modern page. Defaults to null which means in-place transformation Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -TermMappingFile Specifies a taxonomy term mapping file Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -UrlMappingFile File holding custom URL mapping definitions Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -UseCommunityScriptEditor Uses the community script editor ( https://github.com/SharePoint/sp-dev-fx-webparts/tree/master/samples/react-script-editor ) as replacement for the classic script editor web part Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -UserMappingFile Specifies a user mapping file Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -WebPartMappingFile Path and name of the web part mapping file driving the transformation Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: True -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Copy-PnPFile.html": {
    "href": "cmdlets/Copy-PnPFile.html",
    "title": "Copy-PnPFile | PnP PowerShell",
    "keywords": "Copy-PnPFile SYNOPSIS Copies a file or folder to a different location SYNTAX Copy-PnPFile [-SourceUrl] <String> [-TargetUrl] <String> [-Overwrite] [-Force] [-IgnoreVersionHistory] [-NoWait] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Copies a file or folder to a different location. This location can be within the same document library, same site, same site collection or even to another site collection on the same tenant. Notice that if copying between sites or to a subsite you cannot specify a target filename, only a folder name. It is currently not possible to copy files between a OneDrive for Business site to SharePoint or vice versa. Copying files and folders is bound to some restrictions. You can find more on it here: https://docs.microsoft.com/office365/servicedescriptions/sharepoint-online-service-description/sharepoint-online-limits#moving-and-copying-across-sites EXAMPLES EXAMPLE 1 Copy-PnPFile -SourceUrl \"Shared Documents/MyProjectfiles\" -TargetUrl \"/sites/otherproject/Shared Documents\" -Overwrite Copies a folder named MyProjectFiles in the document library called Documents located in the current site to the root folder of the library named Documents in the site collection otherproject. If a folder named MyProjectFiles already exists, it will overwrite it. EXAMPLE 2 Copy-PnPFile -SourceUrl \"/sites/project/Shared Documents/company.docx\" -TargetUrl \"/sites/otherproject/Shared Documents\" Copies a file named company.docx located in a document library called Shared Documents in the site collection project to the Shared Documents library in the site collection otherproject. If a file named company.docx already exists, it won't perform the copy. EXAMPLE 3 Copy-PnPFile -SourceUrl \"Shared Documents/company.docx\" -TargetUrl \"/sites/otherproject/Shared Documents\" -IgnoreVersionHistory Copies a file named company.docx located in a document library called Documents in the current site to the site collection otherproject. If a file named company.docx already exists, it won't perform the copy. Only the latest version of the file will be copied and its history will be discarded. EXAMPLE 4 Copy-PnPFile -SourceUrl \"/sites/project/Shared Documents/Archive\" -TargetUrl \"/sites/otherproject/Shared Documents\" -Overwrite Copies a folder named Archive located in a document library called Shared Documents in the site collection project to the Shared Documents library in the site collection otherproject. If a folder named Archive already exists, it will overwrite it. EXAMPLE 5 Copy-PnPFile -SourceUrl \"Documents/company.docx\" -TargetUrl \"Documents/company2.docx\" Copies a file named company.docx located in a document library called Documents to a new document named company2.docx in the same library. EXAMPLE 6 Copy-PnPFile -SourceUrl \"Shared Documents/company.docx\" -TargetUrl \"Shared Documents2/company.docx\" Copies a file named company.docx located in a document library called Documents to a document library called Documents2 in the same site. EXAMPLE 7 Copy-PnPFile -SourceUrl \"Shared DocuDocuments/company.docx\" -TargetUrl \"Subsite/Shared Documents\" Copies a file named company.docx located in a document library called Documents to the document library named Documents in a subsite named Subsite keeping the file name. EXAMPLE 8 Copy-PnPFile -SourceUrl \"Shared Documents/company.docx\" -TargetUrl \"/sites/otherproject/Shared Documents\" -Overwrite Copies a file named company.docx located in a document library called Documents in the current site to the site collection otherproject. If a file named company.docx already exists, it will still perform the copy and replace the original company.docx file. EXAMPLE 9 Copy-PnPFile -SourceUrl \"Shared Documents/MyDocs\" -TargetUrl \"/sites/otherproject/Documents\" -Overwrite Copies a folder named MyDocs in the document library called Documents located in the current site to the site collection otherproject. If the MyDocs folder exist it will copy into it, if not it will be created. EXAMPLE 10 Copy-PnPFile -SourceUrl \"SubSite1/Documents/company.docx\" -TargetUrl \"SubSite2/Documents\" Copies a file named company.docx in the library named Documents in SubSite1 to the library named Documents in SubSite2. EXAMPLE 11 $job = Copy-PnPFile -SourceUrl \"Shared Documents/company.docx\" -TargetUrl \"SubSite2/Shared Documents\" -NoWait $jobStatus = Receive-PnPCopyMoveJobStatus -Job $job if($jobStatus.JobState == 0) { Write-Host \"Job finished\" } Copies a file named company.docx from the current document library to the documents library in SubSite2. It will not wait for the action to return but returns job information instead. The Receive-PnPCopyMoveJobStatus cmdlet will return the job status. PARAMETERS -Force If provided, no confirmation will be requested and the action will be performed Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IgnoreVersionHistory If provided, only the latest version of the document will be copied and its history will be discarded. If not provided, all historical versions will be copied. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Overwrite If provided, if a file already exists at the TargetUrl, it will be overwritten. If omitted, the copy operation will be canceled if the file already exists at the TargetUrl location. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SourceUrl Site or server relative URL specifying the file or folder to copy. Must include the file name if it is a file or the entire path to the folder if it is a folder. Type: String Parameter Sets: (All) Aliases: SiteRelativeUrl, ServerRelativeUrl Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TargetUrl Site or server relative URL where to copy the file or folder to. Must not include the file name. Type: String Parameter Sets: (All) Aliases: TargetServerRelativeLibrary Required: True Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -NoWait If specified the task will return immediately after creating the copy job. The cmdlet will return a job object which can be used with Receive-PnPCopyMoveJobStatus to retrieve the status of the job. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Copy-PnPFolder.html": {
    "href": "cmdlets/Copy-PnPFolder.html",
    "title": "Copy-PnPFolder | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Copy-PnPFolder SYNOPSIS Copies a folder or file to a different location SYNTAX Copy-PnPFolder [-SourceUrl] <String> [-TargetUrl] <String> [-Overwrite] [-Force] [-IgnoreVersionHistory] [-NoWait] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Copies a folder or file to a different location. This location can be within the same document library, same site, same site collection or even to another site collection on the same tenant. Currently there is a 200MB file size limit for the file or folder to be copied. Notice that if copying between sites or to a subsite you cannot specify a target filename, only a folder name. Copying files and folders is bound to some restrictions. You can find more on it here: https://docs.microsoft.com/office365/servicedescriptions/sharepoint-online-service-description/sharepoint-online-limits#moving-and-copying-across-sites EXAMPLES EXAMPLE 1 Copy-PnPFolder -SourceUrl \"Shared Documents/MyProjectfiles\" -TargetUrl \"/sites/otherproject/Shared Documents\" -Overwrite Copies a folder named MyProjectFiles in the document library called Documents located in the current site to the root folder of the library named Documents in the site collection otherproject. If a folder named MyProjectFiles already exists, it will overwrite it. EXAMPLE 2 Copy-PnPFolder -SourceUrl \"/sites/project/Shared Documents/company.docx\" -TargetUrl \"/sites/otherproject/Shared Documents\" Copies a file named company.docx located in a document library called Shared Documents in the site collection project to the Shared Documents library in the site collection otherproject. If a file named company.docx already exists, it won't perform the copy. EXAMPLE 3 Copy-PnPFolder -SourceUrl \"Shared Documents/company.docx\" -TargetUrl \"/sites/otherproject/Shared Documents\" -IgnoreVersionHistory Copies a file named company.docx located in a document library called Documents in the current site to the site collection otherproject. If a file named company.docx already exists, it won't perform the copy. Only the latest version of the file will be copied and its history will be discarded. EXAMPLE 4 Copy-PnPFolder -SourceUrl \"/sites/project/Shared Documents/Archive\" -TargetUrl \"/sites/otherproject/Shared Documents\" -Overwrite Copies a folder named Archive located in a document library called Shared Documents in the site collection project to the Shared Documents library in the site collection otherproject. If a folder named Archive already exists, it will overwrite it. EXAMPLE 5 Copy-PnPFolder -SourceUrl \"Documents/company.docx\" -TargetUrl \"Documents/company2.docx\" Copies a file named company.docx located in a document library called Documents to a new document named company2.docx in the same library. EXAMPLE 6 Copy-PnPFolder -SourceUrl \"Shared Documents/company.docx\" -TargetUrl \"Shared Documents2/company.docx\" Copies a file named company.docx located in a document library called Documents to a document library called Documents2 in the same site. EXAMPLE 7 Copy-PnPFolder -SourceUrl \"Shared DocuDocuments/company.docx\" -TargetUrl \"Subsite/Shared Documents\" Copies a file named company.docx located in a document library called Documents to the document library named Documents in a subsite named Subsite keeping the file name. EXAMPLE 8 Copy-PnPFolder -SourceUrl \"Shared Documents/company.docx\" -TargetUrl \"/sites/otherproject/Shared Documents\" -Overwrite Copies a file named company.docx located in a document library called Documents in the current site to the site collection otherproject. If a file named company.docx already exists, it will still perform the copy and replace the original company.docx file. EXAMPLE 9 Copy-PnPFolder -SourceUrl \"Shared Documents/MyDocs\" -TargetUrl \"/sites/otherproject/Documents\" -Overwrite Copies a folder named MyDocs in the document library called Documents located in the current site to the site collection otherproject. If the MyDocs folder exist it will copy into it, if not it will be created. EXAMPLE 10 Copy-PnPFolder -SourceUrl \"SubSite1/Documents/company.docx\" -TargetUrl \"SubSite2/Documents\" Copies a file named company.docx in the library named Documents in SubSite1 to the library named Documents in SubSite2. EXAMPLE 11 $job = Copy-PnPFolder -SourceUrl \"Shared Documents/company.docx\" -TargetUrl \"SubSite2/Shared Documents\" -NoWait $jobStatus = Receive-PnPCopyMoveJobStatus -Job $result if($jobStatus.JobState == 0) { Write-Host \"Job finished\" } Copies a file named company.docx from the current document library to the documents library in SubSite2. It will not wait for the action to return but returns job information instead. The Receive-PnPCopyMoveJobStatus cmdlet will return the job status. PARAMETERS -Force If provided, no confirmation will be requested and the action will be performed Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IgnoreVersionHistory If provided, only the latest version of the document will be copied and its history will be discarded. If not provided, all historical versions will be copied. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Overwrite If provided, if a file already exists at the TargetUrl, it will be overwritten. If omitted, the copy operation will be canceled if the file already exists at the TargetUrl location. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SourceUrl Site or server relative URL specifying the file or folder to copy. Must include the file name if it is a file or the entire path to the folder if it is a folder. Type: String Parameter Sets: (All) Aliases: SiteRelativeUrl, ServerRelativeUrl Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TargetUrl Site or server relative URL where to copy the file or folder to. Must not include the file name. Type: String Parameter Sets: (All) Aliases: TargetServerRelativeLibrary Required: True Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -NoWait If specified the task will return immediately after creating the copy job. The cmdlet will return a job object which can be used with Receive-PnPCopyMoveJobStatus to retrieve the status of the job. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Copy-PnPList.html": {
    "href": "cmdlets/Copy-PnPList.html",
    "title": "Copy-PnPList | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Copy-PnPList SYNOPSIS Creates a copy of an existing list SYNTAX Copy a list to the same site by providing a list id, name or list instance Copy-PnPList -Identity <ListPipeBind> -Title <String> [-WhatIf] [-Verbose] [-Connection <PnPConnection>] Copy a list to the same site by providing a list URL Copy-PnPList -SourceListUrl <String> -Title <String> [-WhatIf] [-Verbose] [-Connection <PnPConnection>] Copy a list to another site by providing a list id, name or list instance Copy-PnPList -Identity <ListPipeBind> -DestinationWebUrl <String> [-Title <String>] [-WhatIf] [-Verbose] [-Connection <PnPConnection>] Copy a list to another site by providing a list URL Copy-PnPList -SourceListUrl <String> -DestinationWebUrl <String> [-Title <String>] [-WhatIf] [-Verbose] [-Connection <PnPConnection>] DESCRIPTION This cmdlet allows an existing list to be copied to either the same site or to another site (same tenant). It copies the fields, views and settings of the list. It does not copy along the list items in the list. If you wish to copy a list from one tenant to another, you will have to export the list as a provisioning template, and then apply the template to the target tenant. EXAMPLES EXAMPLE 1 Copy-PnPList -Identity \"My List\" -Title \"Copy of My List\" Copies the list \"My List\" located in the current site to \"Copy of My List\", also in the current site EXAMPLE 2 Copy-PnPList -Identity \"My List\" -DestinationWebUrl https://contoso.sharepoint.com/sites/hrdepartment Copies the list \"My List\" to the site with the provided URL keeping the same list name EXAMPLE 3 Copy-PnPList -Identity \"My List\" -DestinationWebUrl https://contoso.sharepoint.com/sites/hrdepartment -Title \"My copied list\" Copies the list \"My List\" to the site with the provided URL changing the list name to \"My copied list\" EXAMPLE 4 $list = Get-PnPList -Identity \"My List\" Copy-PnPList -Identity $list -Title \"My copied list\" Copies the list \"My List\" to the site with the provided URL changing the list name to \"My copied list\" EXAMPLE 5 Get-PnPList | ? Title -like \"*Test*\" | Copy-PnPList -DestinationWebUrl https://contoso.sharepoint.com/sites/hrdepartment Copies all the lists on the current site having a title that contains \"Test\" to the site with the provided URL EXAMPLE 6 Copy-PnPList -SourceListUrl https://contoso.sharepoint.com/sites/templates/lists/mylist -Verbose -DestinationWebUrl https://contoso.sharepoint.com/sites/hrdepartment\\ Copies the list located at the provided URL through -SourceListUrl to the site provided through -DestinationWebUrl PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Title to give to the new list which will be created by copying an existing list Type: String Parameter Sets: TOCURRENTSITEBYURL, TOCURRENTSITEBYPIPE, LISTBYPIPE, LISTBYURL Required: True (TOCURRENTSITEBYURL, TOCURRENTSITEBYPIPE), False (LISTBYPIPE, LISTBYURL) Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity List id, name or instance of a list you want to make a copy of Type: ListPipeBind Parameter Sets: TOCURRENTSITEBYURL, LISTBYURL Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SourceListUrl Full SharePoint Online list URL to the list you want to make a copy of, i.e. https://contoso.sharepoint.com/sites/hrdepartment/lists/mylist Type: String Parameter Sets: TOCURRENTSITEBYURL, LISTBYURL Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DestinationWebUrl Full SharePoint Online site URL to the site where the list should be copied to, i.e. https://contoso.sharepoint.com/sites/hrdepartment Type: String Parameter Sets: LISTBYPIPE, LISTBYURL Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Switch parameter which executes the cmdlet but does not do the actual copy. Use in combination with -Verbose to see if all preconditions to be able to make a copy of the list are met without doing the actual copy. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Deny-PnPTenantServicePrincipalPermissionRequest.html": {
    "href": "cmdlets/Deny-PnPTenantServicePrincipalPermissionRequest.html",
    "title": "Deny-PnPTenantServicePrincipalPermissionRequest | PnP PowerShell",
    "keywords": "Deny-PnPTenantServicePrincipalPermissionRequest SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Denies a permission request for the current tenant's \"SharePoint Online Client\" service principal SYNTAX Deny-PnPTenantServicePrincipalPermissionRequest -RequestId <Guid> [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Denies a permission request for the current tenant's \"SharePoint Online Client\" service principal Denying a permission request removes that request from the list of permission requests. EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RequestId Type: Guid Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Disable-PnPFeature.html": {
    "href": "cmdlets/Disable-PnPFeature.html",
    "title": "Disable-PnPFeature | PnP PowerShell",
    "keywords": "Disable-PnPFeature SYNOPSIS Disables a feature SYNTAX Disable-PnPFeature [-Identity] <Guid> [-Force] [-Scope <FeatureScope>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Deactivates a feature that was active on a site EXAMPLES EXAMPLE 1 Disable-PnPFeature -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe This will disable the feature with the id \"99a00f6e-fb81-4dc7-8eac-e09c6f9132fe\" EXAMPLE 2 Disable-PnPFeature -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Force This will disable the feature with the id \"99a00f6e-fb81-4dc7-8eac-e09c6f9132fe\" with force. EXAMPLE 3 Disable-PnPFeature -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Scope Web This will disable the feature with the id \"99a00f6e-fb81-4dc7-8eac-e09c6f9132fe\" with the web scope. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifies whether to continue if an error occurs when deactivating the feature. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The id of the feature to disable. Type: Guid Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope Specify the scope of the feature to deactivate, either Web or Site. Defaults to Web. Type: FeatureScope Parameter Sets: (All) Accepted values: Web, Site Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Disable-PnPFlow.html": {
    "href": "cmdlets/Disable-PnPFlow.html",
    "title": "Disable-PnPFlow | PnP PowerShell",
    "keywords": "Disable-PnPFlow SYNOPSIS Required Permissions Azure: management.azure.com Disables a specific flow SYNTAX Disable-PnPFlow -Environment <PowerAutomateEnvironmentPipeBind> -Identity <PowerAutomateFlowPipeBind> [-AsAdmin] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This cmdlet disables a specific flow EXAMPLES Example 1 $environment = Get-PnPFlowEnvironment Disable-PnPFlow -Environment $environment -Identity fba63225-baf9-4d76-86a1-1b42c917a182 Disables the specified flow PARAMETERS -AsAdmin Disable the flow as an adminstrator Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Environment The name of the environment or an Environment object to retrieve the available flows for. Type: PowerAutomateEnvironmentPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Identity of the flow to disable Type: PowerAutomateFlowPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Disable-PnPPageScheduling.html": {
    "href": "cmdlets/Disable-PnPPageScheduling.html",
    "title": "Disable-PnPPageScheduling | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Disable-PnPPageScheduling SYNOPSIS Disables the modern page schedule feature SYNTAX Disable-PnPPageScheduling [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This will disable page publishing scheduling on modern sites EXAMPLES EXAMPLE 1 Disable-PnPPageScheduling This will disable page publishing scheduling on the current site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Disable-PnPSharingForNonOwnersOfSite.html": {
    "href": "cmdlets/Disable-PnPSharingForNonOwnersOfSite.html",
    "title": "Disable-PnPSharingForNonOwnersOfSite | PnP PowerShell",
    "keywords": "Disable-PnPSharingForNonOwnersOfSite SYNOPSIS Configures the site to only allow sharing of the site and items in the site by owners SYNTAX Disable-PnPSharingForNonOwnersOfSite [-Identity <SitePipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Configures the site to only allow sharing of the site and items in the site by owners. At this point there is no interface available yet to undo this action through script. You will have to do so through the user interface of SharePoint. EXAMPLES EXAMPLE 1 Disable-PnPSharingForNonOwnersOfSite Restricts sharing of the site and items in the site only to owners PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Type: SitePipeBind Parameter Sets: (All) Aliases: Url Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Disable-PnPSiteClassification.html": {
    "href": "cmdlets/Disable-PnPSiteClassification.html",
    "title": "Disable-PnPSiteClassification | PnP PowerShell",
    "keywords": "Disable-PnPSiteClassification SYNOPSIS Required Permissions Microsoft Graph API: Directory.ReadWrite.All Disables Site Classifications for the tenant SYNTAX Disable-PnPSiteClassification [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Disable-PnPSiteClassification Disables Site Classifications for your tenant. PARAMETERS RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Disable-PnPTenantServicePrincipal.html": {
    "href": "cmdlets/Disable-PnPTenantServicePrincipal.html",
    "title": "Disable-PnPTenantServicePrincipal | PnP PowerShell",
    "keywords": "Disable-PnPTenantServicePrincipal SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Enables the current tenant's \"SharePoint Online Client\" service principal. SYNTAX Disable-PnPTenantServicePrincipal [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Enables the current tenant's \"SharePoint Online Client\" service principal. EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Disconnect-PnPOnline.html": {
    "href": "cmdlets/Disconnect-PnPOnline.html",
    "title": "Disconnect-PnPOnline | PnP PowerShell",
    "keywords": "Disconnect-PnPOnline SYNOPSIS Disconnects the current connection and clears its token cache. SYNTAX Disconnect-PnPOnline [<CommonParameters>] DESCRIPTION Disconnects the current connection and clears its token cache. It will require you to build up a new connection again using Connect-PnPOnline in order to use any of the PnP PowerShell cmdlets. You will have to reauthenticate. If instead you simply want to connect to another site collection within the same tenant using the same credentials you used previously, do not use this cmdlet but instead use Connect-PnPOnline -Url https://tenant.sharepoint.com/sites/othersite instead without disconnecting. It will try to reuse the existing authentication method and cached credentials. Note that this cmdlet does not support passing in a specific connection to disconnect. If you wish to dispose a specific connection you have set up in a variable using $variable = Connect-PnPOnline -ReturnConnection , just dispose that variable using $variable = $null and it will be cleared from memory. EXAMPLES EXAMPLE 1 Disconnect-PnPOnline This will clear out all active tokens from the current connection PARAMETERS RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Enable-PnPCommSite.html": {
    "href": "cmdlets/Enable-PnPCommSite.html",
    "title": "Enable-PnPCommSite | PnP PowerShell",
    "keywords": "Enable-PnPCommSite SYNOPSIS Enables the modern communication site experience on a classic team site. SYNTAX Enable-PnPCommSite [-DesignPackageId <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This command will enable the modern site experience on a classic team site. The site must be the root site of the site collection. EXAMPLES EXAMPLE 1 Enable-PnPCommSite Enables the modern communication site experience on a classic team site EXAMPLE 2 Enable-PnPCommSite -DesignPackageId 6142d2a0-63a5-4ba0-aede-d9fefca2c767 Enables the modern communication site experience on a classic team site, allowing to specify the design package to be applied PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DesignPackageId The id (guid) of the design package to apply: 96c933ac-3698-44c7-9f4a-5fd17d71af9e (Topic = default), 6142d2a0-63a5-4ba0-aede-d9fefca2c767 (Showcase) or f6cc5403-0d63-442e-96c0-285923709ffc (Blank). Type: String Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Enable-PnPFeature.html": {
    "href": "cmdlets/Enable-PnPFeature.html",
    "title": "Enable-PnPFeature | PnP PowerShell",
    "keywords": "Enable-PnPFeature SYNOPSIS Enables a feature SYNTAX Enable-PnPFeature [-Identity] <Guid> [-Force] [-Scope <FeatureScope>] [-Sandboxed] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Enable-PnPFeature -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe This will enable the feature with the id \"99a00f6e-fb81-4dc7-8eac-e09c6f9132fe\" EXAMPLE 2 Enable-PnPFeature -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Force This will enable the feature with the id \"99a00f6e-fb81-4dc7-8eac-e09c6f9132fe\" with force. EXAMPLE 3 Enable-PnPFeature -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Scope Web This will enable the feature with the id \"99a00f6e-fb81-4dc7-8eac-e09c6f9132fe\" with the web scope. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifies whether to overwrite an existing feature with the same feature identifier. This parameter is ignored if there are no errors. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The id of the feature to enable. Type: Guid Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Sandboxed Specify this parameter if the feature you're trying to activate is part of a sandboxed solution. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope Specify the scope of the feature to activate, either Web or Site. Defaults to Web. Type: FeatureScope Parameter Sets: (All) Accepted values: Web, Site Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Enable-PnPFlow.html": {
    "href": "cmdlets/Enable-PnPFlow.html",
    "title": "Enable-PnPFlow | PnP PowerShell",
    "keywords": "Enable-PnPFlow SYNOPSIS Required Permissions Azure: management.azure.com Enables a specific flow SYNTAX Enable-PnPFlow -Environment <PowerAutomateEnvironmentPipeBind> -Identity <PowerAutomateFlowPipeBind> [-AsAdmin] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This cmdlet enables a specific flow EXAMPLES Example 1 $environment = Get-PnPFlowEnvironment Enable-PnPFlow -Environment $environment -Identity fba63225-baf9-4d76-86a1-1b42c917a182 Enables the specified flow PARAMETERS -Environment The name of the environment or an Environment object to retrieve the available flows for. Type: PowerAutomateEnvironmentPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Identity of the flow to enable Type: PowerAutomateFlowPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AsAdmin Enable the flow as an adminstrator Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Enable-PnPPageScheduling.html": {
    "href": "cmdlets/Enable-PnPPageScheduling.html",
    "title": "Enable-PnPPageScheduling | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Enable-PnPPageScheduling SYNOPSIS Enables the modern page schedule feature SYNTAX Enable-PnPPageScheduling [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This will enable page publishing scheduling on modern sites EXAMPLES EXAMPLE 1 Enable-PnPPageScheduling This will enable page publishing scheduling on the current site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Enable-PnPSiteClassification.html": {
    "href": "cmdlets/Enable-PnPSiteClassification.html",
    "title": "Enable-PnPSiteClassification | PnP PowerShell",
    "keywords": "Enable-PnPSiteClassification SYNOPSIS Required Permissions Microsoft Graph API: Directory.ReadWrite.All Enables Site Classifications for the tenant SYNTAX Enable-PnPSiteClassification -Classifications <System.Collections.Generic.List`1[System.String]> -DefaultClassification <String> [-UsageGuidelinesUrl <String>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Enable-PnPSiteClassification -Classifications \"HBI\",\"LBI\",\"Top Secret\" -DefaultClassification \"LBI\" Enables Site Classifications for your tenant and provides three classification values. The default value will be set to \"LBI\" EXAMPLE 2 Enable-PnPSiteClassification -Classifications \"HBI\",\"LBI\",\"Top Secret\" -UsageGuidelinesUrl https://aka.ms/m365pnp Enables Site Classifications for your tenant and provides three classification values. The usage guideliness will be set to the specified URL. PARAMETERS -Classifications Type: System.Collections.Generic.List`1[System.String] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultClassification Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UsageGuidelinesUrl Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Enable-PnPTenantServicePrincipal.html": {
    "href": "cmdlets/Enable-PnPTenantServicePrincipal.html",
    "title": "Enable-PnPTenantServicePrincipal | PnP PowerShell",
    "keywords": "Enable-PnPTenantServicePrincipal SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Enables the current tenant's \"SharePoint Online Client\" service principal. SYNTAX Enable-PnPTenantServicePrincipal [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Enables the current tenant's \"SharePoint Online Client\" service principal. EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Export-PnPFlow.html": {
    "href": "cmdlets/Export-PnPFlow.html",
    "title": "Export-PnPFlow | PnP PowerShell",
    "keywords": "Export-PnPFlow SYNOPSIS Required Permissions Azure: management.azure.com Exports a Microsoft Power Automate Flow SYNTAX As ZIP Package Export-PnPFlow -Environment <PowerAutomateEnvironmentPipeBind> -Identity <PowerAutomateFlowPipeBind> [-AsZipPackage] [-PackageDisplayName <String>] [-PackageDescription <String>] [-PackageCreatedBy <String>] [-PackageSourceEnvironment <String>] [-OutPath <String>] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] As Json Export-PnPFlow -Environment <PowerAutomateEnvironmentPipeBind> -Identity <PowerAutomateFlowPipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This cmdlet exports a Microsoft Power Automate Flow either as a json file or as a zip package. Many times exporting a Microsoft Power Automate Flow will not be possible due to various reasons such as connections having gone stale, SharePoint sites referenced no longer existing or other configuration errors in the Flow. To display these errors when trying to export a Flow, provide the -Verbose flag with your export request. If not provided, these errors will silently be ignored. EXAMPLES Example 1 $environment = Get-PnPPowerPlatformEnvironment -IsDefault $true Export-PnPFlow -Environment $environment -Identity fba63225-baf9-4d76-86a1-1b42c917a182 This will export the specified Microsoft Power Automate Flow from the default Power Platform environment as an output to the current output of PowerShell Example 2 Get-PnPPowerPlatformEnvironment | foreach { Get-PnPFlow -Environment $_.Name } | foreach { Export-PnPFlow -Environment $_.Properties.EnvironmentDetails.Name -Identity $_ -OutPath \"c:\\flows\\$($_.Name).zip\" -AsZipPackage } This will export all the Microsoft Power Automate Flows available within the tenant from all users from all the available Power Platform environments as a ZIP package for each of them to a local folder c:\\flows PARAMETERS -AsZipPackage If specified the flow will be exported as a zip package Type: SwitchParameter Parameter Sets: As ZIP Package Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Environment The environment which contains the flow. Type: PowerAutomateEnvironmentPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The value of the Name property of a Microsoft Power Automate Flow that you wish to export Type: PowerAutomateFlowPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If specified and the file exported already exists it will be overwritten without confirmation. Type: SwitchParameter Parameter Sets: As ZIP Package Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OutPath Optional file name of the file to export to. If not provided, it will store the ZIP package to the current location from where the cmdlet is being run. Type: String Parameter Sets: As ZIP Package Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PackageCreatedBy The name of the person to be used as the creator of the exported package Type: String Parameter Sets: As ZIP Package Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PackageDescription The description to use in the exported package Type: String Parameter Sets: As ZIP Package Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PackageDisplayName The display name to use in the exported package Type: String Parameter Sets: As ZIP Package Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PackageSourceEnvironment The name of the source environment from which the exported package was taken Type: String Parameter Sets: As ZIP Package Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Export-PnPListToSiteTemplate.html": {
    "href": "cmdlets/Export-PnPListToSiteTemplate.html",
    "title": "Export-PnPListToSiteTemplate | PnP PowerShell",
    "keywords": "Export-PnPListToSiteTemplate SYNOPSIS Exports one or more lists to provisioning template SYNTAX Export-PnPListToSiteTemplate -List <System.Collections.Generic.List`1[System.String]> [[-Out] <String>] [[-Schema] <XMLPnPSchemaVersion>] [-Force] [-OutputInstance] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Export-PnPListToSiteTemplate -Out template.xml -List \"Documents\" Extracts a list to a new provisioning template including the list specified by title or ID. EXAMPLE 2 Export-PnPListToSiteTemplate -Out template.pnp -List \"Documents\",\"Events\" Extracts a list to a new provisioning template Office Open XML file, including the lists specified by title or ID. PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Overwrites the output file if it exists. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List Specify the lists to extract, either providing their ID or their Title. Type: System.Collections.Generic.List`1[System.String] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Out Filename to write to, optionally including full path Type: String Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -OutputInstance Returns the template as an in-memory object, which is an instance of the SiteTemplate type of the PnP Core Component. It cannot be used together with the -Out parameter. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Schema The schema of the output to use, defaults to the latest schema Type: XMLPnPSchemaVersion Parameter Sets: (All) Accepted values: LATEST, V201503, V201505, V201508, V201512, V201605, V201705, V201801, V201805, V201807, V201903, V201909, V202002 Required: False Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Export-PnPPage.html": {
    "href": "cmdlets/Export-PnPPage.html",
    "title": "Export-PnPPage | PnP PowerShell",
    "keywords": "Export-PnPPage SYNOPSIS Exports a Client Side Page to a PnP Provisioning Template SYNTAX Export-PnPPage [-Identity] <PagePipeBind> [-PersistBrandingFiles] [-Out <String>] [-Force] [-Configuration <ExtractConfigurationPipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Export-PnPPage -Identity Home.aspx Exports the page 'Home.aspx' to a new PnP Provisioning Template PARAMETERS -Configuration Specify a JSON configuration file to configure the extraction progress. Type: ExtractConfigurationPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specify to override the question to overwrite a file if it already exists. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name of the page Type: ClientSidePagePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Out If specified the template will be saved to the file specified with this parameter. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PersistBrandingFiles If specified referenced files will be exported to the current folder. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Export-PnPPageMapping.html": {
    "href": "cmdlets/Export-PnPPageMapping.html",
    "title": "Export-PnPPageMapping | PnP PowerShell",
    "keywords": "Export-PnPPageMapping SYNOPSIS Get's the built-in maping files or a custom mapping file for your publishing portal page layouts. These mapping files are used to tailor the page transformation experience. SYNTAX Export-PnPPageMapping [-BuiltInWebPartMapping [<SwitchParameter>]] [-BuiltInPageLayoutMapping [<SwitchParameter>]] [-CustomPageLayoutMapping [<SwitchParameter>]] [-PublishingPage <PagePipeBind>] [-AnalyzeOOBPageLayouts [<SwitchParameter>]] [-Folder <String>] [-Overwrite [<SwitchParameter>]] [-Logging [<SwitchParameter>]] [-Connection <PnPConnection>] EXAMPLES ------------------EXAMPLE 1------------------ Export-PnPPageMapping -BuiltInPageLayoutMapping -CustomPageLayoutMapping -Folder c:\\\\temp -Overwrite Exports the built in page layout mapping and analyzes the current site's page layouts and exports these to files in folder c:\\temp ------------------EXAMPLE 2------------------ Export-PnPPageMapping -CustomPageLayoutMapping -PublishingPage mypage.aspx -Folder c:\\\\temp -Overwrite Analyzes the page layout of page mypage.aspx and exports this to a file in folder c:\\temp ------------------EXAMPLE 3------------------ Export-PnPPageMapping -BuiltInWebPartMapping -Folder c:\\\\temp -Overwrite Exports the built in webpart mapping to a file in folder c:\\temp. Use this a starting basis if you want to tailer the web part mapping behavior. PARAMETERS -AnalyzeOOBPageLayouts Set this flag if you also want to analyze the OOB page layouts...typically these are covered via the default mapping, but if you've updated these page layouts you might want to analyze them again Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -BuiltInPageLayoutMapping Exports the builtin pagelayout mapping file (only needed for publishing page transformation) Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -BuiltInWebPartMapping Exports the builtin web part mapping file Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -CustomPageLayoutMapping Analyzes the pagelayouts in the current publishing portal and exports them as a pagelayout mapping file Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -Folder The folder to created the mapping file(s) in Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -Logging Outputs analyser logging to the console Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -Overwrite Overwrites existing mapping files Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -PublishingPage The name of the publishing page to export a page layout mapping file for Type: PagePipeBind Parameter Sets: (All) Required: False Position: 0 Accept pipeline input: True -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Export-PnPTaxonomy.html": {
    "href": "cmdlets/Export-PnPTaxonomy.html",
    "title": "Export-PnPTaxonomy | PnP PowerShell",
    "keywords": "Export-PnPTaxonomy SYNOPSIS Exports a taxonomy to either the output or to a file. SYNTAX Export-PnPTaxonomy [-TermSetId <Guid>] [-IncludeID] [-Path <String>] [-TermStoreName <String>] [-Force] [-Delimiter <String>] [-Lcid <Int32>] [-Encoding <Encoding>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Export-PnPTaxonomy Exports the full taxonomy to the standard output EXAMPLE 2 Export-PnPTaxonomy -Path c:\\output.txt Exports the full taxonomy the file output.txt EXAMPLE 3 Export-PnPTaxonomy -Path c:\\output.txt -TermSetId f6f43025-7242-4f7a-b739-41fa32847254 Exports the term set with the specified id EXAMPLE 4 Export-PnPTaxonomy -Path c:\\output.txt -TermSetId f6f43025-7242-4f7a-b739-41fa32847254 -Lcid 1044 Exports the term set with the specified id using Norwegian labels PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Delimiter The path delimiter to be used, by default this is '|' Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Encoding Defaults to Unicode Type: Encoding Parameter Sets: (All) Accepted values: Unicode, ASCII, BigEndianUnicode, UTF32, UTF7, UTF8 Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Overwrites the output file if it exists. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeID If specified will include the ids of the taxonomy items in the output. Format: <label>;#<guid> Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Lcid Specify the language code for the exported terms Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path File to export the data to. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermSetId If specified, will export the specified termset only Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermStoreName Term store to export; if not specified the default term store is used. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Export-PnPTermGroupToXml.html": {
    "href": "cmdlets/Export-PnPTermGroupToXml.html",
    "title": "Export-PnPTermGroupToXml | PnP PowerShell",
    "keywords": "Export-PnPTermGroupToXml SYNOPSIS Exports a taxonomy TermGroup to either the output or to an XML file. SYNTAX Export-PnPTermGroupToXml [-Identity <TermGroupPipeBind>] [-Out <String>] [-FullTemplate] [-Encoding <Encoding>] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Export-PnPTermGroupToXml Exports all term groups in the default site collection term store to the standard output EXAMPLE 2 Export-PnPTermGroupToXml -Out output.xml Exports all term groups in the default site collection term store to the file 'output.xml' in the current folder EXAMPLE 3 Export-PnPTermGroupToXml -Out c:\\output.xml -Identity \"Test Group\" Exports the term group with the specified name to the file 'output.xml' located in the root folder of the C: drive. EXAMPLE 4 $termgroup = Get-PnPTermGroup -Identity Test $termgroup | Export-PnPTermGroupToXml -Out c:\\output.xml Retrieves a termgroup and subsequently exports that term group to a the file named 'output.xml' PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Encoding Defaults to Unicode Type: Encoding Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Overwrites the output file if it exists. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FullTemplate If specified, a full provisioning template structure will be returned Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID or name of the termgroup Type: TermGroupPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Out File to export the data to. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Export-PnPUserInfo.html": {
    "href": "cmdlets/Export-PnPUserInfo.html",
    "title": "Export-PnPUserInfo | PnP PowerShell",
    "keywords": "Export-PnPUserInfo SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Export user information from site user information list. SYNTAX Export-PnPUserInfo -LoginName <String> [-Site <String>] DESCRIPTION Export user information from the site user information list. If the Site parameter has not been specified, the current connect to site will be used. EXAMPLES EXAMPLE 1 Export-PnPUserInfo -LoginName user@domain.com -Site \"https://yoursite.sharepoint.com/sites/team\" This exports user data with the email address user@domain.com from the site collection specified. EXAMPLE 2 Export-PnPUserInfo -LoginName user@domain.com -Site \"https://yoursite.sharepoint.com/sites/team\" | ConvertTo-Csv | Out-File MyFile.csv This exports user data with the email address user@domain.com from the site collection specified, converts it to a CSV format and writes the result to the file MyFile.csv. PARAMETERS -LoginName Specifies the login name of the user to export. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site Specifies the URL of the site collection to which you want to export the user. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Export-PnPUserProfile.html": {
    "href": "cmdlets/Export-PnPUserProfile.html",
    "title": "Export-PnPUserProfile | PnP PowerShell",
    "keywords": "Export-PnPUserProfile SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Export user profile data. SYNTAX Export-PnPUserProfile -LoginName <String> [<CommonParameters>] DESCRIPTION Export user profile data. EXAMPLES EXAMPLE 1 Export-PnPUserProfile -LoginName user@domain.com This exports user profile data with the email address user@domain.com. EXAMPLE 2 Export-PnPUserProfile -LoginName user@domain.com | ConvertTo-Csv | Out-File MyFile.csv This exports user profile data with the email address user@domain.com, converts it to a CSV format and writes the result to the file MyFile.csv. PARAMETERS -LoginName Specifies the login name of the user to export. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Find-PnPFile.html": {
    "href": "cmdlets/Find-PnPFile.html",
    "title": "Find-PnPFile | PnP PowerShell",
    "keywords": "Find-PnPFile SYNOPSIS Finds a file in the virtual file system of the web. SYNTAX Web (Default) Find-PnPFile [-Match] <String> [-Connection <PnPConnection>] [<CommonParameters>] List Find-PnPFile [-Match] <String> -List <ListPipeBind> [-Connection <PnPConnection>] [<CommonParameters>] Folder Find-PnPFile [-Match] <String> -Folder <FolderPipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Find-PnPFile -Match *.master Will return all masterpages located in the current web. EXAMPLE 2 Find-PnPFile -List \"Documents\" -Match *.pdf Will return all pdf files located in given list. EXAMPLE 3 Find-PnPFile -Folder \"Shared Documents/Sub Folder\" -Match *.docx Will return all docx files located in given folder. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder Folder object or relative url of a folder to query Type: FolderPipeBind Parameter Sets: Folder Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List List title, url or an actual List object to query Type: ListPipeBind Parameter Sets: List Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Match Wildcard query Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAccessToken.html": {
    "href": "cmdlets/Get-PnPAccessToken.html",
    "title": "Get-PnPAccessToken | PnP PowerShell",
    "keywords": "Get-PnPAccessToken SYNOPSIS Returns the current Microsoft Graph OAuth Access token. If a Resource Type Name or Resource URL is specified, it will fetch the access token of the specified resource. SYNTAX Get-PnPAccessToken [-ResourceTypeName] [-ResourceUrl] [-Decoded] [<CommonParameters>] DESCRIPTION Gets the OAuth 2.0 Access Token to consume the Microsoft Graph API. Doesn't work with all Connect-PnPOnline options. To retrieve the SharePoint Online access token, instead use Get-PnPAppAuthAccessToken . EXAMPLES EXAMPLE 1 Get-PnPAccessToken Gets the OAuth 2.0 Access Token to consume the Microsoft Graph API EXAMPLE 2 Get-PnPAccessToken -ResourceTypeName SharePoint Gets the OAuth 2.0 Access Token to consume the SharePoint APIs and perform CSOM operations. EXAMPLE 3 Get-PnPAccessToken -ResourceTypeName ARM Gets the OAuth 2.0 Access Token to consume the Azure Resource Manager APIs and perform related operations. In PnP, you can use them in cmdlets related to Flow and PowerPlatform etc. EXAMPLE 4 Get-PnPAccessToken -ResourceUrl \"https://management.azure.com/.default\" Gets the OAuth 2.0 Access Token to consume the SharePoint APIs and perform CSOM operations. PARAMETERS -ResourceTypeName Specify the Resource Type for which you want the access token. If not specified, it will by default return Microsoft Graph access token. Type: ResourceTypeName Parameter Sets: Resource Type Name Accepted values: Graph, SharePoint, ARM Required: False Position: Named Default value: Graph Accept pipeline input: False Accept wildcard characters: False -ResourceUrl Specify the Resource URL for which you want the access token. If not specified, it will by default return Microsoft Graph access token. Type: String Parameter Sets: Resource Url Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Decoded Returns the details from the access token in a decoded manner Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAlert.html": {
    "href": "cmdlets/Get-PnPAlert.html",
    "title": "Get-PnPAlert | PnP PowerShell",
    "keywords": "Get-PnPAlert SYNOPSIS Returns registered alerts for a user. SYNTAX Get-PnPAlert [[-List] <ListPipeBind>] [-User <UserPipeBind>] [-Title <String>] [-AllUsers] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPAlert Returns all registered alerts for the current user. EXAMPLE 2 Get-PnPAlert -List \"Demo List\" Returns all alerts registered on the given list for the current user. EXAMPLE 3 Get-PnPAlert -List \"Demo List\" -User \"i:0#.f|membership|Alice@contoso.onmicrosoft.com\" Returns all alerts registered on the given list for the specified user. EXAMPLE 4 Get-PnPAlert -Title \"Demo Alert\" Returns all alerts with the given title for the current user. Title comparison is case sensitive. EXAMPLE 5 Get-PnPAlert -AllUsers Returns all alerts that exist in the current site, regardless of the user or list it belongs to. EXAMPLE 6 Get-PnPAlert -List \"Demo List\" -AllUsers Returns all alerts that exist in the current site for the list \"Demo List\", regardless of the user it belongs to. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Title Retrieve alerts with this title. Title comparison is case sensitive. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User User to retrieve the alerts for (User ID, login name or actual User object). Skip this parameter to retrieve the alerts for the current user. Note: Only site owners can retrieve alerts for other users. Type: UserPipeBind Parameter Sets: Alerts for a specific user Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllUsers Retrieves alerts for all users in the current site Type: SwitchParameter Parameter Sets: Alerts for all users Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPApp.html": {
    "href": "cmdlets/Get-PnPApp.html",
    "title": "Get-PnPApp | PnP PowerShell",
    "keywords": "Get-PnPApp SYNOPSIS Returns the available apps from the app catalog SYNTAX Get-PnPApp [[-Identity] <AppMetadataPipeBind>] [-Scope <AppCatalogScope>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPApp This will return all available apps from the tenant app catalog. It will list the installed version in the current site. EXAMPLE 2 Get-PnPApp -Scope Site This will return all available apps from the site collection scoped app catalog. It will list the installed version in the current site. EXAMPLE 3 Get-PnPApp -Identity 2646ccc3-6a2b-46ef-9273-81411cbbb60f This will retrieve the specific app from the app catalog. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the Id of an app which is available in the app catalog Type: AppMetadataPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Scope Defines which app catalog to use. Defaults to Tenant Type: AppCatalogScope Parameter Sets: (All) Accepted values: Tenant, Site Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAppAuthAccessToken.html": {
    "href": "cmdlets/Get-PnPAppAuthAccessToken.html",
    "title": "Get-PnPAppAuthAccessToken | PnP PowerShell",
    "keywords": "Get-PnPAppAuthAccessToken SYNOPSIS Returns the access token for SharePoint Online SYNTAX Get-PnPAppAuthAccessToken [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Returns the SharePoint Online access token from the current client context. This will only work in the App authentication flow (App+user or App-Only). For the Microsoft Graph access token, use Get-PnPAccessToken instead. EXAMPLES EXAMPLE 1 $accessToken = Get-PnPAppAuthAccessToken This will put the SharePoint Online access token from current context in the $accessToken variable PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAppErrors.html": {
    "href": "cmdlets/Get-PnPAppErrors.html",
    "title": "Get-PnPAppErrors | PnP PowerShell",
    "keywords": "Get-PnPAppErrors SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns application errors. SYNTAX Get-PnPAppErrors -ProductId <Guid> [-StartTimeInUtc <DateTime>] [-EndTimeInUtc <DateTime>] DESCRIPTION The Get-PnPAppErrors cmdlet returns application monitoring errors (if available) for the application that is specified by ProductId between StartTimeInUtc in Coordinated Universal Time (UTC) and EndTimeInUtc in UTC. Based on server configuration, errors are available for a limited time. The default is seven days. Older errors are purged. Date time values that are older than 50 years or later than 20 years from today are considered invalid Each error includes the error message, time in UTC that error happened, the site where the error happened, and the error type. Values for error type are as follows: 0 - None, 1 - Install Error, 2 - Upgrade Error, 3 - Runtime Error. EXAMPLES EXAMPLE 1 Get-PnPAppErrors -ProductId a2681b0c-84fe-41bf-9a8e-d480ab81ba7b This example returns a collection of monitoring error messages for the application with the specified id. EXAMPLE 2 Get-PnPAppErrors -ProductId a2681b0c-84fe-41bf-9a8e-d480ab81ba7b -StartTimeInUtc (Get-Date).AddHours(-1).ToUniversalTime() This example returns a collection of monitoring error messages for the last hour for the application with the specified id. PARAMETERS -ProductId Specifies the application id Type: Guid Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StartTimeInUtc Specifies the start time in UTC to search for monitoring errors. If not start time is given the default value of 72 hours before the current time is used. Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EndTimeInUtc Specifies the end time in UTC to search for monitoring errors. If not start time is given the current time is used. Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAppInfo.html": {
    "href": "cmdlets/Get-PnPAppInfo.html",
    "title": "Get-PnPAppInfo | PnP PowerShell",
    "keywords": "Get-PnPAppInfo SYNOPSIS Returns information about installed apps. SYNTAX By Id Get-PnPAppInfo -ProductId <Guid> By Name Get-PnPAppInfo -Name <String> DESCRIPTION The Get-PnPAppInfo cmdlet gets all the installed applications from an external marketplace or from the App Catalog that contain Name in their application names or the installed application with mentioned ProductId . The returned collection of installed applications contains Product ID (GUID), Product name and Source. EXAMPLES EXAMPLE 1 Get-PnPAppInfo -Name \"Excel Service\" This will return all installed apps from the external marketplace or from the App Catalog that contain \"Excel Service\" in the application name. EXAMPLE 2 Get-PnPAppInfo -ProductId 2646ccc3-6a2b-46ef-9273-81411cbbb60f This will return the installed application info for the app with the given product id. EXAMPLE 3 Get-PnPAppInfo -Name \" \" | Sort -Property Name Returns all installed apps that have a space in the name and sorts them by name in ascending order. PARAMETERS -Name Specifies the application's name. Type: String Parameter Sets: By Name Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ProductId Specifies the id of an application Type: Guid Parameter Sets: By Id Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPApplicationCustomizer.html": {
    "href": "cmdlets/Get-PnPApplicationCustomizer.html",
    "title": "Get-PnPApplicationCustomizer | PnP PowerShell",
    "keywords": "Get-PnPApplicationCustomizer SYNOPSIS Returns all SharePoint Framework client side extension application customizers SYNTAX Custom Action Id Get-PnPApplicationCustomizer [-Identity <Guid>] [-Scope <CustomActionScope>] [-ThrowExceptionIfCustomActionNotFound] [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] Client Side Component Id Get-PnPApplicationCustomizer -ClientSideComponentId <Guid> [-Scope <CustomActionScope>] [-ThrowExceptionIfCustomActionNotFound] [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] DESCRIPTION Returns all SharePoint Framework client side extension application customizers registered on the current web and/or site EXAMPLES EXAMPLE 1 Get-PnPApplicationCustomizer Returns the custom action representing the SharePoint Framework client side extension registrations registered on the current site collection and web. EXAMPLE 2 Get-PnPApplicationCustomizer -Identity aa66f67e-46c0-4474-8a82-42bf467d07f2 Returns the custom action representing the SharePoint Framework client side extension registration with the id 'aa66f67e-46c0-4474-8a82-42bf467d07f2'. EXAMPLE 3 Get-PnPApplicationCustomizer -ClientSideComponentId aa66f67e-46c0-4474-8a82-42bf467d07f2 -Scope Web Returns the custom action(s) being registered for a SharePoint Framework solution having the id 'aa66f67e-46c0-4474-8a82-42bf467d07f2' in its manifest from the current web. PARAMETERS -ClientSideComponentId The Client Side Component Id of the SharePoint Framework client side extension application customizer found in the manifest for which existing custom action(s) should be removed Type: Guid Parameter Sets: Client Side Component Id Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Identity of the SharePoint Framework client side extension application customizer to return. Omit to return all SharePoint Frameworkclient side extension application customizer. Type: Guid Parameter Sets: Custom Action Id Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope Scope of the SharePoint Framework client side extension application customizer, either Web, Site or All to return both (all is the default) Type: CustomActionScope Parameter Sets: (All) Accepted values: Web, Site, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ThrowExceptionIfCustomActionNotFound Switch parameter if an exception should be thrown if the requested SharePoint Frameworkclient side extension application customizer does not exist (true) or if omitted, nothing will be returned in case the SharePoint Framework client side extension application customizer does not exist Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAuditing.html": {
    "href": "cmdlets/Get-PnPAuditing.html",
    "title": "Get-PnPAuditing | PnP PowerShell",
    "keywords": "Get-PnPAuditing SYNOPSIS Get the Auditing setting of a site SYNTAX Get-PnPAuditing [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPAuditing Gets the auditing settings of the current site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAuthenticationRealm.html": {
    "href": "cmdlets/Get-PnPAuthenticationRealm.html",
    "title": "Get-PnPAuthenticationRealm | PnP PowerShell",
    "keywords": "Get-PnPAuthenticationRealm SYNOPSIS Returns the authentication realm SYNTAX Get-PnPAuthenticationRealm [[-Url] <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Gets the authentication realm for the current web EXAMPLES EXAMPLE 1 Get-PnPAuthenticationRealm This will get the authentication realm for the current connected site EXAMPLE 2 Get-PnPAuthenticationRealm -Url \"https://contoso.sharepoint.com\" This will get the authentication realm for https://contoso.sharepoint.com PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Specifies the URL of the site Type: String Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAvailableLanguage.html": {
    "href": "cmdlets/Get-PnPAvailableLanguage.html",
    "title": "Get-PnPAvailableLanguage | PnP PowerShell",
    "keywords": "Get-PnPAvailableLanguage SYNOPSIS Returns the available languages on the current web SYNTAX Get-PnPAvailableLanguage [[-Identity] <WebPipeBind>] [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPAvailableLanguage This will return the available languages in the current web PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The guid of the web or web object Type: WebPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAzureADApp.html": {
    "href": "cmdlets/Get-PnPAzureADApp.html",
    "title": "Get-PnPAzureADApp | PnP PowerShell",
    "keywords": "Get-PnPAzureADApp SYNOPSIS Required Permissions Microsoft Graph API: Application.Read.All Returns Azure AD App registrations SYNTAX Get-PnPAzureADApp [-Identity <AzureADAppPipeBind>] DESCRIPTION This cmdlets returns all app registrations or a specific one. EXAMPLES Example 1 Get-PnPAzureADApp This returns all Azure AD App registrations Example 2 Get-PnPAzureADApp -Identity MyApp This returns the Azure AD App registration with the display name as 'MyApp' Example 3 Get-PnPAzureADApp -Identity 93a9772d-d0af-4ed8-9821-17282b64690e This returns the Azure AD App registration with the app id specified or the id specified. PARAMETERS -Identity Specify the display name, id or app id. Type: AzureADAppPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAzureADAppPermission.html": {
    "href": "cmdlets/Get-PnPAzureADAppPermission.html",
    "title": "Get-PnPAzureADAppPermission | PnP PowerShell",
    "keywords": "Get-PnPAzureADAppPermission SYNOPSIS Required Permissions Microsoft Graph API: Application.Read.All Returns app permissions for Microsoft SharePoint and Microsoft Graph SYNTAX Get-PnPAzureADAppPermission [-Identity <AzureADAppPipeBind>] DESCRIPTION This cmdlet returns the appid, displayname and permissions set for Microsoft SharePoint and the Microsoft Graph APIs EXAMPLES Example 1 Get-PnPAzureADAppPermission Returns all apps with all permissions Example 2 Get-PnPAzureADAppPermission -Identity MyApp Returns permissions for the specified app Example 2 Get-PnPAzureADAppPermission -Identity 93a9772d-d0af-4ed8-9821-17282b64690e Returns permissions for the specified app PARAMETERS -Identity Specify the display name, id or app id. Type: AzureADAppPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAzureADAppSitePermission.html": {
    "href": "cmdlets/Get-PnPAzureADAppSitePermission.html",
    "title": "Get-PnPAzureADAppSitePermission | PnP PowerShell",
    "keywords": "Get-PnPAzureADAppSitePermission SYNOPSIS Required Permissions Microsoft Graph API: Sites.FullControl.All Returns Azure AD App permissions for a site SYNTAX All Permissions Get-PnPAzureADAppSitePermission [-PermissionId <String>] [-Site <SitePipeBind>] By Permission Id Get-PnPAzureADAppSitePermission -PermissionId <String> [-Site <SitePipeBind>] By App Display Name Get-PnPAzureADAppSitePermission -AppIdentity <String> [-Site <SitePipeBind>] DESCRIPTION This cmdlet returns app permissions for either the current or a given site. EXAMPLES EXAMPLE 1 Get-PnPAzureADAppSitePermission Returns the apps that have permissions for the currently connected to site. Note that if PermissionId is not specified then the Roles property is not populated. This is a current API limitation. EXAMPLE 2 Get-PnPAzureADAppSitePermissions -Site https://contoso.sharepoint.com/sites/projects Returns the apps that have permissions for the site specified. Note that you required to have the SharePoint Administrator role in your tenant to be able to use this command. EXAMPLE 3 Get-PnPAzureADAppSitePermission -PermissionId TowaS50fG1zLnNwLmV4dHwxYxNmI0OTI1 Returns the specific app permission details for the given permission id for the current site EXAMPLE 4 Get-PnPAzureADAppSitePermission -AppIdentity \"Test App\" Returns the specific app permission details for the app with the provided name EXAMPLE 5 Get-PnPAzureADAppSitePermission -AppIdentity \"14effc36-dc8b-4f68-8919-f6beb7d847b3\" Returns the specific app permission details for the app with the provided Id PARAMETERS -PermissionId If specified the permission with that id specified will be retrieved Type: String Parameter Sets: By Permission Id Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AppIdentity You can specify either the Display Name or the AppId to specifically retrieve the permission for. Type: String Parameter Sets: By Permission Id Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site Optional url to to a site to retrieve the permissions for. Defaults to the current site. Type: SitePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAzureADGroup.html": {
    "href": "cmdlets/Get-PnPAzureADGroup.html",
    "title": "Get-PnPAzureADGroup | PnP PowerShell",
    "keywords": "Get-PnPAzureADGroup SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.Read.All, Directory.ReadWrite.All, Group.Read.All, Group.ReadWrite.All, GroupMember.Read.All, GroupMember.ReadWrite.All Gets one Azure Active Directory group or a list of Azure Active Directory groups. This can be a security, distribution or Microsoft 365 group. SYNTAX Get-PnPAzureADGroup [-Identity <AzureADGroupPipeBind>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPAzureADGroup Retrieves all the Azure Active Directory groups EXAMPLE 2 Get-PnPAzureADGroup -Identity $groupId Retrieves a specific Azure Active Directory group based on its ID EXAMPLE 3 Get-PnPAzureADGroup -Identity $groupDisplayName Retrieves a specific Azure Active Directory group that has the given DisplayName EXAMPLE 4 Get-PnPAzureADGroup -Identity $groupSiteMailNickName Retrieves a specific Azure Active Directory group for which the email address equals the provided mail nickName EXAMPLE 5 Get-PnPAzureADGroup -Identity $group Retrieves a specific Azure Active Directory group based on its group object instance PARAMETERS -Identity The Identity of the Azure Active Directory group Type: AzureADGroupPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAzureADGroupMember.html": {
    "href": "cmdlets/Get-PnPAzureADGroupMember.html",
    "title": "Get-PnPAzureADGroupMember | PnP PowerShell",
    "keywords": "Get-PnPAzureADGroupMember SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.Read.All, Directory.ReadWrite.All, Group.Read.All, Group.ReadWrite.All, GroupMember.Read.All, GroupMember.ReadWrite.All, User.Read.All, User.ReadWrite.All Gets members of a particular Azure Active Directory group. This can be a security, distribution or Microsoft 365 group. SYNTAX Get-PnPAzureADGroupMember -Identity <AzureADGroupPipeBind> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPAzureADGroupMember -Identity $groupId Retrieves all the members of a specific Azure Active Directory group based on its ID EXAMPLE 2 Get-PnPAzureADGroupMember -Identity $group Retrieves all the members of a specific Azure Active Directory group based on the group's object instance PARAMETERS -Identity The Identity of the Azure Active Directory group Type: AzureADGroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAzureADGroupOwner.html": {
    "href": "cmdlets/Get-PnPAzureADGroupOwner.html",
    "title": "Get-PnPAzureADGroupOwner | PnP PowerShell",
    "keywords": "Get-PnPAzureADGroupOwner SYNOPSIS Required Permissions Microsoft Graph API : One of Group.Read.All, Group.ReadWrite.All, User.Read.All, User.ReadWrite.All Gets owners of a particular Azure Active Directory group. This can be a security, distribution or Microsoft 365 group. SYNTAX Get-PnPAzureADGroupOwner -Identity <AzureADGroupPipeBind> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPAzureADGroupOwner -Identity $groupId Retrieves all the owners of a specific Azure Active Directory group based on its ID EXAMPLE 2 Get-PnPAzureADGroupOwner -Identity $group Retrieves all the owners of a specific Azure Active Directory group based on the group's object instance PARAMETERS -Identity The Identity of the Azure Active Directory group. Type: AzureADGroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAzureADUser.html": {
    "href": "cmdlets/Get-PnPAzureADUser.html",
    "title": "Get-PnPAzureADUser | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPAzureADUser SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.Read.All, Directory.ReadWrite.All, User.Read.All, User.ReadWrite.All Retrieves users from Azure Active Directory. By default the following properties will be loaded: BusinessPhones, DisplayName, GivenName, JobTitle, Mail, MobilePhone, OfficeLocation, PreferredLanguage, Surname, UserPrincipalName, Id, AccountEnabled SYNTAX Return a list (Default) Get-PnPAzureADUser [-Filter <String>] [-OrderBy <String>] [-Select <String[]>] [-StartIndex <Int32>] [-EndIndex<Int32>] [<CommonParameters>] Return by specific ID Get-PnPAzureADUser [-Identity <String>] [-Select <String[]>] [<CommonParameters>] Return the delta Get-PnPAzureADUser [-Filter <String>] [-OrderBy <String>] [-Select <String[]>] [-Delta] [-DeltaToken <String>] [-StartIndex <Int32>] [-EndIndex<Int32>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPAzureADUser Retrieves all users from Azure Active Directory EXAMPLE 2 Get-PnPAzureADUser -EndIndex 50 Retrieves the first 50 users from Azure Active Directory. Notice that you have no control over who will be in this batch of 50 unless you combine it with the -Filter and/or -OrderBy parameters. EXAMPLE 3 Get-PnPAzureADUser -Identity 328c7693-5524-44ac-a946-73e02d6b0f98 Retrieves the user from Azure Active Directory with the id 328c7693-5524-44ac-a946-73e02d6b0f98 EXAMPLE 4 Get-PnPAzureADUser -Identity john@contoso.com Retrieves the user from Azure Active Directory with the user principal name john@contoso.com EXAMPLE 5 Get-PnPAzureADUser -Identity john@contoso.com -Select \"DisplayName\",\"extension_3721d05137db455ad81aa442e3c2d4f9_extensionAttribute1\" Retrieves only the DisplayName and extensionAttribute1 properties of the user from Azure Active Directory which has the user principal name john@contoso.com EXAMPLE 6 Get-PnPAzureADUser -Filter \"accountEnabled eq false\" Retrieves all the disabled users from Azure Active Directory EXAMPLE 7 Get-PnPAzureADUser -Filter \"startswith(DisplayName, 'John')\" -OrderBy \"DisplayName\" Retrieves all the users from Azure Active Directory of which their DisplayName starts with 'John' and sort the results by the DisplayName EXAMPLE 8 Get-PnPAzureADUser -Delta Retrieves all the users from Azure Active Directory and include a delta DeltaToken which can be used by providing -DeltaToken <token> to query for changes to users in Active Directory since this run EXAMPLE 9 Get-PnPAzureADUser -Delta -DeltaToken abcdef Retrieves all the users from Azure Active Directory which have had changes since the provided DeltaToken was given out EXAMPLE 10 Get-PnPAzureADUser -StartIndex 10 -EndIndex 20 Retrieves the 10th through the 20th user from Azure Active Directory. Notice that you have no control over which users will be in this batch of 10 users. PARAMETERS -Delta Retrieves all users and provides a SkipToken delta token to allow to query for changes since this run when querying again by adding -DeltaToken to the command Type: SwitchParameter Parameter Sets: Return the delta Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DeltaToken The change token provided during the previous run with -Delta to query for the changes to user objects made in Azure Active Directory since that run Type: String Parameter Sets: Return the delta Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Filter Includes a filter to the retrieval of the users. Use OData instructions to construct the filter, i.e. \"startswith(DisplayName, 'John')\". Type: String Parameter Sets: Return a list, Return the delta Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Returns the user with the provided user id Type: String Parameter Sets: Return by specific ID Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OrderBy Includes a custom sorting instruction to the retrieval of the users. Use OData syntax to construct the orderby, i.e. \"DisplayName desc\". Type: String Parameter Sets: Return a list, Return the delta Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Select Allows providing an array with the property names of specific properties to return. If not provided, the default properties will be returned. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StartIndex Allows defining the first result to return. Useful for i.e. pagination. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EndIndex Allows defining the last result to return. Useful for i.e. pagination. If omitted, it will return all available users from Azure Active Directory. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: $null Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPAzureCertificate.html": {
    "href": "cmdlets/Get-PnPAzureCertificate.html",
    "title": "Get-PnPAzureCertificate | PnP PowerShell",
    "keywords": "Get-PnPAzureCertificate SYNOPSIS Get PEM values and manifest settings for an existing certificate (.pfx) for use when using CSOM via an app-only ADAL application. See https://github.com/SharePoint/PnP-PowerShell/tree/master/Samples/SharePoint.ConnectUsingAppPermissions for a sample on how to get started. KeyCredentials contains the ADAL app manifest sections. Certificate contains the PEM encoded certificate. PrivateKey contains the PEM encoded private key of the certificate. SYNTAX Get-PnPAzureCertificate -Path <String> [-Password <SecureString>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPAzureCertificate -Path \"mycert.pfx\" This will output PEM values and ADAL app manifest settings for the certificate mycert.pfx. EXAMPLE 2 Get-PnPAzureCertificate -Path \"mycert.pfx\" -Password (ConvertTo-SecureString -String \"YourPassword\" -AsPlainText -Force) This will output PEM values and ADAL app manifest settings for the certificate mycert.pfx which has the password YourPassword. EXAMPLE 3 Get-PnPAzureCertificate -Path \"mycert.cer\" | clip Output the JSON snippet which needs to be replaced in the application manifest file and copies it to the clipboard PARAMETERS -Password Password to the certificate (*.pfx) Type: SecureString Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Path to the certificate (*.pfx) Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPBrowserIdleSignout.html": {
    "href": "cmdlets/Get-PnPBrowserIdleSignout.html",
    "title": "Get-PnPBrowserIdleSignout | PnP PowerShell",
    "keywords": "Get-PnPBrowserIdleSignout SYNOPSIS Used to retrieve the current configuration values for Idle session sign-out policy. SYNTAX Get-PnPBrowserIdleSignout DESCRIPTION Use this cmdlet to retrieve the current configuration values for Idle session sign-out policy, the time at which users are warned and subsequently signed out of Microsft 365 after a period of browser inactivity in SharePoint and OneDrive. EXAMPLES EXAMPLE 1 Get-PnPBrowserIdleSignOut This example retrieves the current configuration values for Idle session sign-out RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPBuiltInDesignPackageVisibility.html": {
    "href": "cmdlets/Get-PnPBuiltInDesignPackageVisibility.html",
    "title": "Get-PnPBuiltInDesignPackageVisibility | PnP PowerShell",
    "keywords": "Get-PnPBuiltInDesignPackageVisibility SYNOPSIS Gets the visibility of the available built-in Design Packages. SYNTAX Get-PnPBuiltInDesignPackageVisibility [-DesignPackage <DesignPackageType>] [<CommonParameters>] DESCRIPTION Use this cmdlet to retrieve the current visibility state of each built-in design package. EXAMPLES EXAMPLE 1 Get-PnPBuiltInDesignPackageVisibility -DesignPackage Showcase This example retrieves the current visibility state of Showcase built-in design package. EXAMPLE 2 Get-PnPBuiltInDesignPackageVisibility This example retrieves the current visibility state of each built-in design package. PARAMETERS -DesignPackage Name of the design package, available names are Topic Showcase Blank TeamSite Type: DesignPackageType Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPBuiltInSiteTemplateSettings.html": {
    "href": "cmdlets/Get-PnPBuiltInSiteTemplateSettings.html",
    "title": "Get-PnPBuiltInSiteTemplateSettings | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPBuiltInSiteTemplateSettings SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Retrieves the current configuration of the built into SharePoint Online site templates. SYNTAX Get-PnPBuiltInSiteTemplateSettings [-Identity <BuiltInSiteTemplateSettingsPipeBind>] [-Template <BuiltInSiteTemplates>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Retrieves the current configuration of the built into SharePoint Online site templates. EXAMPLES EXAMPLE 1 Get-PnPBuiltInSiteTemplateSettings Returns all available configuration for the all of built into SharePoint Online site templates. If no configuration has been set previously for a template, no configuration for it will be returned, meaning it will be visible. EXAMPLE 2 Get-PnPBuiltInSiteTemplateSettings -Identity 9522236e-6802-4972-a10d-e98dc74b3344 Returns the configuration for the Event Planning built into SharePoint Online site template. EXAMPLE 3 Get-PnPBuiltInSiteTemplateSettings -Template CrisisManagement Returns the configuration for the Crisis Management built into SharePoint Online site template. EXAMPLE 4 Get-PnPBuiltInSiteTemplateSettings -Identity 00000000-0000-0000-0000-000000000000 Returns the default configuration for the built into SharePoint Online site templates. EXAMPLE 5 Get-PnPBuiltInSiteTemplateSettings -Template All Returns the default configuration for the built into SharePoint Online site templates. PARAMETERS -Identity Id of the built into SharePoint Online site template to return configuration settings for. If no configuration has been set previously for a template, no configuration for it will be returned, meaning it will be visible. See https://docs.microsoft.com/powershell/module/sharepoint-online/set-spobuiltinsitetemplatesettings?view=sharepoint-ps#description for the full list of available types. Type: Guid Parameter Sets: ByIdentity Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Template Internal name of the built into SharePoint Online site template to return configuration settings for. If no configuration has been set previously for a template, no configuration for it will be returned, meaning it will be visible. Type: BuiltInSiteTemplates Parameter Sets: ByTemplate Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPChangeLog.html": {
    "href": "cmdlets/Get-PnPChangeLog.html",
    "title": "Get-PnPChangeLog | PnP PowerShell",
    "keywords": "Get-PnPChangeLog SYNOPSIS Returns the changelog for PnP PowerShell SYNTAX Get-PnPChangeLog [-Nightly] DESCRIPTION This cmdlets returns the changelog in markdown format. It is retrieved dynamically from GitHub. EXAMPLES EXAMPLE 1 Get-PnPChangeLog Returns the changelog for the currently released version. EXAMPLE 2 Get-PnPChangeLog -Nightly Returns the changelog for the current nightly build. PARAMETERS -Nightly Return the changelog for the nightly build Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPCompatibleHubContentTypes.html": {
    "href": "cmdlets/Get-PnPCompatibleHubContentTypes.html",
    "title": "Get-PnPCompatibleHubContentTypes | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPCompatibleHubContentTypes SYNOPSIS Required Permissions ViewPages permission on the current web. Returns the list of content types present in content type hub site that can be added to the root web or a list on a target site. SYNTAX Get-PnPCompatibleHubContentTypes -WebUrl <String> [-ListUrl <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPCompatibleHubContentTypes -WebUrl 'https://contoso.sharepoint.com/web1' This will return the list of content types present in content type hub site that can be added to the root web of the site to which the provided web belongs. EXAMPLE 2 Get-PnPCompatibleHubContentTypes -WebUrl 'https://contoso.sharepoint.com/web1' -ListUrl 'https://contoso.sharepoint.com/web1/Shared Documents' This will return the list of content types present in content type hub site that can be added to the provided list. PARAMETERS -WebUrl The full URL of the web for which compatible content types need to be fetched. In case of a list this should be the url of the web which contains the given list. I.e. 'https://contoso.sharepoint.com/web1' Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ListUrl The full URL to the list for which compatible content types need to be fetched, i.e. 'https://contoso.sharepoint.com/web1/Shared Documents' Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPConnection.html": {
    "href": "cmdlets/Get-PnPConnection.html",
    "title": "Get-PnPConnection | PnP PowerShell",
    "keywords": "Get-PnPConnection SYNOPSIS Returns the current connection SYNTAX Get-PnPConnection [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Returns a PnP PowerShell Connection for use with the -Connection parameter on other cmdlets. EXAMPLES EXAMPLE 1 $ctx = Get-PnPConnection This will put the current connection for use with the -Connection parameter on other cmdlets. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by specifying -ReturnConnection on Connect-PnPOnline. If not provided, the connection will be retrieved from the current context. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPContentType.html": {
    "href": "cmdlets/Get-PnPContentType.html",
    "title": "Get-PnPContentType | PnP PowerShell",
    "keywords": "Get-PnPContentType SYNOPSIS Retrieves a content type SYNTAX Get-PnPContentType [[-Identity] <ContentTypePipeBind>] [-List <ListPipeBind>] [-InSiteHierarchy] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPContentType This will get a listing of all available content types within the current web EXAMPLE 2 Get-PnPContentType -InSiteHierarchy This will get a listing of all available content types within the site collection EXAMPLE 3 Get-PnPContentType -Identity \"Project Document\" This will get the content type with the name \"Project Document\" within the current context EXAMPLE 4 Get-PnPContentType -List \"Documents\" This will get a listing of all available content types within the list \"Documents\" PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Name or ID of the content type to retrieve Type: ContentTypePipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -InSiteHierarchy Search site hierarchy for content types Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List List to query Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPContentTypePublishingHubUrl.html": {
    "href": "cmdlets/Get-PnPContentTypePublishingHubUrl.html",
    "title": "Get-PnPContentTypePublishingHubUrl | PnP PowerShell",
    "keywords": "Get-PnPContentTypePublishingHubUrl SYNOPSIS Returns the url to Content Type Publishing Hub SYNTAX Get-PnPContentTypePublishingHubUrl [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 $url = Get-PnPContentTypePublishingHubUrl Connect-PnPOnline -Url $url Get-PnPContentType This will retrieve the url to the content type hub, connect to it, and then retrieve the content types form that site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPContentTypePublishingStatus.html": {
    "href": "cmdlets/Get-PnPContentTypePublishingStatus.html",
    "title": "Get-PnPContentTypePublishingStatus | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPContentTypePublishingStatus SYNOPSIS Required Permissions Fullcontrol permission on the content type hub site. Returns the publishing status of a content type present on content type hub site. SYNTAX Get-PnPContentTypePublishingStatus -ContentType <ContentTypePipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPContentTypePublishingStatus -ContentType 0x0101 This will return True if content type is published in the content type hub site otherwise it will return False . PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType The content type object in the content type hub site for which the publishing status needs to be fetched. Type: ContentType Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPContext.html": {
    "href": "cmdlets/Get-PnPContext.html",
    "title": "Get-PnPContext | PnP PowerShell",
    "keywords": "Get-PnPContext SYNOPSIS Returns the current SharePoint Online CSOM context SYNTAX Get-PnPContext [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Returns a SharePoint Online Client Side Object Model (CSOM) context EXAMPLES EXAMPLE 1 $ctx = Get-PnPContext This will put the current context in the $ctx variable. EXAMPLE 2 Connect-PnPOnline -Url $siteAurl -Credentials $credentials $ctx = Get-PnPContext Get-PnPList # returns the lists from site specified with $siteAurl Connect-PnPOnline -Url $siteBurl -Credentials $credentials Get-PnPList # returns the lists from the site specified with $siteBurl Set-PnPContext -Context $ctx # switch back to site A Get-PnPList # returns the lists from site A PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. If not provided, the context of the connection will be retrieved from the current connection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPCustomAction.html": {
    "href": "cmdlets/Get-PnPCustomAction.html",
    "title": "Get-PnPCustomAction | PnP PowerShell",
    "keywords": "Get-PnPCustomAction SYNOPSIS Return user custom actions SYNTAX Get-PnPCustomAction [-Identity <Guid>] [-Scope <CustomActionScope>] [-ThrowExceptionIfCustomActionNotFound] [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] DESCRIPTION Returns all or a specific user custom action EXAMPLES EXAMPLE 1 Get-PnPCustomAction Returns all custom actions of the current site. EXAMPLE 2 Get-PnPCustomAction -Identity aa66f67e-46c0-4474-8a82-42bf467d07f2 Returns the custom action with the id 'aa66f67e-46c0-4474-8a82-42bf467d07f2'. EXAMPLE 3 Get-PnPCustomAction -Scope web Returns all custom actions for the current web object. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Identity of the CustomAction to return. Omit to return all CustomActions. Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope Scope of the CustomAction, either Web, Site or All to return both Type: CustomActionScope Parameter Sets: (All) Accepted values: Web, Site, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ThrowExceptionIfCustomActionNotFound Switch parameter if an exception should be thrown if the requested CustomAction does not exist (true) or if omitted, nothing will be returned in case the CustomAction does not exist Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPDefaultColumnValues.html": {
    "href": "cmdlets/Get-PnPDefaultColumnValues.html",
    "title": "Get-PnPDefaultColumnValues | PnP PowerShell",
    "keywords": "Get-PnPDefaultColumnValues SYNOPSIS Gets the default column values for all folders in document library SYNTAX Get-PnPDefaultColumnValues [-List] <ListPipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Gets the default column values for a document library, per folder. Supports both text, people and taxonomy fields. EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Name or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPDeletedMicrosoft365Group.html": {
    "href": "cmdlets/Get-PnPDeletedMicrosoft365Group.html",
    "title": "Get-PnPDeletedMicrosoft365Group | PnP PowerShell",
    "keywords": "Get-PnPDeletedMicrosoft365Group SYNOPSIS Required Permissions Microsoft Graph API : One of Group.Read.All, Group.ReadWrite.All Gets one deleted Microsoft 365 Group or a list of deleted Microsoft 365 Groups SYNTAX Get-PnPDeletedMicrosoft365Group [-Identity <Microsoft365GroupPipeBind>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPDeletedMicrosoft365Group Retrieves all deleted Microsoft 365 Groups EXAMPLE 2 Get-PnPDeletedMicrosoft365Group -Identity 38b32e13-e900-4d95-b860-fb52bc07ca7f Retrieves a specific deleted Microsoft 365 Group based on its ID PARAMETERS -Identity The Identity of the Microsoft 365 Group Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPDiagnostics.html": {
    "href": "cmdlets/Get-PnPDiagnostics.html",
    "title": "Get-PnPDiagnostics | PnP PowerShell",
    "keywords": "Get-PnPDiagnostics SYNOPSIS Returns diagnostic information SYNTAX Get-PnPDiagnostics [<CommonParameters>] DESCRIPTION This cmdlet returns diagnostic information which can help to determine issues with PnP PowerShell EXAMPLES EXAMPLE 1 Get-PnPDiagnostics Returns basic diagnostic information, including the last error, the stacktrace, if applicable, etc. PARAMETERS RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPDisableSpacesActivation.html": {
    "href": "cmdlets/Get-PnPDisableSpacesActivation.html",
    "title": "Get-PnPDisableSpacesActivation | PnP PowerShell",
    "keywords": "Get-PnPDisableSpacesActivation SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Retrieves if SharePoint Spaces is disabled on the entire tenant SYNTAX Get-PnPDisableSpacesActivation [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Retrieves if SharePoint Spaces is disabled on the entire tenant. At this point there is no API yet for retrieving the setting for a specific site, although you can set it for a specific site. EXAMPLES EXAMPLE 1 Get-PnPDisableSpacesActivation Returns if SharePoint Spaces is disabled on the tenant PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPDocumentSetTemplate.html": {
    "href": "cmdlets/Get-PnPDocumentSetTemplate.html",
    "title": "Get-PnPDocumentSetTemplate | PnP PowerShell",
    "keywords": "Get-PnPDocumentSetTemplate SYNOPSIS Retrieves a document set template SYNTAX Get-PnPDocumentSetTemplate [-Identity] <DocumentSetPipeBind> [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPDocumentSetTemplate -Identity \"Test Document Set\" This will get the document set template with the name \"Test Document Set\" EXAMPLE 2 Get-PnPDocumentSetTemplate -Identity \"0x0120D520005DB65D094035A241BAC9AF083F825F3B\" This will get the document set template with the id \"0x0120D520005DB65D094035A241BAC9AF083F825F3B\" PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Either specify a name, an id, a document set template object or a content type object Type: DocumentSetPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPEventReceiver.html": {
    "href": "cmdlets/Get-PnPEventReceiver.html",
    "title": "Get-PnPEventReceiver | PnP PowerShell",
    "keywords": "Get-PnPEventReceiver SYNOPSIS Returns registered event receivers SYNTAX Get-PnPEventReceiver [-List <ListPipeBind>] [-Scope <EventReceiverScope>] [-Identity <EventReceiverPipeBind>] [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] DESCRIPTION Returns all registered or a specific event receiver EXAMPLES EXAMPLE 1 Get-PnPEventReceiver This will return all registered event receivers on the current web EXAMPLE 2 Get-PnPEventReceiver -Identity fb689d0e-eb99-4f13-beb3-86692fd39f22 This will return the event receiver with the provided ReceiverId \"fb689d0e-eb99-4f13-beb3-86692fd39f22\" from the current web EXAMPLE 3 Get-PnPEventReceiver -Identity MyReceiver This will return the event receiver with the provided ReceiverName \"MyReceiver\" from the current web EXAMPLE 4 Get-PnPEventReceiver -List \"ProjectList\" This will return all registered event receivers in the provided \"ProjectList\" list EXAMPLE 5 Get-PnPEventReceiver -List \"ProjectList\" -Identity fb689d0e-eb99-4f13-beb3-86692fd39f22 This will return the event receiver in the provided \"ProjectList\" list with with the provided ReceiverId \"fb689d0e-eb99-4f13-beb3-86692fd39f22\" EXAMPLE 6 Get-PnPEventReceiver -List \"ProjectList\" -Identity MyReceiver This will return the event receiver in the \"ProjectList\" list with the provided ReceiverName \"MyReceiver\" EXAMPLE 7 Get-PnPEventReceiver -Scope Site This will return all the event receivers defined on the current site collection EXAMPLE 8 Get-PnPEventReceiver -Scope Web This will return all the event receivers defined on the current site EXAMPLE 9 Get-PnPEventReceiver -Scope All This will return all the event receivers defined on the current site and web PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Guid of the event receiver Type: EventReceiverPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The list object from which to get the event receiver object Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope The scope of the EventReceivers to retrieve Type: EventReceiverScope Parameter Sets: Scope Accepted values: Web, Site, All Required: False Position: Named Default value: Web Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPException.html": {
    "href": "cmdlets/Get-PnPException.html",
    "title": "Get-PnPException | PnP PowerShell",
    "keywords": "Get-PnPException SYNOPSIS Returns the last exception that occurred SYNTAX Get-PnPException [-All] [<CommonParameters>] DESCRIPTION Returns the last exception which can be used while debugging PnP Cmdlets EXAMPLES EXAMPLE 1 Get-PnPException Returns the last exception EXAMPLE 2 Get-PnPException -All Returns all exceptions that occurred PARAMETERS -All Show all exceptions Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPExternalUser.html": {
    "href": "cmdlets/Get-PnPExternalUser.html",
    "title": "Get-PnPExternalUser | PnP PowerShell",
    "keywords": "Get-PnPExternalUser SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns external users in the tenant. SYNTAX Get-PnPExternalUser [-Position <Integer>] [-PageSize <Integer>] [-Filter <String>] [-SortOrder <SortOrder>] [-SiteUrl <String>] [-ShowOnlyUsersWithAcceptingAccountNotMatchInvitedAccount <Boolean>] DESCRIPTION The Get-PnPExternalUser cmdlet returns external users that are located in the tenant based on specified criteria. EXAMPLES EXAMPLE 1 Get-PnPExternalUser -Position 0 -PageSize 2 Returns the first two external users in the collection. EXAMPLE 2 Get-PnPExternalUser -Position 2 -PageSize 2 Returns two external users from the third page of the collection. PARAMETERS -Filter Prompts you for confirmation before running the cmdlet. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PageSize Specifies the maximum number of users to be returned in the collection. The value must be less than or equal to 50. Type: Integer Parameter Sets: (All) Required: False Position: Named Default value: 1 Accept pipeline input: False Accept wildcard characters: False -Position Use to specify the zero-based index of the position in the sorted collection of the first result to be returned. Type: Integer Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShowOnlyUsersWithAcceptingAccountNotMatchInvitedAccount Shows users who have accepted an invite but not using the account the invite was sent to. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -SiteUrl Specifies the site to retrieve external users for. If no site is specified, the external users for all sites are returned. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SortOrder Specifies the sort results in Ascending or Descending order on the Email property should occur. Type: SortOrder Parameter Sets: (All) Required: False Position: Named Default value: Ascending Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPFeature.html": {
    "href": "cmdlets/Get-PnPFeature.html",
    "title": "Get-PnPFeature | PnP PowerShell",
    "keywords": "Get-PnPFeature SYNOPSIS Returns all activated or a specific activated feature SYNTAX Get-PnPFeature [[-Identity] <FeaturePipeBind>] [-Scope <FeatureScope>] [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] DESCRIPTION This cmdlet returns all activated features or a specific activated feature. EXAMPLES EXAMPLE 1 Get-PnPFeature This will return all activated web scoped features EXAMPLE 2 Get-PnPFeature -Scope Site This will return all activated site scoped features EXAMPLE 3 Get-PnPFeature -Identity fb689d0e-eb99-4f13-beb3-86692fd39f22 This will return a specific activated web scoped feature EXAMPLE 4 Get-PnPFeature -Identity fb689d0e-eb99-4f13-beb3-86692fd39f22 -Scope Site This will return a specific activated site scoped feature PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The feature ID or name to query for, Querying by name is not supported in version 15 of the Client Side Object Model Type: FeaturePipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Scope The scope of the feature. Defaults to Web. Type: FeatureScope Parameter Sets: (All) Accepted values: Web, Site Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPField.html": {
    "href": "cmdlets/Get-PnPField.html",
    "title": "Get-PnPField | PnP PowerShell",
    "keywords": "Get-PnPField SYNOPSIS Returns a field from a list or site SYNTAX Get-PnPField [-List <ListPipeBind>] [[-Identity] <FieldPipeBind>] [-Group <String>] [-InSiteHierarchy] [-ReturnTyped] [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPField Gets all the fields from the current site EXAMPLE 2 Get-PnPField -List \"Demo list\" -Identity \"Speakers\" Gets the speakers field from the list Demo list EXAMPLE 3 Get-PnPField -Group \"Custom Columns\" Gets all the fields for the group called Custom Columns for the site currently connected to EXAMPLE 4 Get-PnPField -List \"Demo list\" -Identity \"Speakers\" -ReturnTyped Gets the speakers field from the list Demo list and returns it as a typed field. So, if the field type is User, it will be returned as FieldUser. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group Filter to the specified group Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The field object or name to get Type: FieldPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -InSiteHierarchy Search site hierarchy for fields Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list object or name where to get the field from Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -ReturnTyped Returns the field as the specific field type instead of the generic field type when used with List parameter. For example, if the field type is User, it will be returned as FieldUser instead of generic Field type. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPFile.html": {
    "href": "cmdlets/Get-PnPFile.html",
    "title": "Get-PnPFile | PnP PowerShell",
    "keywords": "Get-PnPFile SYNOPSIS Downloads a file SYNTAX Return as file object (Default) Get-PnPFile [-Url] <String> -AsFileObject [-Connection <PnPConnection>] [<CommonParameters>] Return as list item Get-PnPFile [-Url] <String> -AsListItem [-ThrowExceptionIfFileNotFound] [-Connection <PnPConnection>] [<CommonParameters>] Save to local path Get-PnPFile [-Url] <String> -AsFile [-Path <String>] [-Filename <String>] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] Return as string Get-PnPFile [-Url] <String> -AsString [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Allows downloading of a file from SharePoint Online. The file contents can either be read directly into memory as text, directly saved to local disk or stored in memory for further processing. EXAMPLES EXAMPLE 1 Get-PnPFile -Url \"/sites/project/Shared Documents/Document.docx\" Retrieves the file and downloads it to the current folder EXAMPLE 2 Get-PnPFile -Url /sites/project/SiteAssets/image.jpg -Path c:\\temp -FileName image.jpg -AsFile Retrieves the file and downloads it to c:\\temp\\image.jpg EXAMPLE 3 Get-PnPFile -Url /sites/project/_catalogs/themes/15/company.spcolor -AsString Retrieves the contents of the file as text and outputs its contents to the console EXAMPLE 4 Get-PnPFile -Url /sites/project/Shared Documents/Folder/Presentation.pptx -AsFileObject Retrieves the file and returns it as a File object EXAMPLE 5 Get-PnPFile -Url /sites/project/_catalogs/themes/15/company.spcolor -AsListItem Retrieves the file and returns it as a ListItem object EXAMPLE 6 Get-PnPFile -Url /personal/john_tenant_onmicrosoft_com/Documents/Sample.xlsx -Path c:\\temp -FileName Project.xlsx -AsFile Retrieves the file Sample.xlsx by its site relative URL from a OneDrive for Business site and downloads it to c:\\temp\\Project.xlsx EXAMPLE 7 Get-PnPFile -Url \"/sites/templates/Shared Documents/HR Site.pnp\" -AsMemoryStream Retrieves the file in memory for further processing PARAMETERS -AsFile Type: SwitchParameter Parameter Sets: Save to local path Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AsFileObject Retrieve the file contents as a file object. Type: SwitchParameter Parameter Sets: Return as file object Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AsListItem Returns the file as a listitem showing all its properties Type: SwitchParameter Parameter Sets: Return as list item Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AsString Retrieve the file contents as a string Type: SwitchParameter Parameter Sets: Return as string Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AsMemoryStrean Type: SwitchParameter Parameter Sets: Download the content of the file to memory Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Filename Name for the local file Type: String Parameter Sets: Save to local path Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Overwrites the file if it exists. Type: SwitchParameter Parameter Sets: Save to local path Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Local path where the file should be saved Type: String Parameter Sets: Save to local path Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ThrowExceptionIfFileNotFound If provided in combination with -AsListItem, a System.ArgumentException will be thrown if the file specified in the -Url argument does not exist. Otherwise it will return nothing instead. Type: SwitchParameter Parameter Sets: Return as list item Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url The URL (server or site relative) to the file Type: String Parameter Sets: (All) Aliases: ServerRelativeUrl, SiteRelativeUrl Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPFileVersion.html": {
    "href": "cmdlets/Get-PnPFileVersion.html",
    "title": "Get-PnPFileVersion | PnP PowerShell",
    "keywords": "Get-PnPFileVersion SYNOPSIS Retrieves the previous versions of a file. Does not retrieve the current version of the file. SYNTAX Get-PnPFileVersion -Url <String> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Retrieves the version history of a file, not including its current version. To get the current version use the MajorVersion and MinorVersion properties returned from Get-PnPFile. EXAMPLES EXAMPLE 1 Get-PnPFileVersion -Url Documents/MyDocument.docx Retrieves the file version information for the specified file. EXAMPLE 2 Get-PnPFileVersion -Url \"/sites/blah/Shared Documents/MyDocument.docx\" Retrieves the file version information for the specified file by specifying the path to the site and the document library's URL. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPFlow.html": {
    "href": "cmdlets/Get-PnPFlow.html",
    "title": "Get-PnPFlow | PnP PowerShell",
    "keywords": "Get-PnPFlow SYNOPSIS Required Permissions Azure: management.azure.com Returns the flows for a given environment SYNTAX Get-PnPFlow -Environment <PowerAutomateEnvironmentPipeBind> [-AsAdmin] [-Identity <PowerPlatformPipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This cmdlet returns the flows for a given enviroment. EXAMPLES Example 1 $environment = Get-PnPPowerPlatformEnvironment Get-PnPFlow -Environment $environment This returns all the flows for a given Power Platform environment Example 2 $environment = Get-PnPPowerPlatformEnvironment Get-PnPFlow -Environment $environment -Identity fba63225-baf9-4d76-86a1-1b42c917a182 This returns a specific flow PARAMETERS -Environment The name of the Power Platform environment or an Environment object to retrieve the available flows for. Type: PowerAutomateEnvironmentPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Name/Id of the flow to retrieve. Type: PowerPlatformPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AsAdmin If specified returns all the flows as admin. If not specified only the flows for the current user will be returned. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPFlowRun.html": {
    "href": "cmdlets/Get-PnPFlowRun.html",
    "title": "Get-PnPFlowRun | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPFlowRun SYNOPSIS Required Permissions Azure: management.azure.com Returns the flows runs for a given flow. SYNTAX Get-PnPFlowRun -Environment <PowerAutomateEnvironmentPipeBind> -Flow <PowerAutomateFlowPipeBind> [-Identity <PowerAutomateFlowRunPipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This cmdlet returns the flow runs for a given flow. EXAMPLES Example 1 $environment = Get-PnPPowerPlatformEnvironment Get-PnPFlowRun -Environment $environment -Flow fba63225-baf9-4d76-86a1-1b42c917a182 This returns all the flow runs for a given flow Example 2 $environment = Get-PnPPowerPlatformEnvironment Get-PnPFlowRun -Environment $environment -Flow fba63225-baf9-4d76-86a1-1b42c917a182 -Identity 08585531682024670884771461819CU230 This returns a specific flow run PARAMETERS -Environment The name of the Power Platform environment or an Environment object to retrieve the available flows for. Type: PowerAutomateEnvironmentPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Flow The Name/Id of the flow to retrieve the available runs for. Type: PowerAutomateFlowPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Name/Id of the flow run to retrieve. Type: PowerAutomateFlowRunPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPFolder.html": {
    "href": "cmdlets/Get-PnPFolder.html",
    "title": "Get-PnPFolder | PnP PowerShell",
    "keywords": "Get-PnPFolder SYNOPSIS Return a folder object SYNTAX Folder By Url Get-PnPFolder [-Url] <String> [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] Folders In List Get-PnPFolder [-List] <ListPipeBind> [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] DESCRIPTION Retrieves a folder if it exists or all folders inside a provided list or library. Use Resolve-PnPFolder to create the folder if it does not exist. EXAMPLES EXAMPLE 1 Get-PnPFolder -Url \"Shared Documents\" Returns the folder called 'Shared Documents' which is located in the root of the current web EXAMPLE 2 Get-PnPFolder -Url \"/sites/demo/Shared Documents\" Returns the folder called 'Shared Documents' which is located in the root of the current web EXAMPLE 3 Get-PnPFolder -List \"Shared Documents\" Returns the folder(s) residing inside a folder called 'Shared Documents' PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List Name, ID or instance of a list or document library to retrieve the folders residing in it for. Type: ListPipeBind Parameter Sets: Folders In List Required: True Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Site or server relative URL of the folder to retrieve. In the case of a server relative url, make sure that the url starts with the managed path as the current web. Type: String Parameter Sets: Folder By Url Aliases: RelativeUrl Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Resolve-PnPFolder"
  },
  "cmdlets/Get-PnPFolderItem.html": {
    "href": "cmdlets/Get-PnPFolderItem.html",
    "title": "Get-PnPFolderItem | PnP PowerShell",
    "keywords": "Get-PnPFolderItem SYNOPSIS List content in folder SYNTAX Folder via url Get-PnPFolderItem [-FolderSiteRelativeUrl <String>] [-ItemType <String>] [-ItemName <String>] [-Recursive] [-Connection <PnPConnection>] [<CommonParameters>] Folder via pipebind Get-PnPFolderItem [-Identity <FolderPipeBind>] [-ItemType <String>] [-ItemName <String>] [-Recursive] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPFolderItem -FolderSiteRelativeUrl \"SitePages\" Returns the contents of the folder SitePages which is located in the root of the current web EXAMPLE 2 Get-PnPFolderItem -FolderSiteRelativeUrl \"SitePages\" -ItemName \"Default.aspx\" Returns the file 'Default.aspx' which is located in the folder SitePages which is located in the root of the current web EXAMPLE 3 Get-PnPFolderItem -FolderSiteRelativeUrl \"SitePages\" -ItemType Folder Returns all folders in the folder SitePages which is located in the root of the current web EXAMPLE 4 Get-PnPFolderItem -FolderSiteRelativeUrl \"SitePages\" -ItemType File Returns all files in the folder SitePages which is located in the root of the current web EXAMPLE 5 Get-PnPFolderItem -FolderSiteRelativeUrl \"SitePages\" -Recursive Returns all files and folders, including contents of any subfolders, in the folder SitePages which is located in the root of the current web PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FolderSiteRelativeUrl The site relative URL of the folder to retrieve Type: String Parameter Sets: Folder via url Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Identity A folder instance to the folder to retrieve Type: FolderPipeBind Parameter Sets: Folder via pipebind Required: False Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -ItemName Optional name of the item to retrieve Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ItemType The type of contents to retrieve, either File, Folder or All (default) Type: String Parameter Sets: (All) Accepted values: Folder, File, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Recursive A switch parameter to include contents of all subfolders in the specified folder Type: SwitchParameter Parameter Sets: (All) Required: False Position: 4 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPFooter.html": {
    "href": "cmdlets/Get-PnPFooter.html",
    "title": "Get-PnPFooter | PnP PowerShell",
    "keywords": "Get-PnPFooter SYNOPSIS Gets the configuration regarding the footer of the current web SYNTAX Get-PnPFooter [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Allows the current configuration of the footer in the current web to be retrieved. The footer currently only works on Modern Communication sites. EXAMPLES EXAMPLE 1 Get-PnPFooter Returns the current footer configuration of the current web PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPGraphAccessToken.html": {
    "href": "cmdlets/Get-PnPGraphAccessToken.html",
    "title": "Get-PnPGraphAccessToken | PnP PowerShell",
    "keywords": "Get-PnPGraphAccessToken SYNOPSIS Returns the current OAuth Access token for the Microsoft Graph API SYNTAX Get-PnPGraphAccessToken [-Decoded] [<CommonParameters>] DESCRIPTION Gets the OAuth 2.0 Access Token to consume the Microsoft Graph API EXAMPLES EXAMPLE 1 Get-PnPGraphAccessToken Gets the OAuth 2.0 Access Token to consume the Microsoft Graph API EXAMPLE 2 Get-PnPGraphAccessToken -Decoded Gets the full OAuth 2.0 Token to consume the Microsoft Graph API PARAMETERS -Decoded Returns the access token in a decoded manner Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPGraphSubscription.html": {
    "href": "cmdlets/Get-PnPGraphSubscription.html",
    "title": "Get-PnPGraphSubscription | PnP PowerShell",
    "keywords": "Get-PnPGraphSubscription SYNOPSIS Required Permissions Microsoft Graph API : Subscription.Read.All Gets subscriptions from Microsoft Graph. SYNTAX Return a list (Default) Get-PnPGraphSubscription [<CommonParameters>] Return by specific ID Get-PnPGraphSubscription [-Identity <String>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPGraphSubscription Retrieves all subscriptions from Microsoft Graph EXAMPLE 2 Get-PnPGraphSubscription -Identity 328c7693-5524-44ac-a946-73e02d6b0f98 Retrieves the subscription from Microsoft Graph with the id 328c7693-5524-44ac-a946-73e02d6b0f98 PARAMETERS -Identity Returns the subscription with the provided subscription id Type: String Parameter Sets: Return by specific ID Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPGroup.html": {
    "href": "cmdlets/Get-PnPGroup.html",
    "title": "Get-PnPGroup | PnP PowerShell",
    "keywords": "Get-PnPGroup SYNOPSIS Returns a specific SharePoint group or all SharePoint groups in the current site SYNTAX All (Default) Get-PnPGroup [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] ByName Get-PnPGroup [[-Identity] <GroupPipeBind>] [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] Members Get-PnPGroup [-AssociatedMemberGroup] [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] Visitors Get-PnPGroup [-AssociatedVisitorGroup] [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] Owners Get-PnPGroup [-AssociatedOwnerGroup] [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPGroup Returns all SharePoint groups in the current site EXAMPLE 2 Get-PnPGroup -Identity 'My Site Users' This will return the group called 'My Site Users' if available in the current site. The name is case sensitive, so a group called 'My site users' would not be found. EXAMPLE 3 Get-PnPGroup -AssociatedMemberGroup This will return the current members group for the site PARAMETERS -AssociatedMemberGroup Retrieve the associated member group Type: SwitchParameter Parameter Sets: Members Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AssociatedOwnerGroup Retrieve the associated owner group Type: SwitchParameter Parameter Sets: Owners Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AssociatedVisitorGroup Retrieve the associated visitor group Type: SwitchParameter Parameter Sets: Visitors Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Get a specific group by its name or id. The name case sensitive. Type: GroupPipeBind Parameter Sets: ByName Aliases: Name Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPGroupMember.html": {
    "href": "cmdlets/Get-PnPGroupMember.html",
    "title": "Get-PnPGroupMember | PnP PowerShell",
    "keywords": "Get-PnPGroupMember SYNOPSIS Retrieves all members of a SharePoint group SYNTAX Get-PnPGroupMember -Group <GroupPipeBind> [-User String] DESCRIPTION This command will return all the users or a specific user that are members of the provided SharePoint group EXAMPLES EXAMPLE 1 Get-PnPGroupMember -Group \"Marketing Site Members\" Returns all the users that are a member of the group \"Marketing Site Members\" in the current sitecollection EXAMPLE 2 Get-PnPGroupMember -Group \"Marketing Site Members\" -User \"manager@domain.com\" Will return a user if the user \"manager@domain.com\" is a member of the specified SharePoint group EXAMPLE 3 Get-PnPGroup | Get-PnPGroupMember Returns all the users that are a member of any of the groups in the current sitecollection EXAMPLE 4 Get-PnPGroup | ? Title -Like 'Marketing*' | Get-PnPGroupMember Returns all the users that are a member of any of the groups of which their name starts with the word 'Marketing' in the current sitecollection PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group A group object, an ID or a name of a group Type: GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPGroupPermissions.html": {
    "href": "cmdlets/Get-PnPGroupPermissions.html",
    "title": "Get-PnPGroupPermissions | PnP PowerShell",
    "keywords": "Get-PnPGroupPermissions SYNOPSIS Returns the permissions for a specific SharePoint group SYNTAX Get-PnPGroupPermissions [-Identity] <GroupPipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This command will return the permissions of a specific SharePoint group EXAMPLES EXAMPLE 1 Get-PnPGroupPermissions -Identity 'My Site Members' Returns the permissions for the SharePoint group with the name 'My Site Members' PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity SharePoint group name, id or instance to return the permissions for Type: GroupPipeBind Parameter Sets: (All) Aliases: Name Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPHideDefaultThemes.html": {
    "href": "cmdlets/Get-PnPHideDefaultThemes.html",
    "title": "Get-PnPHideDefaultThemes | PnP PowerShell",
    "keywords": "Get-PnPHideDefaultThemes SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns if the default / OOTB themes should be visible to users or not. SYNTAX Get-PnPHideDefaultThemes [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Returns if the default themes are visible. Use Set-PnPHideDefaultThemes to change this value. You must be a SharePoint Online global administrator to run the cmdlet. EXAMPLES EXAMPLE 1 Get-PnPHideDefaultThemes This example returns the current setting if the default themes should be visible PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPHomePage.html": {
    "href": "cmdlets/Get-PnPHomePage.html",
    "title": "Get-PnPHomePage | PnP PowerShell",
    "keywords": "Get-PnPHomePage SYNOPSIS Return the homepage SYNTAX Get-PnPHomePage [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Returns the URL to the page set as home page EXAMPLES EXAMPLE 1 Get-PnPHomePage Will return the URL of the home page of the web. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPHomeSite.html": {
    "href": "cmdlets/Get-PnPHomeSite.html",
    "title": "Get-PnPHomeSite | PnP PowerShell",
    "keywords": "Get-PnPHomeSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns the home site url for your tenant SYNTAX Get-PnPHomeSite [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPHomeSite Returns the home site url for your tenant PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPHubSite.html": {
    "href": "cmdlets/Get-PnPHubSite.html",
    "title": "Get-PnPHubSite | PnP PowerShell",
    "keywords": "Get-PnPHubSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Retrieve all or a specific hubsite. SYNTAX Get-PnPHubSite [[-Identity] <HubSitePipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPHubSite Returns all hubsite properties EXAMPLE 2 Get-PnPHubSite -Identity \"https://contoso.sharepoint.com/sites/myhubsite\" Returns the properties of the specified hubsite by using the hubsite url EXAMPLE 3 Get-PnPHubSite -Identity \"bc07d4b8-1c2f-4184-8cc2-a52dfd6fe0c4\" Returns the properties of the specified hubsite by using the hubsite site id PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify hub site url or site id Type: HubSitePipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPHubSiteChild.html": {
    "href": "cmdlets/Get-PnPHubSiteChild.html",
    "title": "Get-PnPHubSiteChild | PnP PowerShell",
    "keywords": "Get-PnPHubSiteChild SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Retrieves all sites associated to a specific hub site SYNTAX Get-PnPHubSiteChild -Identity <HubSitePipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Retrieves all sites associated to a specific hub site EXAMPLES EXAMPLE 1 Get-PnPHubSiteChild -Identity \"https://contoso.sharepoint.com/sites/myhubsite\" Returns the sites which are associated with the provided hub site as their hub site EXAMPLE 2 Get-PnPHubSite | Get-PnPHubSiteChild Returns all sites that are associated to a hub site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The URL, Id or instance of the hubsite for which to receive the sites refering to it Type: HubSitePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPIndexedPropertyKeys.html": {
    "href": "cmdlets/Get-PnPIndexedPropertyKeys.html",
    "title": "Get-PnPIndexedPropertyKeys | PnP PowerShell",
    "keywords": "Get-PnPIndexedPropertyKeys SYNOPSIS Returns the keys of the property bag values that have been marked for indexing by search SYNTAX Get-PnPIndexedPropertyKeys [-List <ListPipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list object or name from where to get the indexed properties Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPInPlaceRecordsManagement.html": {
    "href": "cmdlets/Get-PnPInPlaceRecordsManagement.html",
    "title": "Get-PnPInPlaceRecordsManagement | PnP PowerShell",
    "keywords": "Get-PnPInPlaceRecordsManagement SYNOPSIS Returns if the place records management feature is enabled. SYNTAX Get-PnPInPlaceRecordsManagement [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPInPlaceRecordsManagement Returns if $true if in place records management is active PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPIsSiteAliasAvailable.html": {
    "href": "cmdlets/Get-PnPIsSiteAliasAvailable.html",
    "title": "Get-PnPIsSiteAliasAvailable | PnP PowerShell",
    "keywords": "Get-PnPIsSiteAliasAvailable SYNOPSIS Validates if a certain alias is still available to be used to create a new site collection for. If it is not, it will propose an alternative alias and URL which is still available. SYNTAX Get-PnPIsSiteAliasAvailable [-Identity <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPIsSiteAliasAvailable -Identity \"HR\" Validates if the alias \"HR\" is still available to be used PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Alias you want to check for if it is still available to create a new site collection for Type: String Parameter Sets: (All) Aliases: Alias Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPJavaScriptLink.html": {
    "href": "cmdlets/Get-PnPJavaScriptLink.html",
    "title": "Get-PnPJavaScriptLink | PnP PowerShell",
    "keywords": "Get-PnPJavaScriptLink SYNOPSIS Returns all or a specific custom action(s) with location type ScriptLink SYNTAX Get-PnPJavaScriptLink [[-Name] <String>] [-Scope <CustomActionScope>] [-ThrowExceptionIfJavaScriptLinkNotFound] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPJavaScriptLink Returns all web scoped JavaScript links EXAMPLE 2 Get-PnPJavaScriptLink -Scope All Returns all web and site scoped JavaScript links EXAMPLE 3 Get-PnPJavaScriptLink -Scope Web Returns all Web scoped JavaScript links EXAMPLE 4 Get-PnPJavaScriptLink -Scope Site Returns all Site scoped JavaScript links EXAMPLE 5 Get-PnPJavaScriptLink -Name Test Returns the web scoped JavaScript link named Test PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name Name of the Javascript link. Omit this parameter to retrieve all script links Type: String Parameter Sets: (All) Aliases: Key Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Scope Scope of the action, either Web, Site or All to return both, defaults to Web Type: CustomActionScope Parameter Sets: (All) Accepted values: Web, Site, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ThrowExceptionIfJavaScriptLinkNotFound Switch parameter if an exception should be thrown if the requested JavaScriptLink does not exist (true) or if omitted, nothing will be returned in case the JavaScriptLink does not exist Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPKnowledgeHubSite.html": {
    "href": "cmdlets/Get-PnPKnowledgeHubSite.html",
    "title": "Get-PnPKnowledgeHubSite | PnP PowerShell",
    "keywords": "Get-PnPKnowledgeHubSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Gets the Knowledge Hub Site URL for your tenant SYNTAX Get-PnPKnowledgeHubSite [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPKnowledgeHubSite Returns the Knowledge Hub Site Url for your tenant PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPLabel.html": {
    "href": "cmdlets/Get-PnPLabel.html",
    "title": "Get-PnPLabel | PnP PowerShell",
    "keywords": "Get-PnPLabel SYNOPSIS Gets the Office 365 retention label/tag of the specified list or library (if applicable) SYNTAX Get-PnPLabel [-List <ListPipeBind>] [-Raw] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPLabel Returns all retention labels for the current web EXAMPLE 2 Get-PnPLabel -List \"Demo List\" -ValuesOnly This gets the retention label which is set to a list or a library PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID or Url of the list Type: ListPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Raw If provided, the results will be returned as values instead of in written text and will include more detailed information Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPList.html": {
    "href": "cmdlets/Get-PnPList.html",
    "title": "Get-PnPList | PnP PowerShell",
    "keywords": "Get-PnPList SYNOPSIS Returns lists from SharePoint SYNTAX Get-PnPList [[-Identity] <ListPipeBind>] [-ThrowExceptionIfListNotFound] [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] DESCRIPTION This cmdlet returns lists in the current web. EXAMPLES EXAMPLE 1 Get-PnPList Returns all lists in the current web EXAMPLE 2 Get-PnPList -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe Returns a list with the given id EXAMPLE 3 Get-PnPList -Identity Lists/Announcements Returns a list with the given url EXAMPLE 4 Get-PnPList | Where-Object {$_.RootFolder.ServerRelativeUrl -like \"/lists/*\"} This examples shows how to do wildcard searches on the list URL. It returns all lists whose URL starts with \"/lists/\" This could also be used to search for strings inside of the URL. EXAMPLE 5 Get-PnPList -Includes HasUniqueRoleAssignments This examples shows how to retrieve additional properties of the list. PARAMETERS -Identity The ID, name or Url (Lists/MyList) of the list Type: ListPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -ThrowExceptionIfListNotFound Switch parameter if an exception should be thrown if the requested list does not exist (true) or if omitted, nothing will be returned in case the list does not exist Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Includes List of properties Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPListDesign.html": {
    "href": "cmdlets/Get-PnPListDesign.html",
    "title": "Get-PnPListDesign | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPListDesign SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Retrieve List Designs that have been registered on the current tenant. SYNTAX Get-PnPListDesign [[-Identity] <TenantListDesignPipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Retrieve List Designs that have been registered on the current tenant. When providing a name with -Identity, it returns all list designs with that name. EXAMPLES EXAMPLE 1 Get-PnPListDesign Returns all registered list designs EXAMPLE 2 Get-PnPListDesign -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd Returns a specific registered list design by id EXAMPLE 3 Get-PnPListDesign -Identity ListEvent Returns a specific registered list design by name PARAMETERS -Identity If specified, it will retrieve the specified list design Type: TenantListDesignPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPListInformationRightsManagement.html": {
    "href": "cmdlets/Get-PnPListInformationRightsManagement.html",
    "title": "Get-PnPListInformationRightsManagement | PnP PowerShell",
    "keywords": "Get-PnPListInformationRightsManagement SYNOPSIS Get the site closure status of the site which has a site policy applied SYNTAX Get-PnPListInformationRightsManagement -List <ListPipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPListInformationRightsManagement -List \"Documents\" Returns Information Rights Management (IRM) settings for the list. See 'Get-Help Set-PnPListInformationRightsManagement -Detailed' for more information about the various values. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List Type: ListPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPListItem.html": {
    "href": "cmdlets/Get-PnPListItem.html",
    "title": "Get-PnPListItem | PnP PowerShell",
    "keywords": "Get-PnPListItem SYNOPSIS Retrieves list items SYNTAX All Items (Default) Get-PnPListItem [-List] <ListPipeBind> [-FolderServerRelativeUrl <String>] [-Fields <String[]>] [-PageSize <Int32>] [-ScriptBlock <ScriptBlock>][-IncludeContentType <SwitchParameter>][-Connection <PnPConnection>] [<CommonParameters>] By Id Get-PnPListItem [-List] <ListPipeBind> [-Id <Int32>] [-Fields <String[]>] [-IncludeContentType <SwitchParameter>] [-Connection <PnPConnection>] [<CommonParameters>] By Unique Id Get-PnPListItem [-List] <ListPipeBind> [-UniqueId <Guid>] [-Fields <String[]>] [-IncludeContentType <SwitchParameter>] [-Connection <PnPConnection>] [<CommonParameters>] By Query Get-PnPListItem [-List] <ListPipeBind> [-Query <String>] [-FolderServerRelativeUrl <String>] [-PageSize <Int32>] [-IncludeContentType <SwitchParameter>] [-ScriptBlock <ScriptBlock>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPListItem -List Tasks Retrieves all list items from the Tasks list EXAMPLE 2 Get-PnPListItem -List Tasks -Id 1 Retrieves the list item with ID 1 from the Tasks list EXAMPLE 3 Get-PnPListItem -List Tasks -UniqueId bd6c5b3b-d960-4ee7-a02c-85dc6cd78cc3 Retrieves the list item with UniqueId or GUID bd6c5b3b-d960-4ee7-a02c-85dc6cd78cc3 from the tasks lists EXAMPLE 4 (Get-PnPListItem -List Tasks -Fields \"Title\",\"GUID\").FieldValues Retrieves all list items, but only includes the values of the Title and GUID fields in the list item object EXAMPLE 5 Get-PnPListItem -List Tasks -Query \"<View><Query><Where><Eq><FieldRef Name='GUID'/><Value Type='Guid'>bd6c5b3b-d960-4ee7-a02c-85dc6cd78cc3</Value></Eq></Where></Query></View>\" Retrieves all available fields of list items based on the CAML query specified EXAMPLE 6 Get-PnPListItem -List Tasks -Query \"<View><ViewFields><FieldRef Name='Title'/><FieldRef Name='Modified'/></ViewFields><Query><Where><Geq><FieldRef Name='Modified'/><Value Type='DateTime'><Today/></Value></Eq></Where></Query></View>\" Retrieves all list items modified today, retrieving the columns 'Title' and 'Modified'. When you use -Query, you can add a <ViewFields> clause to retrieve specific columns (since you cannot use -Fields) EXAMPLE 7 Get-PnPListItem -List Tasks -PageSize 1000 Retrieves all list items from the Tasks list in pages of 1000 items EXAMPLE 8 Get-PnPListItem -List Tasks -PageSize 1000 -ScriptBlock { Param($items) $items.Context.ExecuteQuery() } | ForEach-Object { $_.BreakRoleInheritance($true, $true) } Retrieves all list items from the Tasks list in pages of 1000 items and breaks permission inheritance on each item EXAMPLE 9 Get-PnPListItem -List Samples -FolderServerRelativeUrl \"/sites/contosomarketing/Lists/Samples/Demo\" Retrieves all list items from the Demo folder in the Samples list located in the contosomarketing site collection EXAMPLE 10 PS D:\\Code> Get-PnPListItem -List \"Shared Documents\" | Select-Object id,@{label=\"Filename\";expression={$_.FieldValues.FileLeafRef}} Id Filename -- -------- 1 Contoso-Financial-Calendar-Q1_68340_97779.pptx 5 Does this work.docx Retrieves all list items from the Shared Documents and shows each item's ID and Filename EXAMPLE 11 Get-PnPListItem -List Tasks -Id 1 -IncludeContentType Retrieves the list item with ID 1 from the Tasks list along with its content type information. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Fields The fields to retrieve. If not specified all fields will be loaded in the returned list object. Type: String[] Parameter Sets: All Items, By Id, By Unique Id Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FolderServerRelativeUrl The server relative URL of a list folder from which results will be returned. Type: String Parameter Sets: All Items, By Query Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Id The ID of the item to retrieve Type: Int32 Parameter Sets: By Id Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list to query Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -PageSize The number of items to retrieve per page request. Type: Int32 Parameter Sets: All Items, By Query Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Query The CAML query to execute against the list Type: String Parameter Sets: By Query Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ScriptBlock The script block to run after every page request. Type: ScriptBlock Parameter Sets: All Items, By Query Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UniqueId The UniqueId or GUID of the item to retrieve Type: Guid Parameter Sets: By Unique Id Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeContentType If specified, it will retrieve the content type information of the list item(s). Type: Switch Parameter Parameter Sets: All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPListItemAttachments.html": {
    "href": "cmdlets/Get-PnPListItemAttachments.html",
    "title": "Get-PnPListItemAttachment | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPListItemAttachment SYNOPSIS Downloads the list item attachments to a specified path on the file system. SYNTAX Get attachments from list item Get-PnPListItemAttachment [-List] <ListPipeBind> [-Identity] <ListItemPipeBind> [-Path <String>] [-Force <SwitchParameter>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPListItemAttachment -List \"Demo List\" -Identity 1 -Path \"C:\\temp\" Downloads all attachments from the list item with Id \"1\" in the \"Demo List\" SharePoint list and stores them in the temp folder. EXAMPLE 2 Get-PnPListItemAttachment -List \"Demo List\" -Identity 1 -Path \"C:\\temp\" -Force Downloads all attachments from the list item with Id \"1\" in the \"Demo List\" SharePoint list and stores them in the temp folder overwriting the files if they already exist. PARAMETERS -Path Specify the path on the local file system to download the list item attachments to. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Title or Url of the list. Note that when providing the name of the list, the name is case-sensitive. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question and overwrite the files on the local disk, if they already exist. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPListItemComment.html": {
    "href": "cmdlets/Get-PnPListItemComment.html",
    "title": "Get-PnPListItemComment | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPListItem SYNOPSIS Retrieves all comments from the list item in the specified list. EXAMPLES EXAMPLE 1 Get-PnPListItemComment -List Tasks -Identity 1 Retrieves all comments for the specified list item from the Tasks list PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPListItemPermission.html": {
    "href": "cmdlets/Get-PnPListItemPermission.html",
    "title": "Get-PnPListItemPermission | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPListItemPermission SYNOPSIS Gets list item permissions. SYNTAX Get-PnPListItemPermission [-List] <ListPipeBind> -Identity <ListItemPipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPListItemPermission -List 'Documents' -Identity 1 Get the permissions for listitem with id 1 in the list 'Documents' PARAMETERS -Identity The ID of the listitem, or actual ListItem object Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPListPermissions.html": {
    "href": "cmdlets/Get-PnPListPermissions.html",
    "title": "Get-PnPListPermissions | PnP PowerShell",
    "keywords": "Get-PnPListPermissions SYNOPSIS Returns the permissions for a specific SharePoint List given a user or group by id. SYNTAX Get-PnPListPermissions [-Identity] <ListPipeBind> -PrincipalId <Int32> DESCRIPTION This cmdlet retrieves the list permissions (role definitions) for a specific user or group in a provided list. EXAMPLES EXAMPLE 1 Get-PnPListPermissions -Identity DemoList -PrincipalId 60 Returns the permissions for the SharePoint group with id for the list DemoList. EXAMPLE 2 Get-PnPListPermissions -Identity DemoList -PrincipalId (Get-PnPGroup -Identity DemoGroup).Id Returns the permissions for the SharePoint group call DemoGroup for the list DemoList. PARAMETERS -Identity The id, name or server relative url of the list to retrieve the permissions for. Type: ListPipeBind Parameter Sets: (All) Aliases: Name Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -PrincipalId The id of a user or a SharePoint group. See Get-PnPUser and Get-PnPGroup. Type: Int32 Parameter Sets: (All) Aliases: Name Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPListRecordDeclaration.html": {
    "href": "cmdlets/Get-PnPListRecordDeclaration.html",
    "title": "Get-PnPListRecordDeclaration | PnP PowerShell",
    "keywords": "Get-PnPListRecordDeclaration SYNOPSIS Returns the manual record declaration settings for a list SYNTAX Get-PnPListRecordDeclaration -List <ListPipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPListRecordDeclaration -List \"Documents\" Returns the record declaration setting for the list \"Documents\" PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list to retrieve the record declaration settings for Type: ListPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPMasterPage.html": {
    "href": "cmdlets/Get-PnPMasterPage.html",
    "title": "Get-PnPMasterPage | PnP PowerShell",
    "keywords": "Get-PnPMasterPage SYNOPSIS Returns the URLs of the default Master Page and the custom Master Page. SYNTAX Get-PnPMasterPage [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPMasterPage This will return the urls of the default Master Page and custom Master Page of the current site. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPMessageCenterAnnouncement.html": {
    "href": "cmdlets/Get-PnPMessageCenterAnnouncement.html",
    "title": "Get-PnPMessageCenterAnnouncement | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPMessageCenterAnnouncement SYNOPSIS Required Permissions Microsoft Graph API : ServiceMessage.Read.All Gets message center announcements of the Office 365 Services from the Microsoft Graph API SYNTAX Get-PnPMessageCenterAnnouncement [-Identity <Id>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPMessageCenterAnnouncement Retrieves all the available message center announcements EXAMPLE 2 Get-PnPMessageCenterAnnouncement -Identity \"MC123456\" Retrieves the details of the message center announcement with the Id MC123456 PARAMETERS -Identity Allows retrieval of a particular message center announcement with the provided Id Type: Identity Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPMicrosoft365Group.html": {
    "href": "cmdlets/Get-PnPMicrosoft365Group.html",
    "title": "Get-PnPMicrosoft365Group | PnP PowerShell",
    "keywords": "Get-PnPMicrosoft365Group SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.Read.All, Directory.ReadWrite.All, Group.Read.All, Group.ReadWrite.All, GroupMember.Read.All, GroupMember.ReadWrite.All Gets one Microsoft 365 Group or a list of Microsoft 365 Groups SYNTAX Get-PnPMicrosoft365Group [-Identity <Microsoft365GroupPipeBind>] [-IncludeSiteUrl] [-IncludeOwners] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPMicrosoft365Group Retrieves all the Microsoft 365 Groups EXAMPLE 2 Get-PnPMicrosoft365Group -Identity $groupId Retrieves a specific Microsoft 365 Group based on its ID EXAMPLE 3 Get-PnPMicrosoft365Group -Identity $groupDisplayName Retrieves a specific or list of Microsoft 365 Groups that start with the given DisplayName EXAMPLE 4 Get-PnPMicrosoft365Group -Identity $groupSiteMailNickName Retrieves a specific or list of Microsoft 365 Groups for which the email starts with the provided mail nickName EXAMPLE 5 Get-PnPMicrosoft365Group -Identity $group Retrieves a specific Microsoft 365 Group based on its object instance EXAMPLE 6 Get-PnPMicrosoft365Group -IncludeSiteUrl Retrieves all Microsoft 365 Groups in this tenant and includes the URL property for the underlying SharePoint site. EXAMPLE 7 $groups = Get-PnPMicrosoft365Group -IncludeOwners $g[0].Owners Retrieves all Microsoft 365 Groups in this tenant and retrieves the owners for each group. The owners are available in the \"Owners\" property of the returned objects. PARAMETERS -IncludeSiteUrl Include fetching the site URL for Microsoft 365 Groups. This slows down large listings. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeOwners Include fetching the group owners. This slows down large listings. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Identity of the Microsoft 365 Group Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPMicrosoft365GroupMember.html": {
    "href": "cmdlets/Get-PnPMicrosoft365GroupMember.html",
    "title": "Get-PnPMicrosoft365GroupMember | PnP PowerShell",
    "keywords": "Get-PnPMicrosoft365GroupMember SYNOPSIS Required Permissions Microsoft Graph API : at least Group.Read.All Microsoft Graph API : Directory.Read.All Returns the members of a particular Microsoft 365 Group SYNTAX Get-PnPMicrosoft365GroupMember -Identity <Microsoft365GroupPipeBind> [-UserType <String>] [<CommonParameters>] DESCRIPTION Returns the members of a particular Microsoft 365 Group EXAMPLES EXAMPLE 1 Get-PnPMicrosoft365GroupMember -Identity $groupId Retrieves all the members of a specific Microsoft 365 Group based on its ID EXAMPLE 2 Get-PnPMicrosoft365GroupMember -Identity $group Retrieves all the members of a specific Microsoft 365 Group based on the group's object instance EXAMPLE 3 Get-PnPMicrosoft365GroupMember -Identity \"Sales\" | Where-Object UserType -eq Guest Returns all the guest users of the Microsoft 365 Group named \"Sales\" PARAMETERS -Identity The Identity of the Microsoft 365 Group Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPMicrosoft365GroupOwner.html": {
    "href": "cmdlets/Get-PnPMicrosoft365GroupOwner.html",
    "title": "Get-PnPMicrosoft365GroupOwner | PnP PowerShell",
    "keywords": "Get-PnPMicrosoft365GroupOwner SYNOPSIS Required Permissions Microsoft Graph API : at least Group.Read.All Microsoft Graph API : Directory.Read.All Gets owners of a particular Microsoft 365 Group SYNTAX Get-PnPMicrosoft365GroupOwner -Identity <Microsoft365GroupPipeBind> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPMicrosoft365GroupOwner -Identity $groupId Retrieves all the owners of a specific Microsoft 365 Group based on its ID EXAMPLE 2 Get-PnPMicrosoft365GroupOwner -Identity $group Retrieves all the owners of a specific Microsoft 365 Group based on the group's object instance PARAMETERS -Identity The Identity of the Microsoft 365 Group. Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPMicrosoft365GroupSettings.html": {
    "href": "cmdlets/Get-PnPMicrosoft365GroupSettings.html",
    "title": "Get-PnPMicrosoft365GroupSettings | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPMicrosoft365GroupSettings SYNOPSIS Required Permissions Microsoft Graph API : Directory.Read.All Gets a settings of a specific Microsoft 365 Group or a tenant wide Microsoft 365 Group Settings. SYNTAX Get-PnPMicrosoft365GroupSettings [-Identity <Microsoft365GroupPipeBind>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPMicrosoft365GroupSettings Retrieves all the Microsoft 365 Group settings from the Tenant EXAMPLE 2 Get-PnPMicrosoft365GroupSettings -Identity $groupId Retrieves a specific Microsoft 365 Group setting PARAMETERS -Identity The Identity of the Microsoft 365 Group Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Get-PnPMicrosoft365GroupSettingTemplates.html": {
    "href": "cmdlets/Get-PnPMicrosoft365GroupSettingTemplates.html",
    "title": "Get-PnPMicrosoft365GroupSettingTemplates | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPMicrosoft365GroupSettingTemplates SYNOPSIS Required Permissions Microsoft Graph API : Directory.Read.All Gets the available system wide template of settings for Microsoft 365 Groups. SYNTAX Get-PnPMicrosoft365GroupSettingTemplates [-Identity <string>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPMicrosoft365GroupSettingTemplates Retrieves all the available Microsoft 365 Group setting templates from the Tenant EXAMPLE 2 Get-PnPMicrosoft365GroupSettingTemplates -Identity \"08d542b9-071f-4e16-94b0-74abb372e3d9\" Retrieves a specific Microsoft 365 Group setting template. In the above example, it retrieves the Group.Unified.Guest setting template. PARAMETERS -Identity The Identity of the Microsoft 365 Group setting template Type: string Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Get-PnPNavigationNode.html": {
    "href": "cmdlets/Get-PnPNavigationNode.html",
    "title": "Get-PnPNavigationNode | PnP PowerShell",
    "keywords": "Get-PnPNavigationNode SYNOPSIS Returns all or a specific navigation node SYNTAX All nodes by location (Default) Get-PnPNavigationNode [-Location <NavigationType>] [-Tree] [-Connection <PnPConnection>] [<CommonParameters>] A single node by ID Get-PnPNavigationNode [-Id <Int32>] [-Tree] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPNavigationNode Returns all navigation nodes in the quicklaunch navigation EXAMPLE 2 Get-PnPNavigationNode -Location QuickLaunch Returns all navigation nodes in the quicklaunch navigation EXAMPLE 3 Get-PnPNavigationNode -Location TopNavigationBar Returns all navigation nodes in the top navigation bar EXAMPLE 4 $node = Get-PnPNavigationNode -Id 2030 PS> $children = $node.Children Returns the selected navigation node and retrieves any children PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Id The Id of the node to retrieve Type: Int32 Parameter Sets: A single node by ID Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Location The location of the nodes to retrieve. Either TopNavigationBar, QuickLaunch, SearchNav or Footer. Type: NavigationType Parameter Sets: All nodes by location Accepted values: TopNavigationBar, QuickLaunch, SearchNav, Footer Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Tree Show a tree view of all navigation nodes Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPOrgAssetsLibrary.html": {
    "href": "cmdlets/Get-PnPOrgAssetsLibrary.html",
    "title": "Get-PnPOrgAssetsLibrary | PnP PowerShell",
    "keywords": "Get-PnPOrgAssetsLibrary SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns the list of all the configured organizational asset libraries SYNTAX Get-PnPOrgAssetsLibrary [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPOrgAssetsLibrary Returns the list of all the configured organizational asset sites EXAMPLE 2 (Get-PnPOrgAssetsLibrary)[0].OrgAssetsLibraries[0].LibraryUrl.DecodedUrl Returns the server relative url of the first document library which has been flagged as organizational asset library, i.e. \"sites/branding/logos\" PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPOrgNewsSite.html": {
    "href": "cmdlets/Get-PnPOrgNewsSite.html",
    "title": "Get-PnPOrgNewsSite | PnP PowerShell",
    "keywords": "Get-PnPOrgNewsSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns the list of all the configured organizational news sites. SYNTAX Get-PnPOrgNewsSite [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPOrgNewsSite Returns the list of all the configured organizational news sites. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPage.html": {
    "href": "cmdlets/Get-PnPPage.html",
    "title": "Get-PnPPage | PnP PowerShell",
    "keywords": "Get-PnPPage SYNOPSIS Returns a page SYNTAX Get-PnPPage [-Identity] <PagePipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This command allows the retrieval of a modern sitepage along with its properties and contents on it. Note that for a newly created modern site, the Columns and Sections of the Home.aspx page will not be filled according to the actual site page contents. This is because the underlying CanvasContent1 will not be populated until the homepage has been edited and published. The reason for this behavior is to allow for the default homepage to be able to be updated by Microsoft as long as it hasn't been modified. For any other site page or after editing and publishing the homepage, this command will return the correct columns and sections as they are positioned on the site page. EXAMPLES EXAMPLE 1 Get-PnPPage -Identity \"MyPage.aspx\" Gets the page named 'MyPage.aspx' in the current SharePoint site EXAMPLE 2 Get-PnPPage \"MyPage\" Gets the page named 'MyPage.aspx' in the current SharePoint site EXAMPLE 3 Get-PnPPage \"Templates/MyPageTemplate\" Gets the page named 'MyPageTemplate.aspx' from the templates folder of the Page Library in the current SharePoint site EXAMPLE 4 Get-PnPPage -Identity \"MyPage.aspx\" -Web (Get-PnPWeb -Identity \"Subsite1\") Gets the page named 'MyPage.aspx' from the subsite named 'Subsite1' PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name of the page Type: PagePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPageComponent.html": {
    "href": "cmdlets/Get-PnPPageComponent.html",
    "title": "Get-PnPPageComponent | PnP PowerShell",
    "keywords": "Get-PnPPageComponent SYNOPSIS Retrieve one or more page components from a page SYNTAX Get-PnPPageComponent [-Page] <PagePipeBind> [-InstanceId <Guid>] [-Connection <PnPConnection>] [<CommonParameters>] Get-PnPPageComponent [-Page] <PagePipeBind> [-ListAvailable] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This command allows the retrieval of the components placed on a modern sitepage along with its properties. Note that for a newly created modern site, the Home.aspx page will not be returning any components. This is because the underlying CanvasContent1 will not be populated until the homepage has been edited and published. The reason for this behavior is to allow for the default homepage to be able to be updated by Microsoft as long as it hasn't been modified. For any other site page or after editing and publishing the homepage, this command will return the correct components as they are positioned on the site page. EXAMPLES EXAMPLE 1 Get-PnPPageComponent -Page Home Returns all controls defined on the given page. EXAMPLE 2 Get-PnPPageComponent -Page Home -InstanceId a2875399-d6ff-43a0-96da-be6ae5875f82 Returns a specific control defined on the given page. EXAMPLE 3 Get-PnPPageComponent -Page Home -ListAvailable Returns all available components that can be added to the page. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InstanceId The instance id of the component Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Page The name of the page Type: PagePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPlannerBucket.html": {
    "href": "cmdlets/Get-PnPPlannerBucket.html",
    "title": "get-pnpplannerbucket | PnP PowerShell",
    "keywords": "Get-PnPPlannerBucket SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Microsoft Graph API: Group.Read.All Returns all or a specific Planner bucket SYNTAX By Group Get-PnPPlannerBucket -Group <PlannerGroupPipeBind> -Plan <PlannerPlanPipeBind> [-Identity <PlannerBucketPipeBind>] [<CommonParameters>] By Plan Id Get-PnPPlannerBucket -PlanId <String> [-Identity <PlannerBucketPipeBind>] [<CommonParameters>] DESCRIPTION This cmdlets returns all or a specific bucket in a Planner plan. EXAMPLES Example 1 Get-PnPPlannerBucket -Group \"Marketing\" -Plan \"Conference Plan\" This will returns all buckets in the specified plan PARAMETERS -Group Specify the group id or name of the group owning the plan. Type: PlannerGroupPipeBind Parameter Sets: By Group Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The identity of the bucket to retrieve Type: PlannerBucketPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PlanId The plan id of the plan containing the bucket Type: String Parameter Sets: By Plan Id Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Plan The name or id of the plan containing the bucket. Type: PlannerPlanPipeBind Parameter Sets: By Group Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPlannerConfiguration.html": {
    "href": "cmdlets/Get-PnPPlannerConfiguration.html",
    "title": "Get-PnPPlannerConfiguration | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPPlannerConfiguration SYNOPSIS Required Permissions Azure: tasks.office.com Returns the Microsoft Planner configuration of the tenant SYNTAX Get-PnPPlannerConfiguration [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This cmdlet returns the Microsoft Planner admin configuration of the tenant. Note that after changing the configuration using Set-PnPPlannerTenantConfiguration , this cmdlet may return varying results which could deviate from your desired configuration while the new configuration is being propagated across the tenant. EXAMPLES Example 1 Get-PnPPlannerConfiguration Returns the Microsoft Planner configuration of the tenant PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPlannerPlan.html": {
    "href": "cmdlets/Get-PnPPlannerPlan.html",
    "title": "get-pnpplannerplan | PnP PowerShell",
    "keywords": "Get-PnPPlannerPlan SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Microsoft Graph API: Group.Read.All Returns all or a specific Planner plan for a Microsoft 365 Group. SYNTAX By Group Get-PnPPlannerPlan -Group <PlannerGroupPipeBind> [-Identity <PlannerPlanPipeBind>] [-ResolveIdentities] [<CommonParameters>] By Plan Id Get-PnPPlannerPlan -Id <String> [-ResolveIdentities] [<CommonParameters>] DESCRIPTION This cmdlet returns all or a specific Planner plan for a Microsoft 365 Group. EXAMPLES Example 1 Get-PnPPlannerPlan -Group \"Marketing\" Returns all plans for the Marketing group. Example 2 Get-PnPPlannerPlan -Group \"Marketing\" -Identity \"Conference Plan\" Returns the specified plan for the Marketing group. Example 3 Get-PnPPlannerPlan -Id \"gndWOTSK60GfPQfiDDj43JgACDCb\" -ResolveIdentities Rerturns the plan with specified ID with resolved identities. PARAMETERS -Group Specify the group containing the plans Type: PlannerGroupPipeBind Parameter Sets: By Group Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity If specified the plan with this ID or Name will be returned. Type: PlannerPlanPipeBind Parameter Sets: By Group Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Id If specified the plan with this ID will be returned. Type: String Parameter Sets: By Plan Id Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ResolveIdentities Show user display names instead of user IDs. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPlannerRosterMember.html": {
    "href": "cmdlets/Get-PnPPlannerRosterMember.html",
    "title": "Get-PnPPlannerRosterMember | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPPlannerRosterMember SYNOPSIS Required Permissions Azure: tasks.office.com Returns the current members of a Microsoft Planner Roster SYNTAX Get-PnPPlannerRosterMember -Identity <string> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This cmdlet will return the current members of a Microsoft Planner Roster EXAMPLES Example 1 Get-PnPPlannerRosterMember -Identity \"6519868f-868f-6519-8f86-19658f861965\" Returns the current members of a Microsoft Planner Roster with the provided Id PARAMETERS -Identity Id of the Microsoft Planner Roster plan of which to return its current members Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPlannerRosterPlan.html": {
    "href": "cmdlets/Get-PnPPlannerRosterPlan.html",
    "title": "Get-PnPPlannerRosterPlan | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPPlannerRosterPlan SYNOPSIS Required Permissions Microsoft Graph API: Tasks.ReadWrite Microsoft Graph API: Tasks.Read Returns Microsft Planner roster plans for a specific Microsoft Planner Roster or a specific user SYNTAX Get-PnPPlannerRosterPlan [-Identity <PlannerRosterPipeBind>] [-User <string>] [<CommonParameters>] DESCRIPTION This cmdlet returns Microsft Planner roster plans for a specific Microsoft Planner Roster or a specific user EXAMPLES Example 1 Get-PnPPlannerRosterPlan -Identity \"abcdefgh\" Returns all plans inside the roster with the provided identifier Example 2 Get-PnPPlannerRosterPlan -User \"johndoe@contoso.onmicrosoft.com\" Returns all roster plans for the provided user PARAMETERS -Identity A Microsoft Planner Roster Id or instance. Documentation: https://docs.microsoft.com/graph/api/plannerroster-list-plans?view=graph-rest-beta&tabs=http Type: PlannerGroupPipeBind Parameter Sets: BYROSTER Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User The user principal name to query for. Documentation: https://docs.microsoft.com/graph/api/planneruser-list-rosterplans?view=graph-rest-beta&tabs=http Type: String Parameter Sets: BYUSER Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPlannerTask.html": {
    "href": "cmdlets/Get-PnPPlannerTask.html",
    "title": "get-pnpplannertask | PnP PowerShell",
    "keywords": "Get-PnPPlannerTask SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Microsoft Graph API: Group.Read.All Returns Planner tasks SYNTAX By Group Get-PnPPlannerTask -Group <PlannerGroupPipeBind> -Plan <PlannerPlanPipeBind> [-ResolveUserDisplayNames] [<CommonParameters>] By Bucket Get-PnPPlannerTask -Bucket <PlannerBucketPipeBind> [-ResolveUserDisplayNames] [<CommonParameters>] By Plan Id Get-PnPPlannerTask -PlanId <String> [-ResolveUserDisplayNames] [<CommonParameters>] By Task Id Get-PnPPlannerTask -TaskId <String> [-ResolveUserDisplayNames] [<CommonParameters>] DESCRIPTION This cmdlet returns Planner tasks. EXAMPLES Example 1 Get-PnPPlannerTask -Group \"Marketing\" -Plan \"Conference Plan\" This returns all tasks for the specific plan. Example 2 $tasks = Get-PnPPlannerTask -Group \"Marketing\" -Plan \"Conference Plan\" -ResolveUserDiplayNames $task = $tasks | Select-Object -First 1 $task.CreatedBy.DisplayName This retrieves all tasks for a specific plan, takes the first task and prints the display name of the user that created the task. Example 3 Get-PnPPlannerTask -PlanId \"QvfkTd1mc02gwxHjHC_43JYABhAy\" This returns all tasks for the specified plan. Example 4 Get-PnPPlannerTask -TaskId \"QvfkTd1mc02gwxHjHC_43JYABhAy\" This returns a specific task. PARAMETERS -Bucket Specify the bucket or bucket id to retrieve the tasks for. Type: PlannerBucketPipeBind Parameter Sets: By Bucket Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group Specify the group id or name of group owning the plan. Type: PlannerGroupPipeBind Parameter Sets: By Group Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Plan Specify the id or name of the plan to retrieve the tasks for. Type: PlannerPlanPipeBind Parameter Sets: By Group Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PlanId Specify the id of the plan to retrieve the tasks for. Type: String Parameter Sets: By Plan Id Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TaskId Specify the id of the task to retrieve. Type: String Parameter Sets: By Task Id Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ResolveUserDisplayNames Will resolve userids to usernames Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeDetails Includes checklist and description details Type: SwitchParameter Parameter Sets: By Task Id Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPlannerUserPolicy.html": {
    "href": "cmdlets/Get-PnPPlannerUserPolicy.html",
    "title": "Get-PnPPlannerUserPolicy | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPPlannerUserPolicy SYNOPSIS Required Permissions Azure: tasks.office.com Returns the Microsoft Planner user policy for a specific user SYNTAX Get-PnPPlannerUserPolicy -Identity <string> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This cmdlet returns the Microsoft Planner user policy for the provided user. If a Microsoft Planner user policy has never been set yet on a tenant, this cmdlet may return a '403 Forbidden: Access is denied' error. Set a policy once first to enable the background configuration to be done so this cmdlet can succeed from thereon. EXAMPLES Example 1 Get-PnPPlannerUserPolicy -Identity \"johndoe@contoso.onmicrosoft.com\" Returns the Microsoft Planner user policy for the provided user PARAMETERS -Identity Azure Active Directory user identifier or user principal name of the user to retrieve the Microsoft Planner policy for Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPowerPlatformEnvironment.html": {
    "href": "cmdlets/Get-PnPPowerPlatformEnvironment.html",
    "title": "Get-PnPPowerPlatformEnvironment | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPPowerPlatformEnvironment SYNOPSIS Required Permissions Azure: management.azure.com Retrieves the Microsoft Power Platform environments for the current tenant. SYNTAX Get-PnPPowerPlatformEnvironment [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This cmdlet retrieves the Microsoft Power Platform environments for the current tenant EXAMPLES Example 1 Get-PnPPowerPlatformEnvironment This cmdlets returns the Power Platform environments for the current tenant. Example 2 Get-PnPPowerPlatformEnvironment -IsDefault $true This cmdlets returns the default Power Platform environment for the current tenant. PARAMETERS -IsDefault Allows retrieval of the default Power Platform environment by passing in -IsDefault $true . When passing in -IsDefault $false you will get all non default environments. If not provided at all, all available environments, both default and non-default, will be returned. Type: bool Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPowerShellTelemetryEnabled.html": {
    "href": "cmdlets/Get-PnPPowerShellTelemetryEnabled.html",
    "title": "Get-PnPPowerShellTelemetryEnabled | PnP PowerShell",
    "keywords": "Get-PnPPowerShellTelemetryEnabled SYNOPSIS Returns true if the PnP PowerShell Telemetry has been enabled. SYNTAX Get-PnPPowerShellTelemetryEnabled [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION In order to help to make PnP PowerShell better, we can track anonymous telemetry. For more information on what we collect and how to prevent this data from being collected, visit Configure PnP PowerShell . EXAMPLES EXAMPLE 1 Get-PnPPowerShellTelemetryEnabled Will return true of false. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPProperty.html": {
    "href": "cmdlets/Get-PnPProperty.html",
    "title": "Get-PnPProperty | PnP PowerShell",
    "keywords": "Get-PnPProperty SYNOPSIS Returns a previously not loaded property of a ClientObject SYNTAX Get-PnPProperty [-ClientObject] <ClientObject> [-Property] <String[]> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Will populate properties of an object and optionally, if needed, load the value from the server. If one property is specified its value will be returned to the output. EXAMPLES EXAMPLE 1 $web = Get-PnPWeb Get-PnPProperty -ClientObject $web -Property Id, Lists $web.Lists Will load both the Id and Lists properties of the specified Web object. EXAMPLE 2 $list = Get-PnPList -Identity 'Site Assets' Get-PnPProperty -ClientObject $list -Property Views Will load the views object of the specified list object and return its value to the output. PARAMETERS -ClientObject Specifies the object where the properties of should be retrieved Type: ClientObject Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Property The properties to load. If one property is specified its value will be returned to the output. Type: String[] Parameter Sets: (All) Required: True Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPropertyBag.html": {
    "href": "cmdlets/Get-PnPPropertyBag.html",
    "title": "Get-PnPPropertyBag | PnP PowerShell",
    "keywords": "Get-PnPPropertyBag SYNOPSIS Returns the property bag values. SYNTAX Get-PnPPropertyBag [[-Key] <String>] [-Folder <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPPropertyBag This will return all web property bag values EXAMPLE 2 Get-PnPPropertyBag -Key MyKey This will return the value of the key MyKey from the web property bag EXAMPLE 3 Get-PnPPropertyBag -Folder /MyFolder This will return all property bag values for the folder MyFolder which is located in the root of the current web EXAMPLE 4 Get-PnPPropertyBag -Folder /MyFolder -Key vti_mykey This will return the value of the key vti_mykey from the folder MyFolder which is located in the root of the current web EXAMPLE 5 Get-PnPPropertyBag -Folder / -Key vti_mykey This will return the value of the key vti_mykey from the root folder of the current web PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder Site relative url of the folder. See examples for use. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Key Key that should be looked up Type: String Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPPublishingImageRendition.html": {
    "href": "cmdlets/Get-PnPPublishingImageRendition.html",
    "title": "Get-PnPPublishingImageRendition | PnP PowerShell",
    "keywords": "Get-PnPPublishingImageRendition SYNOPSIS Returns all image renditions or if Identity is specified a specific one SYNTAX Get-PnPPublishingImageRendition [[-Identity] <ImageRenditionPipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPPublishingImageRendition Returns all Image Renditions EXAMPLE 2 Get-PnPPublishingImageRendition -Identity \"Test\" Returns the image rendition named \"Test\" EXAMPLE 3 Get-PnPPublishingImageRendition -Identity 2 Returns the image rendition where its id equals 2 PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Id or name of an existing image rendition Type: ImageRenditionPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPRecycleBinItem.html": {
    "href": "cmdlets/Get-PnPRecycleBinItem.html",
    "title": "Get-PnPRecycleBinItem | PnP PowerShell",
    "keywords": "Get-PnPRecycleBinItem SYNOPSIS Required Permissions * SharePoint: Site Collection Administrator. SharePoint Tenant Admin alone is not enough Returns the items in the recycle bin from the context SYNTAX All (Default) Get-PnPRecycleBinItem [-RowLimit <Int32>] [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] Identity Get-PnPRecycleBinItem [-Identity <Guid>] [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] FirstStage Get-PnPRecycleBinItem [-FirstStage] [-RowLimit <Int32>] [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] SecondStage Get-PnPRecycleBinItem [-SecondStage] [-RowLimit <Int32>] [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] DESCRIPTION This command will return all the items in the recycle bin for the SharePoint site you connected to with Connect-PnPOnline. You must connect as a Site Collection Owner or Administrator. The SharePoint Admin Role in the tenant alone will not work. If you are not a Site Collection Admin connect to the Tenant Admin URL with Connect-PnPOnline and use Get-PnPTenantRecycleBinItem. EXAMPLES EXAMPLE 1 Get-PnPRecycleBinItem Returns all items in both the first and the second stage recycle bins in the current site collection EXAMPLE 2 Get-PnPRecycleBinItem -Identity f3ef6195-9400-4121-9d1c-c997fb5b86c2 Returns all a specific recycle bin item by id EXAMPLE 3 Get-PnPRecycleBinItem -FirstStage Returns all items in only the first stage recycle bin in the current site collection EXAMPLE 4 Get-PnPRecycleBinItem -SecondStage Returns all items in only the second stage recycle bin in the current site collection EXAMPLE 5 Get-PnPRecycleBinItem -RowLimit 10000 Returns items in recycle bin limited by number of results PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FirstStage Return all items in the first stage recycle bin Type: SwitchParameter Parameter Sets: FirstStage Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Returns a recycle bin item with a specific identity Type: Guid Parameter Sets: Identity Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RowLimit Limits return results to specified amount Type: Int32 Parameter Sets: All, FirstStage, SecondStage Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SecondStage Return all items in the second stage recycle bin Type: SwitchParameter Parameter Sets: SecondStage Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPRequestAccessEmails.html": {
    "href": "cmdlets/Get-PnPRequestAccessEmails.html",
    "title": "Get-PnPRequestAccessEmails | PnP PowerShell",
    "keywords": "Get-PnPRequestAccessEmails SYNOPSIS Returns the request access e-mail addresses SYNTAX Get-PnPRequestAccessEmails [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPRequestAccessEmails This will return all the request access e-mail addresses for the current web PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPRoleDefinition.html": {
    "href": "cmdlets/Get-PnPRoleDefinition.html",
    "title": "Get-PnPRoleDefinition | PnP PowerShell",
    "keywords": "Get-PnPRoleDefinition SYNOPSIS Retrieves a Role Definitions of a site SYNTAX Get-PnPRoleDefinition [[-Identity] <RoleDefinitionPipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPRoleDefinition Retrieves the Role Definitions (Permission Levels) settings of the current site EXAMPLE 2 Get-PnPRoleDefinition -Identity Read Retrieves the specified Role Definition (Permission Level) settings of the current site EXAMPLE 3 Get-PnPRoleDefinition | Where-Object { $_.RoleTypeKind -eq \"Administrator\" } Retrieves the Role Definition (Permission Level) settings with the Administrator type, regardless of its name PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name of a role definition to retrieve. Type: RoleDefinitionPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSearchConfiguration.html": {
    "href": "cmdlets/Get-PnPSearchConfiguration.html",
    "title": "Get-PnPSearchConfiguration | PnP PowerShell",
    "keywords": "Get-PnPSearchConfiguration SYNOPSIS Returns the search configuration SYNTAX Xml (Default) Get-PnPSearchConfiguration [-Scope <SearchConfigurationScope>] [-Path <String>] [-Connection <PnPConnection>] [<CommonParameters>] OutputFormat Get-PnPSearchConfiguration [-Scope <SearchConfigurationScope>] [-OutputFormat <OutputFormat>] [-Connection <PnPConnection>] [<CommonParameters>] BookmarksCSV Get-PnPSearchConfiguration [-Scope <SearchConfigurationScope>] [-PromotedResultsToBookmarkCSV] [-ExcludeVisualPromotedResults <Boolean>] [-BookmarkStatus <BookmarkStatus>] [-Path <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSearchConfiguration Returns the search configuration for the current web. EXAMPLE 2 Get-PnPSearchConfiguration -Scope Site Returns the search configuration for the current site collection. EXAMPLE 3 Get-PnPSearchConfiguration -Scope Subscription Returns the search configuration for the current tenant. EXAMPLE 4 Get-PnPSearchConfiguration -Path searchconfig.xml -Scope Subscription Returns the search configuration for the current tenant and saves it to the specified file. EXAMPLE 5 Get-PnPSearchConfiguration -Scope Site -OutputFormat ManagedPropertyMappings Returns all custom managed properties and crawled property mapping at the current site collection. EXAMPLE 6 Get-PnPSearchConfiguration -Scope Site -PromotedResultsToBookmarkCSV -Path bookmarks.csv Export promoted results excluding visual ones from query rules on the site collection as a CSV file with the bookmarks in suggested status. EXAMPLE 7 Get-PnPSearchConfiguration -Scope Site -PromotedResultsToBookmarkCSV -Path bookmarks.csv -BookmarkStatus Published Export promoted results excluding visual from query rules on the site collection as a CSV file with the bookmarks in published status. EXAMPLE 8 Get-PnPSearchConfiguration -Scope Subscription -PromotedResultsToBookmarkCSV -ExcludeVisualPromotedResults $false Export promoted results including visual ones from query rules on the tenant in CSV format with the bookmarks in suggested status. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OutputFormat Output format for of the configuration. Defaults to complete XML Type: OutputFormat Parameter Sets: OutputFormat Accepted values: CompleteXml, ManagedPropertyMappings Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Local path where the search configuration will be saved Type: String Parameter Sets: Xml Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope Scope to use. Either Web, Site, or Subscription. Defaults to Web Type: SearchConfigurationScope Parameter Sets: (All) Accepted values: Web, Site, Subscription Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PromotedResultsToBookmarkCSV Output promoted results to a compatible CSV file to be used as Bookmark import at https://admin.microsoft.com/#/MicrosoftSearch/bookmarks . Export details: Promoted results marked as \"Render the URL as a banner instead of as a hyperlink\" (visual promoted results) and query rules with no triggers will be skipped by default. Triggers set to \"Advanced Query Text Match\" and \"Query Contains Action Term\" will have \"Match Similar Keywords\" set to true for the Bookmark. Multiple triggers on a query rule will be merged into a single trigger. Type: SwitchParameter Parameter Sets: CSV Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExcludeVisualPromotedResults Exclude promoted results marked as \"Render the URL as a banner instead of as a hyperlink\". Defaults to true. Type: Boolean Parameter Sets: CSV Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -BookmarkStatus Output bookmarks to be in suggested or published status upon CSV import. Defaults to suggested status. Type: BookmarkStatus Parameter Sets: CSV Accepted values: Suggested, Published Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSearchCrawlLog.html": {
    "href": "cmdlets/Get-PnPSearchCrawlLog.html",
    "title": "Get-PnPSearchCrawlLog | PnP PowerShell",
    "keywords": "Get-PnPSearchCrawlLog SYNOPSIS Returns entries from the SharePoint search crawl log. Make sure you are granted access to the crawl log via the SharePoint search admin center at https:// -admin.sharepoint.com/_layouts/15/searchadmin/crawllogreadpermission.aspx in order to run this cmdlet. SYNTAX Get-PnPSearchCrawlLog [-LogLevel <LogLevel>] [-RowLimit <Int32>] [-Filter <String>] [-ContentSource <ContentSource>] [-StartDate <DateTime>] [-EndDate <DateTime>] [-RawFormat] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSearchCrawlLog Returns the last 100 crawl log entries for site content. EXAMPLE 2 Get-PnPSearchCrawlLog -Filter \"https://contoso-my.sharepoint.com/personal\" Returns the last 100 crawl log entries for OneDrive content. EXAMPLE 3 Get-PnPSearchCrawlLog -ContentSource UserProfiles Returns the last 100 crawl log entries for user profiles. EXAMPLE 4 Get-PnPSearchCrawlLog -ContentSource UserProfiles -Filter \"mikael\" Returns the last 100 crawl log entries for user profiles with the term \"mikael\" in the user principal name. EXAMPLE 5 Get-PnPSearchCrawlLog -ContentSource Sites -LogLevel Error -RowLimit 10 Returns the last 10 crawl log entries with a state of Error for site content. EXAMPLE 6 Get-PnPSearchCrawlLog -EndDate (Get-Date).AddDays(-100) Returns the last 100 crawl log entries up until 100 days ago. EXAMPLE 7 Get-PnPSearchCrawlLog -RowFilter 3 -RawFormat Returns the last 3 crawl log entries showing the raw crawl log data. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentSource Content to retrieve (Sites, User Profiles). Defaults to Sites. Type: ContentSource Parameter Sets: (All) Accepted values: Sites, UserProfiles Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EndDate End date to stop getting entries from. Default to current time. Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Filter Filter to limit what is being returned. Has to be a URL prefix for SharePoint content, and part of a user principal name for user profiles. Wildcard characters are not supported. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LogLevel Filter what log entries to return (All, Success, Warning, Error). Defaults to All Type: LogLevel Parameter Sets: (All) Accepted values: Success, Warning, Error, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RawFormat Show raw crawl log data Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RowLimit Number of entries to return. Defaults to 100. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StartDate Start date to start getting entries from. Defaults to start of time. Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSearchSettings.html": {
    "href": "cmdlets/Get-PnPSearchSettings.html",
    "title": "Get-PnPSearchSettings | PnP PowerShell",
    "keywords": "Get-PnPSearchSettings SYNOPSIS Retrieves search settings for a site SYNTAX Get-PnPSearchSettings [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSearchSettings Retrieve search settings for the site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPServiceCurrentHealth.html": {
    "href": "cmdlets/Get-PnPServiceCurrentHealth.html",
    "title": "Get-PnPServiceCurrentHealth | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPServiceCurrentHealth SYNOPSIS Required Permissions Microsoft Graph API : ServiceHealth.Read.All Gets current service status of the Office 365 Services from the Microsoft Graph API SYNTAX Get-PnPServiceCurrentHealth [-Identity <Office365Workload>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPServiceCurrentHealth Retrieves the current service status of all Office 365 services EXAMPLE 2 Get-PnPServiceCurrentHealth -Identity \"SharePoint Online\" Retrieves the current service status of SharePoint Online PARAMETERS -Identity Allows retrieval of the current service status of only one particular service. If not provided, the current service status of all services will be returned. Note that you need to use the full name of the service, not the shortened Id. Type: Identity Parameter Sets: (All) Accepted values: Exchange Online, Identity Service, Microsoft 365 suite, Skype for Business, SharePoint Online, Dynamics 365 Apps, Azure Information Protection, Mobile Device Management for Office 365, Planner, Sway, Power BI, OneDrive for Business, Microsoft Teams, Microsoft Kaizala, Microsoft Bookings, Office for the web, Microsoft 365 Apps, Power Apps, Power Apps in Microsoft 365, Microsoft Power Automate, Microsoft Power Automate in Microsoft 365, Microsoft Forms, Microsoft Stream Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPServiceHealthIssue.html": {
    "href": "cmdlets/Get-PnPServiceHealthIssue.html",
    "title": "Get-PnPServiceHealthIssue | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPServiceHealthIssue SYNOPSIS Required Permissions Microsoft Graph API : ServiceHealth.Read.All Gets service health issues of the Office 365 Services from the Microsoft Graph API SYNTAX Get-PnPServiceHealthIssue [-Identity <Id>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPServiceHealthIssue Retrieves all the available service health issues EXAMPLE 2 Get-PnPServiceHealthIssue -Identity \"EX123456\" Retrieves the details of the service health issue with the Id EX123456 PARAMETERS -Identity Allows retrieval of a particular service health issue with the provided Id Type: Identity Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSharingForNonOwnersOfSite.html": {
    "href": "cmdlets/Get-PnPSharingForNonOwnersOfSite.html",
    "title": "Get-PnPSharingForNonOwnersOfSite | PnP PowerShell",
    "keywords": "Get-PnPSharingForNonOwnersOfSite SYNOPSIS Returns $false if sharing of the site and items in the site is restricted only to owners or $true if members and owners are allowed to share SYNTAX Get-PnPSharingForNonOwnersOfSite [-Identity <SitePipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Returns $false if sharing of the site and items in the site is restricted only to owners or $true if members and owners are allowed to share. You can disable sharing by non owners by using Disable-PnPSharingForNonOwnersOfSite. At this point there is no interface available yet to enable sharing by owners and members again through script. You will have to do so through the user interface of SharePoint. EXAMPLES EXAMPLE 1 Get-PnPSharingForNonOwnersOfSite Returns $false if sharing of the site and items in the site is restricted only to owners or $true if members and owners are allowed to share PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Type: SitePipeBind Parameter Sets: (All) Aliases: Url Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSite.html": {
    "href": "cmdlets/Get-PnPSite.html",
    "title": "Get-PnPSite | PnP PowerShell",
    "keywords": "Get-PnPSite SYNOPSIS Returns the current site collection from the context. SYNTAX Get-PnPSite [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSite Gets the current site EXAMPLE 2 Get-PnPSite -Includes RootWeb,ServerRelativeUrl Gets the current site specifying to include RootWeb and ServerRelativeUrl properties. For the full list of properties see https://docs.microsoft.com/previous-versions/office/sharepoint-server/ee538579(v%3doffice.15) PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteClassification.html": {
    "href": "cmdlets/Get-PnPSiteClassification.html",
    "title": "Get-PnPSiteClassification | PnP PowerShell",
    "keywords": "Get-PnPSiteClassification SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.Read.All, Directory.ReadWrite.All Returns the defined Site Classifications for the tenant SYNTAX Get-PnPSiteClassification [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSiteClassification Returns the currently set site classifications for the tenant. PARAMETERS RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteClosure.html": {
    "href": "cmdlets/Get-PnPSiteClosure.html",
    "title": "Get-PnPSiteClosure | PnP PowerShell",
    "keywords": "Get-PnPSiteClosure SYNOPSIS Get the site closure status of the site which has a site policy applied SYNTAX Get-PnPSiteClosure [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSiteClosure Get the site closure status of the site. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteCollectionAdmin.html": {
    "href": "cmdlets/Get-PnPSiteCollectionAdmin.html",
    "title": "Get-PnPSiteCollectionAdmin | PnP PowerShell",
    "keywords": "Get-PnPSiteCollectionAdmin SYNOPSIS Returns the current site collection administrators of the site collection in the current context SYNTAX Get-PnPSiteCollectionAdmin [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This command will return all current site collection administrators of the site collection in the current context EXAMPLES EXAMPLE 1 Get-PnPSiteCollectionAdmin This will return all the current site collection administrators of the site collection in the current context PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteCollectionAppCatalogs.html": {
    "href": "cmdlets/Get-PnPSiteCollectionAppCatalogs.html",
    "title": "Get-PnPSiteCollectionAppCatalogs | PnP PowerShell",
    "keywords": "Get-PnPSiteCollectionAppCatalogs SYNOPSIS Returns site collection scoped app catalogs SYNTAX Get-PnPSiteCollectionAppCatalogs [<CommonParameters>] DESCRIPTION Returns site collection scoped app catalogs EXAMPLES EXAMPLE 1 Get-PnPSiteCollectionAppCatalogs Will return the site collection app catalogs PARAMETERS RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteCollectionTermStore.html": {
    "href": "cmdlets/Get-PnPSiteCollectionTermStore.html",
    "title": "Get-PnPSiteCollectionTermStore | PnP PowerShell",
    "keywords": "Get-PnPSiteCollectionTermStore SYNOPSIS Returns the site collection term store if it exists or else it will not return anything SYNTAX Get-PnPSiteCollectionTermStore [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Returns the site collection scoped term store for the currently connected to site collection. If it does not exist yet, it will return a null value. EXAMPLES EXAMPLE 1 Get-PnPSiteCollectionTermStore Returns the site collection term store. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteDesign.html": {
    "href": "cmdlets/Get-PnPSiteDesign.html",
    "title": "Get-PnPSiteDesign | PnP PowerShell",
    "keywords": "Get-PnPSiteDesign SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Retrieve Site Designs that have been registered on the current tenant. SYNTAX Get-PnPSiteDesign [[-Identity] <TenantSiteDesignPipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Retrieve Site Designs that have been registered on the current tenant. When providing a name with -Identity, it returns all site designs with that name. EXAMPLES EXAMPLE 1 Get-PnPSiteDesign Returns all registered site designs EXAMPLE 2 Get-PnPSiteDesign -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd Returns a specific registered site designs PARAMETERS -Identity If specified will retrieve the specified site design Type: TenantSiteDesignPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteDesignRights.html": {
    "href": "cmdlets/Get-PnPSiteDesignRights.html",
    "title": "Get-PnPSiteDesignRights | PnP PowerShell",
    "keywords": "Get-PnPSiteDesignRights SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns the principals with design rights on a specific Site Design SYNTAX Get-PnPSiteDesignRights [-Identity] <TenantSiteDesignPipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSiteDesignRights -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd Returns the principals with rights on a specific site design PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the Site Design to receive the rights for Type: TenantSiteDesignPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteDesignRun.html": {
    "href": "cmdlets/Get-PnPSiteDesignRun.html",
    "title": "Get-PnPSiteDesignRun | PnP PowerShell",
    "keywords": "Get-PnPSiteDesignRun SYNOPSIS Retrieves a list of site designs applied to a specified site collection. If the WebUrl parameter is not specified we show the list of designs applied to the current site. The returned output includes the ID of the scheduled job, the web and site IDs, and the site design ID, version, and title. SYNTAX Get-PnPSiteDesignRun [-SiteDesignId <Guid>] [-WebUrl <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSiteDesignRun This example returns a list of the site designs applied to the current site. Providing a specific site design ID will return the details for just that applied site design. EXAMPLE 2 Get-PnPSiteDesignRun -WebUrl \"https://mytenant.sharepoint.com/sites/project\" This example returns a list of the site designs applied to the specified site. Providing a specific site design ID will return the details for just that applied site design. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteDesignId The ID of the site design to apply. Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WebUrl The URL of the site collection where the site design will be applied. If not specified the design will be applied to the site you connected to with Connect-PnPOnline. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteDesignRunStatus.html": {
    "href": "cmdlets/Get-PnPSiteDesignRunStatus.html",
    "title": "Get-PnPSiteDesignRunStatus | PnP PowerShell",
    "keywords": "Get-PnPSiteDesignRunStatus SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Retrieves and displays a list of all site script actions executed for a specified site design applied to a site. SYNTAX Get-PnPSiteDesignRunStatus -Run <TenantSiteDesignRun> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 $myrun = Get-PnPSiteDesignRun -WebUrl \"https://contoso.sharepoint.com/sites/project-playbook\" -SiteDesignId cefd782e-sean-4814-a68a-b33b116c302f Get-PnPSiteDesignRunStatus -Run $myrun This example gets the run for a specific site design applied to a site and sets it to a variable. This variable is then passed into the command -Run parameter. The result is a display of all the site script actions applied for that site design run, including the script action title and outcome. PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Run The site design run for the desired set of script action details. Type: TenantSiteDesignRun Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteDesignTask.html": {
    "href": "cmdlets/Get-PnPSiteDesignTask.html",
    "title": "Get-PnPSiteDesignTask | PnP PowerShell",
    "keywords": "Get-PnPSiteDesignTask SYNOPSIS Used to retrieve a scheduled site design script. It takes the ID of the scheduled site design task and the URL for the site where the site design is scheduled to be applied. SYNTAX Get-PnPSiteDesignTask [-Identity <TenantSiteDesignTaskPipeBind>] [-WebUrl <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSiteDesignTask -Identity 501z8c32-4147-44d4-8607-26c2f67cae82 This example retrieves a site design task given the provided site design task id EXAMPLE 2 Get-PnPSiteDesignTask This example retrieves all site design tasks currently scheduled on the current site EXAMPLE 3 Get-PnPSiteDesignTask -WebUrl \"https://contoso.sharepoint.com/sites/project\" This example retrieves all site design tasks currently scheduled on the provided site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the site design task to retrieve. Type: TenantSiteDesignTaskPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WebUrl The URL of the site collection where the site design will be applied. If not specified the site design tasks will be returned for the site you connected to with Connect-PnPOnline. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteGroup.html": {
    "href": "cmdlets/Get-PnPSiteGroup.html",
    "title": "Get-PnPSiteGroup | PnP PowerShell",
    "keywords": "Get-PnPSiteGroup SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Gets all the groups in the current or specified site collection. SYNTAX Get-PnPSiteGroup [-Group <String>] [-Site <SitePipeBind>] DESCRIPTION Use the Get-PnPSiteGroup cmdlet to get all the groups on the specified or currently connected site collection. EXAMPLES EXAMPLE 1 Get-PnPSiteGroup Returns all SharePoint groups in the current connected to site EXAMPLE 2 Get-PnPSiteGroup -Site \"https://contoso.sharepoint.com/sites/siteA\" This will return all SharePoint groups in the specified site EXAMPLE 3 Get-PnPSiteGroup -Group \"SiteA Members\" This will return the specified group for the current connected to site EXAMPLE 4 Get-PnPSiteGroup -Group \"SiteA Members\" -Site \"https://contoso.sharepoint.com/sites/siteA\" This will return the specified group for the specified site. PARAMETERS -Site Retrieve the associated member group. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group Specifies the group name. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSitePolicy.html": {
    "href": "cmdlets/Get-PnPSitePolicy.html",
    "title": "Get-PnPSitePolicy | PnP PowerShell",
    "keywords": "Get-PnPSitePolicy SYNOPSIS Retrieves all or a specific site policy SYNTAX Get-PnPSitePolicy [-AllAvailable] [-Name <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSitePolicy Retrieves the current applied site policy. EXAMPLE 2 Get-PnPSitePolicy -AllAvailable Retrieves all available site policies. EXAMPLE 3 Get-PnPSitePolicy -Name \"Contoso HBI\" Retrieves an available site policy with the name \"Contoso HBI\". PARAMETERS -AllAvailable Retrieve all available site policies Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name Retrieves a site policy with a specific name Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteScript.html": {
    "href": "cmdlets/Get-PnPSiteScript.html",
    "title": "Get-PnPSiteScript | PnP PowerShell",
    "keywords": "Get-PnPSiteScript SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Retrieve Site Scripts that have been registered on the current tenant. SYNTAX Get-PnPSiteScript [[-Identity] <TenantSiteScriptPipeBind>] [[-SiteDesign] <TenantSiteDesignPipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSiteScript Returns all registered site scripts EXAMPLE 2 Get-PnPSiteScript -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd Returns a specific registered site script PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity If specified will retrieve the specified site script Type: TenantSiteScriptPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -SiteDesign If specified will retrieve the site scripts for this design Type: TenantSiteDesignPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteScriptFromList.html": {
    "href": "cmdlets/Get-PnPSiteScriptFromList.html",
    "title": "Get-PnPSiteScriptFromList | PnP PowerShell",
    "keywords": "Get-PnPSiteScriptFromList SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Generates a Site Script from an existing list SYNTAX Get-PnPSiteScriptFromList -Url <String> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This command allows a Site Script to be generated off of an existing list on your tenant. Connect to your SharePoint Online Admin site before executing this command. EXAMPLES EXAMPLE 1 Get-PnPSiteScriptFromList -Url \"https://contoso.sharepoint.com/sites/teamsite/lists/MyList\" Returns the generated Site Script JSON from the list \"MyList\" at the provided Url EXAMPLE 2 Get-PnPSiteScriptFromList -Url \"https://contoso.sharepoint.com/sites/teamsite/Shared Documents\" Returns the generated Site Script JSON from the default document library at the provided Url PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Specifies the URL of the list to generate a Site Script from Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteScriptFromWeb.html": {
    "href": "cmdlets/Get-PnPSiteScriptFromWeb.html",
    "title": "Get-PnPSiteScriptFromWeb | PnP PowerShell",
    "keywords": "Get-PnPSiteScriptFromWeb SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Generates a Site Script from an existing site SYNTAX All components Get-PnPSiteScriptFromWeb -Url <String> [-Lists <String[]>] [-IncludeAll] [-Connection <PnPConnection>] [<CommonParameters>] Specific components Get-PnPSiteScriptFromWeb [-Url <String>] [-Lists <String[]>] [-IncludeBranding] [-IncludeLinksToExportedItems] [-IncludeRegionalSettings] [-IncludeSiteExternalSharingCapability] [-IncludeTheme] [-Connection <PnPConnection>] [<CommonParameters>] All lists Get-PnPSiteScriptFromWeb [-Url <String>] [-IncludeAllLists] [-IncludeBranding] [-IncludeLinksToExportedItems] [-IncludeRegionalSettings] [-IncludeSiteExternalSharingCapability] [-IncludeTheme] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This command allows a Site Script to be generated off of an existing site on your tenant. You need to provide at least one of the optional Include or Lists arguments. If you omit the URL, the Site Script will be created from the site to which you are connected. EXAMPLES EXAMPLE 1 Get-PnPSiteScriptFromWeb -IncludeAll Returns the generated Site Script JSON containing all supported components from the currently connected to site EXAMPLE 2 Get-PnPSiteScriptFromWeb -Url \"https://contoso.sharepoint.com/sites/teamsite\" -IncludeAll Returns the generated Site Script JSON containing all supported components from the site at the provided Url EXAMPLE 3 Get-PnPSiteScriptFromWeb -Url \"https://contoso.sharepoint.com/sites/teamsite\" -IncludeAll -Lists \"Shared Documents\",\"Lists\\MyList\" Returns the generated Site Script JSON containing all supported components from the site at the provided Url including the lists \"Shared Documents\" and \"MyList\" EXAMPLE 5 Get-PnPSiteScriptFromWeb -Url \"https://contoso.sharepoint.com/sites/teamsite\" -IncludeBranding -IncludeLinksToExportedItems Returns the generated Site Script JSON containing the branding and navigation links from the site at the provided Url EXAMPLE 6 Get-PnPSiteScriptFromWeb -IncludeAllLists Returns the generated Site Script JSON containing all lists from the currently connected to site PARAMETERS -IncludeAll If specified will include all supported components into the Site Script including all self lists, branding, navigation links, regional settings, external sharing capability and theme. Type: SwitchParameter Parameter Sets: All components Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeBranding If specified will include the branding of the site into the Site Script Type: SwitchParameter Parameter Sets: Specific components, All lists Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeLinksToExportedItems If specified will include navigation links into the Site Script Type: SwitchParameter Parameter Sets: Specific components, All lists Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeRegionalSettings If specified will include the regional settings into the Site Script Type: SwitchParameter Parameter Sets: Specific components, All lists Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeSiteExternalSharingCapability If specified will include the external sharing configuration into the Site Script Type: SwitchParameter Parameter Sets: Specific components, All lists Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeTheme If specified will include the branding of the site into the Site Script Type: SwitchParameter Parameter Sets: Specific components, All lists Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeAllLists If specified, all lists that are not hidden, private, internal or catalogs will be included into the Site Script. It cannot be combined with the -Lists nor the -IncludeAll parameters as both will already include all lists. Type: String[] Parameter Sets: All lists Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Lists Allows specifying one or more site relative URLs of lists that should be included into the Site Script, i.e. \"Shared Documents\",\"Lists\\MyList\" Type: String[] Parameter Sets: Basic components, All components, Specific components Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Specifies the URL of the site to generate a Site Script from. If omitted, the currently connected to site will be used. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteSearchQueryResults.html": {
    "href": "cmdlets/Get-PnPSiteSearchQueryResults.html",
    "title": "Get-PnPSiteSearchQueryResults | PnP PowerShell",
    "keywords": "Get-PnPSiteSearchQueryResults SYNOPSIS Executes a search query to retrieve indexed site collections SYNTAX Limit (Default) Get-PnPSiteSearchQueryResults [[-Query] <String>] [-StartRow <Int32>] [-MaxResults <Int32>] [-Connection <PnPConnection>] [<CommonParameters>] All Get-PnPSiteSearchQueryResults [[-Query] <String>] [-All] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSiteSearchQueryResults Returns the top 500 site collections indexed by SharePoint Search EXAMPLE 2 Get-PnPSiteSearchQueryResults -Query \"WebTemplate:STS\" Returns the top 500 site collections indexed by SharePoint Search which have are based on the STS (Team Site) template EXAMPLE 3 Get-PnPSiteSearchQueryResults -Query \"WebTemplate:SPSPERS\" Returns the top 500 site collections indexed by SharePoint Search which have are based on the SPSPERS (MySite) template, up to the MaxResult limit EXAMPLE 4 Get-PnPSiteSearchQueryResults -Query \"Title:Intranet*\" Returns the top 500 site collections indexed by SharePoint Search of which the title starts with the word Intranet EXAMPLE 5 Get-PnPSiteSearchQueryResults -MaxResults 10 Returns the top 10 site collections indexed by SharePoint Search EXAMPLE 6 Get-PnPSiteSearchQueryResults -All Returns absolutely all site collections indexed by SharePoint Search PARAMETERS -All Automatically page results until the end to get more than 500 sites. Use with caution! Type: SwitchParameter Parameter Sets: All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MaxResults Maximum amount of search results to return. Default and max is 500 search results. Type: Int32 Parameter Sets: Limit Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Query Search query in Keyword Query Language (KQL) to execute to refine the returned sites. If omitted, all indexed sites will be returned. Type: String Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -StartRow Search result item to start returning the results from. Useful for paging. Leave at 0 to return all results. Type: Int32 Parameter Sets: Limit Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSiteTemplate.html": {
    "href": "cmdlets/Get-PnPSiteTemplate.html",
    "title": "Get-PnPSiteTemplate | PnP PowerShell",
    "keywords": "Get-PnPSiteTemplate SYNOPSIS Generates a provisioning site template from a web SYNTAX Get-PnPSiteTemplate [[-Out] <String>] [[-Schema] <XMLPnPSchemaVersion>] [-IncludeAllTermGroups] [-IncludeSiteCollectionTermGroup] [-IncludeSiteGroups] [-IncludeTermGroupsSecurity] [-IncludeSearchConfiguration] [-PersistBrandingFiles] [-PersistPublishingFiles] [-IncludeNativePublishingFiles] [-IncludeHiddenLists] [-IncludeAllPages] [-SkipVersionCheck] [-PersistMultiLanguageResources] [-ResourceFilePrefix <String>] [-Handlers <Handlers>] [-ExcludeHandlers <Handlers>] [-ExtensibilityHandlers <ExtensibilityHandler[]>] [-TemplateProviderExtensions <ITemplateProviderExtension[]>] [-ContentTypeGroups <String[]>] [-Force] [-NoBaseTemplate] [-Encoding <Encoding>] [-TemplateDisplayName <String>] [-TemplateImagePreviewUrl <String>] [-TemplateProperties <Hashtable>] [-OutputInstance] [-ExcludeContentTypesFromSyndication] [-ListsToExtract <System.Collections.Generic.List`1[System.String]>] [-Configuration <ExtractConfigurationPipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSiteTemplate -Out template.pnp Extracts a provisioning template in Office Open XML from the current web. EXAMPLE 2 Get-PnPSiteTemplate -Out template.xml Extracts a provisioning template in XML format from the current web. EXAMPLE 3 Get-PnPSiteTemplate -Out template.md Extracts a provisioning template in readible markdown format. EXAMPLE 4 Get-PnPSiteTemplate -Out template.pnp -Schema V201503 Extracts a provisioning template in Office Open XML from the current web and saves it in the V201503 version of the schema. EXAMPLE 5 Get-PnPSiteTemplate -Out template.pnp -IncludeAllTermGroups Extracts a provisioning template in Office Open XML from the current web and includes all term groups, term sets and terms from the Managed Metadata Service Taxonomy. EXAMPLE 6 Get-PnPSiteTemplate -Out template.pnp -IncludeSiteCollectionTermGroup Extracts a provisioning template in Office Open XML from the current web and includes the term group currently (if set) assigned to the site collection. EXAMPLE 7 Get-PnPSiteTemplate -Out template.pnp -PersistBrandingFiles Extracts a provisioning template in Office Open XML from the current web and saves the files that make up the composed look to the same folder as where the template is saved. EXAMPLE 8 Get-PnPSiteTemplate -Out template.pnp -Handlers Lists, SiteSecurity Extracts a provisioning template in Office Open XML from the current web, but only processes lists and site security when generating the template. EXAMPLE 9 $handler1 = New-PnPExtensibilityHandlerObject -Assembly Contoso.Core.Handlers -Type Contoso.Core.Handlers.MyExtensibilityHandler1 $handler2 = New-PnPExtensibilityHandlerObject -Assembly Contoso.Core.Handlers -Type Contoso.Core.Handlers.MyExtensibilityHandler2 Get-PnPSiteTemplate -Out NewTemplate.xml -ExtensibilityHandlers $handler1,$handler2 This will create two new ExtensibilityHandler objects that are run during extraction of the template EXAMPLE 10 Only supported on SP2016, SP2019 and SP Online Get-PnPSiteTemplate -Out template.pnp -PersistMultiLanguageResources Extracts a provisioning template in Office Open XML from the current web, and for supported artifacts it will create a resource file for each supported language (based upon the language settings of the current web). The generated resource files will be named after the value specified in the Out parameter. For instance if the Out parameter is specified as -Out 'template.xml' the generated resource file will be called 'template.en-US.resx'. EXAMPLE 11 Only supported on SP2016, SP2019 and SP Online Get-PnPSiteTemplate -Out template.pnp -PersistMultiLanguageResources -ResourceFilePrefix MyResources Extracts a provisioning template in Office Open XML from the current web, and for supported artifacts it will create a resource file for each supported language (based upon the language settings of the current web). The generated resource files will be named 'MyResources.en-US.resx' etc. EXAMPLE 12 $template = Get-PnPSiteTemplate -OutputInstance Extracts an instance of a provisioning template object from the current web. This syntax cannot be used together with the -Out parameter, but it can be used together with any other supported parameters. EXAMPLE 13 Get-PnPSiteTemplate -Out template.pnp -ContentTypeGroups \"Group A\",\"Group B\" Extracts a provisioning template in Office Open XML from the current web, but only processes content types from the to given content type groups. EXAMPLE 14 Get-PnPSiteTemplate -Out template.pnp -ExcludeContentTypesFromSyndication Extracts a provisioning template in Office Open XML from the current web, excluding content types provisioned through content type syndication (content type hub), in order to prevent provisioning errors if the target also provision the content type using syndication. EXAMPLE 15 Get-PnPSiteTemplate -Out template.pnp -ListsToExtract \"Title of List One\",\"95c4efd6-08f4-4c67-94ae-49d696ba1298\",\"Title of List Three\" Extracts a provisioning template in Office Open XML from the current web, including only the lists specified by title or ID. EXAMPLE 16 Get-PnPSiteTemplate -Out template.xml -Handlers Fields, ContentTypes, SupportedUILanguages -PersistMultiLanguageResources Extracts a provisioning template in XML format from the current web including the fields, content types and supported ui languages. It will create a resource file for each supported language. The generated resource files will be named 'template.en-US.resx' etc. It is mandatory to include the \"SupportedUILanguages\" for these handlers as otherwise the resource files will not be created. EXAMPLE 17 Connect-PnPOnline -Url \"https://contoso.sharepoint.com/sites/yourContentCenter\" Get-PnPSiteTemplate -Out MyModels.pnp -Handlers SyntexModels Export all Syntex Document Understanding models in a Content Center into a single PnP template PARAMETERS -Configuration Specify a JSON configuration file to configure the extraction progress. Type: ExtractConfigurationPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentTypeGroups Allows you to specify from which content type group(s) the content types should be included into the template. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Encoding The encoding type of the XML file, Unicode is default Type: Encoding Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExcludeContentTypesFromSyndication Specify whether or not content types issued from a content hub should be exported. By default, these content types are included. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExcludeHandlers Allows you to run all handlers, excluding the ones specified. Type: Handlers Parameter Sets: (All) Accepted values: All, ApplicationLifecycleManagement, AuditSettings, ComposedLook, ContentTypes, CustomActions, ExtensibilityProviders, Features, Fields, Files, ImageRenditions, Lists, Navigation, None, PageContents, Pages, PropertyBagEntries, Publishing, RegionalSettings, SearchSettings, SiteFooter, SiteHeader, SitePolicy, SiteSecurity, SiteSettings, SupportedUILanguages, SyntexModels, Tenant, TermGroups, Theme, WebApiPermissions, WebSettings, Workflows Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExtensibilityHandlers Allows you to specify ExtensibilityHandlers to execute while extracting a template. Type: ExtensibilityHandler[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Overwrites the output file if it exists. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Handlers Allows you to only process a specific type of artifact in the site. Notice that this might result in a non-working template, as some of the handlers require other artifacts in place if they are not part of what your extracting. For possible values for this parameter visit https://docs.microsoft.com/dotnet/api/officedevpnp.core.framework.provisioning.model.handlers Type: Handlers Parameter Sets: (All) Accepted values: All, ApplicationLifecycleManagement, AuditSettings, ComposedLook, ContentTypes, CustomActions, ExtensibilityProviders, Features, Fields, Files, ImageRenditions, Lists, Navigation, None, PageContents, Pages, PropertyBagEntries, Publishing, RegionalSettings, SearchSettings, SiteFooter, SiteHeader, SitePolicy, SiteSecurity, SiteSettings, SupportedUILanguages, SyntexModels, Tenant, TermGroups, Theme, WebApiPermissions, WebSettings, Workflows Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeAllPages If specified all site pages will be included Type: SwitchParameter Parameter Sets: (All) Aliases: IncludeAllClientSidePages Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeAllTermGroups If specified, all term groups will be included. Overrides IncludeSiteCollectionTermGroup. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeHiddenLists If specified hidden lists will be included in the template Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeNativePublishingFiles If specified, out of the box / native publishing files will be saved. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeSearchConfiguration If specified the template will contain the current search configuration of the site. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeSiteCollectionTermGroup If specified, all the site collection term groups will be included. Overridden by IncludeAllTermGroups. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeSiteGroups If specified all site groups will be included. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeTermGroupsSecurity If specified all the managers and contributors of term groups will be included. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ListsToExtract Specify the lists to extract, either providing their ID or their Title. Type: System.Collections.Generic.List`1[System.String] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NoBaseTemplate {{ Fill NoBaseTemplate Description }} Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Out Filename to write to, optionally including full path. The format of the file is based upon the extension you specify. .xml will generate an XML file .pnp will generate a PnP Provisioning Package, which is a file that contains all artifacts in a single archive (files, images, etc.) .md will generate a user readible markdown report. This is work in progress and will be extended in the future. Type: String Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -OutputInstance Returns the template as an in-memory object, which is an instance of the SiteTemplate type of the PnP Core Component. It cannot be used together with the -Out parameter. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PersistBrandingFiles If specified the files used for masterpages, sitelogo, alternate CSS and the files that make up the composed look will be saved. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PersistMultiLanguageResources If specified, resource values for applicable artifacts will be persisted to a resource file Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PersistPublishingFiles If specified the files used for the publishing feature will be saved. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ResourceFilePrefix If specified, resource files will be saved with the specified prefix instead of using the template name specified. If no template name is specified the files will be called PnP-Resources.<language>.resx. See examples for more info. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Schema The schema of the output to use, defaults to the latest schema Type: XMLPnPSchemaVersion Parameter Sets: (All) Accepted values: LATEST, V201503, V201505, V201508, V201512, V201605, V201705, V201801, V201805, V201807, V201903, V201909, V202002 Required: False Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -SkipVersionCheck During extraction the version of the server will be checked for certain actions. If you specify this switch, this check will be skipped. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateDisplayName It can be used to specify the DisplayName of the template file that will be extracted. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateImagePreviewUrl It can be used to specify the ImagePreviewUrl of the template file that will be extracted. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateProperties It can be used to specify custom Properties for the template file that will be extracted. Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateProviderExtensions Allows you to specify ITemplateProviderExtension to execute while extracting a template. Type: ITemplateProviderExtension[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Encoding documentation"
  },
  "cmdlets/Get-PnPSiteUserInvitations.html": {
    "href": "cmdlets/Get-PnPSiteUserInvitations.html",
    "title": "Get-PnPSiteUserInvitations | PnP PowerShell",
    "keywords": "Get-PnPSiteUserInvitations SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Searches against all stored sharing links and retrieves the email invites SYNTAX Get-PnPSiteUserInvitations [[-Site] <SitePipeBind>] -EmailAddress <string> [<CommonParameters>] DESCRIPTION Searches against all stored sharing links on a Site and retrieves the email invites. If the site parameter is omitted the current site will be searched. EXAMPLES EXAMPLE 1 Get-PnPSiteUserInvitations -Site \"https://contoso.sharepoint.com/sites/ContosoWeb1/\" -EmailAddress someone@example.com This example retrieves email invites stored in the ContosoWeb1 site to the user with email address someone@example.com. PARAMETERS -Site Specifies the URL of the site collection. Type: SitePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EmailAddress Email Address of the user. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPStorageEntity.html": {
    "href": "cmdlets/Get-PnPStorageEntity.html",
    "title": "Get-PnPStorageEntity | PnP PowerShell",
    "keywords": "Get-PnPStorageEntity SYNOPSIS Retrieve Storage Entities / Farm Properties from either the Tenant App Catalog or from the current site if it has a site scope app catalog. SYNTAX Get-PnPStorageEntity [-Key <String>] [-Scope <StorageEntityScope>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPStorageEntity Returns all site storage entities/farm properties EXAMPLE 2 Get-PnPStorageEntity -Key MyKey Returns the storage entity/farm property with the given key. EXAMPLE 3 Get-PnPStorageEntity -Scope Site Returns all site collection scoped storage entities EXAMPLE 4 Get-PnPStorageEntity -Key MyKey -Scope Site Returns the storage entity from the site collection with the given key PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Key The key of the value to retrieve. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope Defines the scope of the storage entity. Defaults to Tenant. Type: StorageEntityScope Parameter Sets: (All) Accepted values: Site, Tenant Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPStoredCredential.html": {
    "href": "cmdlets/Get-PnPStoredCredential.html",
    "title": "Get-PnPStoredCredential | PnP PowerShell",
    "keywords": "Get-PnPStoredCredential SYNOPSIS Get a credential SYNTAX Get-PnPStoredCredential -Name <String> [<CommonParameters>] DESCRIPTION Returns a stored credential from the Windows Credential Manager or Mac OS Key Chain Entry. EXAMPLES EXAMPLE 1 Get-PnPStoredCredential -Name O365 Returns the credential associated with the specified identifier PARAMETERS -Name The credential to retrieve. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPStructuralNavigationCacheSiteState.html": {
    "href": "cmdlets/Get-PnPStructuralNavigationCacheSiteState.html",
    "title": "Get-PnPStructuralNavigationCacheSiteState | PnP PowerShell",
    "keywords": "Get-PnPStructuralNavigationCacheSiteState SYNOPSIS Get the structural navigation caching state for a site collection. SYNTAX Get-PnPStructuralNavigationCacheSiteState [-SiteUrl <String>] DESCRIPTION The Get-PnPStructuralNavigationCacheSiteState cmdlet can be used to determine if structural navigation caching is enabled or disabled for a site collection. If the SiteUrl parameter has not been specified the currently connected to site will be used. EXAMPLES Example 1 Get-PnPStructuralNavigationCacheSiteState -SiteUrl \"https://contoso.sharepoint.com/sites/product/\" This example checks if structural navigation caching is enabled for the entire site collection https://contoso.sharepoint.com/sites/product/ . If caching is enabled, then it will return True. If caching is disabled, then it will return False. PARAMETERS -SiteUrl Specifies the absolute URL for the site collection's root web being checked for its caching state. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPStructuralNavigationCacheWebState.html": {
    "href": "cmdlets/Get-PnPStructuralNavigationCacheWebState.html",
    "title": "Get-PnPStructuralNavigationCacheWebState | PnP PowerShell",
    "keywords": "Get-PnPStructuralNavigationCacheWebState SYNOPSIS Get the structural navigation caching state for a web. SYNTAX Get-PnPStructuralNavigationCacheWebState [-WebUrl <String>] DESCRIPTION The Get-PnPStructuralNavigationCacheWebState cmdlet can be used to determine if structural navigation caching is enabled or disabled for a web in a site collection. If the WebUrl parameter has not been specified the currently connected to web will be used. EXAMPLES Example 1 Get-PnPStructuralNavigationCacheWebState -WebUrl \"https://contoso.sharepoint.com/sites/product/electronics\" This example checks if structural navigation caching is enabled for the web https://contoso.sharepoint.com/sites/product/electronics . If caching is enabled, then it will return True. If caching is disabled, then it will return False. PARAMETERS -WebUrl Specifies the absolute URL for the web being checked for its caching state. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSubscribeSharePointNewsDigest.html": {
    "href": "cmdlets/Get-PnPSubscribeSharePointNewsDigest.html",
    "title": "Get-PnPSubscribeSharePointNewsDigest | PnP PowerShell",
    "keywords": "Get-PnPSubscribeSharePointNewsDigest SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site You must connect to the tenant admin website ( https://tenant-admin.sharepoint.com ) with Connect-PnPOnline in order to use this cmdlet. Retrieves if the SharePoint News Digest mails are enabled or disabled for a particular user. SYNTAX Get-PnPSubscribeSharePointNewsDigest -Account <String> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Requires a connection to a SharePoint Tenant Admin site. Retrieves if the SharePoint News Digest mails are enabled or disabled for a particular user. EXAMPLES EXAMPLE 1 Get-PnPSubscribeSharePointNewsDigest -Account 'user@domain.com' Returns if this user will receive the SharePoint News digest mails PARAMETERS -Account The account of the user, formatted either as a login name, e.g. user@domain.com, or as a claims identity, e.g. i:0#.f|membership|user@domain.com Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSubWeb.html": {
    "href": "cmdlets/Get-PnPSubWeb.html",
    "title": "Get-PnPSubWeb | PnP PowerShell",
    "keywords": "Get-PnPSubWeb SYNOPSIS Returns the subwebs of the current web SYNTAX Get-PnPSubWeb [[-Identity] <WebPipeBind>] [-Recurse] [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPSubWeb Retrieves all subsites of the current context returning the Id, Url, Title and ServerRelativeUrl of each subsite in the output EXAMPLE 2 Get-PnPSubWeb -Recurse Retrieves all subsites of the current context and all of their nested child subsites returning the Id, Url, Title and ServerRelativeUrl of each subsite in the output EXAMPLE 3 Get-PnPSubWeb -Recurse -Includes \"WebTemplate\",\"Description\" | Select ServerRelativeUrl, WebTemplate, Description Retrieves all subsites of the current context and shows the ServerRelativeUrl, WebTemplate and Description properties in the resulting output EXAMPLE 4 Get-PnPSubWeb -Identity Team1 -Recurse Retrieves all subsites of the subsite Team1 and all of its nested child subsites EXAMPLE 5 Get-PnPSubWeb -Identity Team1 -Recurse -IncludeRootWeb Retrieves the rootweb, all subsites of the subsite Team1 and all of its nested child subsites PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity If provided, only the subsite with the provided Id, GUID or the Web instance will be returned Type: WebPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Recurse If provided, recursion through all subsites and their children will take place to return them as well Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -IncludeRootWeb If provided, the results will also contain the rootweb Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSyntexModel.html": {
    "href": "cmdlets/Get-PnPSyntexModel.html",
    "title": "Get-PnPSyntexModel | PnP PowerShell",
    "keywords": "Get-PnPSyntexModel SYNOPSIS Returns SharePoint Syntex models from a SharePoint Syntex Content Center. This cmdlet only works when you've connected to a SharePoint Syntex Content Center site. SYNTAX Get-PnPSyntexModel [-Identity] <SyntexModelPipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This command allows the retrieval of a SharePoint Syntex content understanding models defined in the connected SharePoint Syntex Content Center site. EXAMPLES EXAMPLE 1 Get-PnPSyntexModel Lists all the content understanding models in the connected SharePoint Syntex Content Center site. EXAMPLE 2 Get-PnPSyntexModel -Identity 1 Gets the content understanding model with id 1. EXAMPLE 3 Get-PnPSyntexModel -Identity \"Invoice model\" Gets the content understanding model named \"Invoice model\". PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name or id of the SharePoint Syntex model. Type: SyntexModelPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPSyntexModelPublication.html": {
    "href": "cmdlets/Get-PnPSyntexModelPublication.html",
    "title": "Get-PnPSyntexModelPublication | PnP PowerShell",
    "keywords": "Get-PnPSyntexModelPublication SYNOPSIS Returns the libraries to which a SharePoint Syntex model was published. This cmdlet only works when you've connected to a SharePoint Syntex Content Center site. SYNTAX Get-PnPSyntexModelPublications -Model <SyntexModelPipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This command returns the libraries to which a SharePoint Syntex content understanding model defined in the connected SharePoint Syntex Content Center site was published. EXAMPLES EXAMPLE 1 Get-PnPSyntexModelPublication -Identity \"Invoice model\" Gets the libraries to which the content understanding model named \"Invoice model\" was published. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Model The name or id of the SharePoint Syntex model. Type: SyntexModelPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTaxonomyItem.html": {
    "href": "cmdlets/Get-PnPTaxonomyItem.html",
    "title": "Get-PnPTaxonomyItem | PnP PowerShell",
    "keywords": "Get-PnPTaxonomyItem SYNOPSIS Returns a taxonomy item SYNTAX Get-PnPTaxonomyItem [-TermPath] <String> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Provide the term path only and then the term item if found will be returned. EXAMPLES EXAMPLE 1 Get-PnPTaxonomyItem -TermPath \"My Term Group|My Term Set|Contoso\" Will return the taxonomy item for the term path specified. PARAMETERS -TermPath The path, delimited by | of the taxonomy item to retrieve, alike GROUPLABEL|TERMSETLABEL|TERMLABEL Type: String Parameter Sets: (All) Aliases: Term Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTaxonomySession.html": {
    "href": "cmdlets/Get-PnPTaxonomySession.html",
    "title": "Get-PnPTaxonomySession | PnP PowerShell",
    "keywords": "Get-PnPTaxonomySession SYNOPSIS Returns a taxonomy session SYNTAX Get-PnPTaxonomySession [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTeamsApp.html": {
    "href": "cmdlets/Get-PnPTeamsApp.html",
    "title": "Get-PnPTeamsApp | PnP PowerShell",
    "keywords": "Get-PnPTeamsApp SYNOPSIS Required Permissions Microsoft Graph API : One of AppCatalog.Read.All, Directory.ReadWrite.All Gets one Microsoft Teams App or a list of all apps. SYNTAX Get-PnPTeamsApp [-Identity <TeamsAppPipeBind>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTeamsApp Retrieves all the Microsoft Teams Apps EXAMPLE 2 Get-PnPTeamsApp -Identity a54224d7-608b-4839-bf74-1b68148e65d4 Retrieves a specific Microsoft Teams App EXAMPLE 3 Get-PnPTeamsApp -Identity \"MyTeamsApp\" Retrieves a specific Microsoft Teams App PARAMETERS -Identity Specify the name, id or external id of the app. Type: TeamsAppPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTeamsChannel.html": {
    "href": "cmdlets/Get-PnPTeamsChannel.html",
    "title": "Get-PnPTeamsChannel | PnP PowerShell",
    "keywords": "Get-PnPTeamsChannel SYNOPSIS Required Permissions Microsoft Graph API : One of Group.Read.All, Group.ReadWrite.All Gets the channels for a specified Team. SYNTAX Get-PnPTeamsChannel -Team <TeamsTeamPipeBind> [-Identity <TeamsChannelPipeBind>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTeamsChannel -Team a6c1e0d7-f579-4993-81ab-4b666f8edea8 Retrieves all channels for the specified team EXAMPLE 2 Get-PnPTeamsChannel -Team a6c1e0d7-f579-4993-81ab-4b666f8edea8 -Identity \"Test Channel\" Retrieves the channel called 'Test Channel' EXAMPLE 3 Get-PnPTeamsChannel -Team a6c1e0d7-f579-4993-81ab-4b666f8edea8 -Identity \"19:796d063b63e34497aeaf092c8fb9b44e@thread.skype\" Retrieves the channel specified by its channel id PARAMETERS -Identity The id or name of the channel to retrieve. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTeamsChannelFilesFolder.html": {
    "href": "cmdlets/Get-PnPTeamsChannelFilesFolder.html",
    "title": "Get-PnPTeamsChannelFilesFolder | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPTeamsChannelFilesFolder SYNOPSIS Required Permissions Microsoft Graph API : Group.Read.All Gets the metadata for the location where the files of a channel are stored. SYNTAX Get-PnPTeamsChannel [-Team <TeamsTeamPipeBind>] [-Channel <TeamsChannelPipeBind>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTeamsChannelFilesFolder -Team \"Sales Team\" -Identity \"Test Channel\" Retrieves the folder metadata for the channel called 'Test Channel' located in the Team named 'Sales Team' EXAMPLE 2 Get-PnPTeamsChannelFilesFolder -Team a6c1e0d7-f579-4993-81ab-4b666f8edea8 -Identity \"19:796d063b63e34497aeaf092c8fb9b44e@thread.skype\" Retrieves the folder metadata for the channel specified by its channel id PARAMETERS -Channel The id or name of the channel to retrieve. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTeamsChannelMessage.html": {
    "href": "cmdlets/Get-PnPTeamsChannelMessage.html",
    "title": "Get-PnPTeamsChannelMessage | PnP PowerShell",
    "keywords": "Get-PnPTeamsChannelMessage SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Returns messages from the specified Microsoft Teams Channel. SYNTAX Get-PnPTeamsChannelMessage -Team <TeamsTeamPipeBind> -Channel <TeamsChannelPipeBind> [-Identity <TeamsChannelMessagePipeBind>] [-IncludeDeleted] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTeamsChannelMessage -Team MyTestTeam -Channel \"My Channel\" Gets all messages of the specified channel EXAMPLE 2 Get-PnPTeamsChannelMessage -Team MyTestTeam -Channel \"My Channel\" -Identity 1653089769293 Gets a specific message of the specified channel PARAMETERS -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Channel Specify id or name of the channel to use. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify the id of the message to use. Type: TeamsChannelMessagePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeDeleted Specify to include deleted messages. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTeamsChannelMessageReply.html": {
    "href": "cmdlets/Get-PnPTeamsChannelMessageReply.html",
    "title": "Get-PnPTeamsChannelMessageReply | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPTeamsChannelMessageReply SYNOPSIS Required Permissions Microsoft Graph API: ChannelMessage.Read.All Returns replies from the specified Microsoft Teams channel message. SYNTAX Get-PnPTeamsChannelMessageReply -Team <TeamsTeamPipeBind> -Channel <TeamsChannelPipeBind> -Message <TeamsChannelMessagePipeBind> [-Identity <TeamsChannelMessageReplyPipeBind>] [-IncludeDeleted] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTeamsChannelMessageReply -Team MyTestTeam -Channel \"My Channel\" -Message 1653089769293 -IncludeDeleted Gets all (active and deleted) replies of the specified channel message. EXAMPLE 2 Get-PnPTeamsChannelMessageReply -Team MyTestTeam -Channel \"My Channel\" -Message 1653089769293 -Identity 1653086004630 Gets a specific reply of the specified channel message. PARAMETERS -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Channel Specify id or name of the channel to use. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Message Specify the id of the message to use. Type: TeamsChannelMessagePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify the id of the message reply to use. Type: TeamsChannelMessageReplyPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeDeleted Specify to include deleted messages Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTeamsChannelUser.html": {
    "href": "cmdlets/Get-PnPTeamsChannelUser.html",
    "title": "Get-PnPTeamsChannelUser | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPTeamsChannelUser SYNOPSIS Required Permissions Microsoft Graph API: ChannelMember.Read.All Returns members from the specified Microsoft Teams private Channel. SYNTAX Get-PnPTeamsChannelUser -Team <TeamsTeamPipeBind> -Channel <TeamsChannelPipeBind> [-Identity <TeamsChannelMemberPipeBind>] [-Role <String>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTeamsChannelUser -Team \"My Team\" -Channel \"My Channel\" Returns all owners, members and guests from the specified channel. EXAMPLE 2 Get-PnPTeamsChannelUser -Team \"My Team\" -Channel \"My Channel\" -Role Member Returns all members from the specified channel. EXAMPLE 3 Get-PnPTeamsChannelUser -Team \"My Team\" -Channel \"My Channel\" -Identity john.doe@contoso.com Returns membership of the user \"john.doe@contoso.com\" for the specified channel. EXAMPLE 4 Get-PnPTeamsChannelUser -Team \"My Team\" -Channel \"My Channel\" -Identity 00000000-0000-0000-0000-000000000000 Returns membership of the user with ID \"00000000-0000-0000-0000-000000000000\" for the specified channel. PARAMETERS -Identity Specify membership id, UPN or user ID of the channel member. Type: TeamsChannelMemberPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Channel Specify id or name of the channel to use. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Role Specify to filter on the role of the user. Type: String Parameter Sets: (All) Accepted values: Owner, Member, Guest Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTeamsPrimaryChannel.html": {
    "href": "cmdlets/Get-PnPTeamsPrimaryChannel.html",
    "title": "Get-PnPTeamsPrimaryChannel | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPTeamsPrimaryChannel SYNOPSIS Required Permissions Microsoft Graph API : Channel.ReadBasic.All, ChannelSettings.Read.All, ChannelSettings.ReadWrite.All Gets the default channel, General, of a team. SYNTAX Get-PnPTeamsPrimaryChannel -Team <TeamsTeamPipeBind> [-Identity <TeamsChannelPipeBind>] [<CommonParameters>] DESCRIPTION Gets the default channel, General, of a team. EXAMPLES EXAMPLE 1 Get-PnPTeamsPrimaryChannel -Team ee0f40fc-b2f7-45c7-b62d-11b90dd2ea8e Gets the default channel of the Team with the provided Id EXAMPLE 2 Get-PnPTeamsPrimaryChannel -Team Sales Gets the default channel of the Sales Team PARAMETERS -Team The group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Get-PnPTeamsTab.html": {
    "href": "cmdlets/Get-PnPTeamsTab.html",
    "title": "Get-PnPTeamsTab | PnP PowerShell",
    "keywords": "Get-PnPTeamsTab SYNOPSIS Required Permissions Microsoft Graph API : One of Group.Read.All, Group.ReadWrite.All Gets one or all tabs in a channel. SYNTAX Get-PnPTeamsTab -Team <TeamsTeamPipeBind> -Channel <TeamsChannelPipeBind> [-Identity <TeamsTabPipeBind>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTeamsTab -Team 5beb63c5-0571-499e-94d5-3279fdd9b6b5 -Channel 19:796d063b63e34497aeaf092c8fb9b44e@thread.skype Retrieves the tabs for the specified Microsoft Teams instance and channel EXAMPLE 2 Get-PnPTeamsTab -Team 5beb63c5-0571-499e-94d5-3279fdd9b6b5 -Channel 19:796d063b63e34497aeaf092c8fb9b44e@thread.skype -Identity \"Wiki\" Retrieves a tab with the display name 'Wiki' from the specified team and channel EXAMPLE 3 Get-PnPTeamsTab -Team 5beb63c5-0571-499e-94d5-3279fdd9b6b5 -Channel 19:796d063b63e34497aeaf092c8fb9b44e@thread.skype -Identity d8740a7a-e44e-46c5-8f13-e699f964fc25 Retrieves a tab with an id from the specified team and channel EXAMPLE 4 Get-PnPTeamsTab -Team \"My Team\" -Channel \"My Channel\" Retrieves the tabs for the specified Microsoft Teams instance and channel EXAMPLE 5 Get-PnPTeamsTab -Team \"My Team\" -Channel \"My Channel\" -Identity \"Wiki\" Retrieves a tab with the display name 'Wiki' from the specified team and channel PARAMETERS -Channel Specify the channel id or display name of the channel to use. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Identity Specify the id or display name of the tab Type: TeamsTabPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTeamsTeam.html": {
    "href": "cmdlets/Get-PnPTeamsTeam.html",
    "title": "Get-PnPTeamsTeam | PnP PowerShell",
    "keywords": "Get-PnPTeamsTeam SYNOPSIS Required Permissions Microsoft Graph API : One of Group.Read.All, Group.ReadWrite.All Gets one Microsoft Teams Team or a list of Teams. SYNTAX Get-PnPTeamsTeam [-Identity <TeamsTeamPipeBind>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTeamsTeam Retrieves all the Microsoft Teams instances EXAMPLE 2 Get-PnPTeamsTeam -Identity \"PnP PowerShell\" Retrieves a specific Microsoft Teams instance using display name. EXAMPLE 3 Get-PnPTeamsTeam -Identity \"baba9192-55be-488a-9fb7-2e2e76edbef2\" Retrieves a specific Microsoft Teams instance using group id. PARAMETERS -Identity Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTeamsUser.html": {
    "href": "cmdlets/Get-PnPTeamsUser.html",
    "title": "Get-PnPTeamsUser | PnP PowerShell",
    "keywords": "Get-PnPTeamsUser SYNOPSIS Required Permissions Microsoft Graph API : One of Group.Read.All, Group.ReadWrite.All Microsoft Graph API : Directory.Read.All Returns owners, members or guests from a team. SYNTAX Get-PnPTeamsUser -Team <TeamsTeamPipeBind> [-Channel <TeamsChannelPipeBind>] [-Role <String>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTeamsUser -Team MyTeam Returns all owners, members or guests from the specified team. EXAMPLE 2 Get-PnPTeamsUser -Team MyTeam -Role Owner Returns all owners from the specified team. EXAMPLE 3 Get-PnPTeamsUser -Team MyTeam -Role Member Returns all members from the specified team. EXAMPLE 4 Get-PnPTeamsUser -Team MyTeam -Role Guest Returns all guests from the specified team. PARAMETERS -Channel Specify the channel id or display name of the channel to use. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Role Specify to filter on the role of the user Type: String Parameter Sets: (All) Accepted values: Owner, Member, Guest Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTemporarilyDisableAppBar.html": {
    "href": "cmdlets/Get-PnPTemporarilyDisableAppBar.html",
    "title": "Get-PnPTemporarilyDisableAppBar | PnP PowerShell",
    "keywords": "Get-PnPTemporarilyDisableAppBar SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns the disabled state of the SharePoint Online App Bar. It may take some time after changing this setting for the change to be reflected in SharePoint Online and for this cmdlet to return the updated value. Support for this may be dropped after October 31st, 2021 after which the SharePoint Online App Bar will become visible anyway. See [https://admin.microsoft.com/#/MessageCenter/:/messages/MC240066] for more information. SYNTAX Get-PnPTemporarilyDisableAppBar [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTemporarilyDisableAppBar Returns True if the the SharePoint Online App Bar is hidden or False if it is not. PARAMETERS RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenant.html": {
    "href": "cmdlets/Get-PnPTenant.html",
    "title": "Get-PnPTenant | PnP PowerShell",
    "keywords": "Get-PnPTenant SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns organization-level site collection properties SYNTAX Get-PnPTenant [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Returns organization-level site collection properties such as StorageQuota, StorageQuotaAllocated, ResourceQuota, ResourceQuotaAllocated, and SiteCreationMode. Currently, there are no parameters for this cmdlet. You must have the SharePoint Online admin or Global admin role to run the cmdlet. EXAMPLES EXAMPLE 1 Get-PnPTenant This example returns all tenant settings PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantAppCatalogUrl.html": {
    "href": "cmdlets/Get-PnPTenantAppCatalogUrl.html",
    "title": "Get-PnPTenantAppCatalogUrl | PnP PowerShell",
    "keywords": "Get-PnPTenantAppCatalogUrl SYNOPSIS Retrieves the url of the tenant scoped app catalog SYNTAX Get-PnPTenantAppCatalogUrl [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTenantAppCatalogUrl Returns the url of the tenant scoped app catalog site collection PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantCdnEnabled.html": {
    "href": "cmdlets/Get-PnPTenantCdnEnabled.html",
    "title": "Get-PnPTenantCdnEnabled | PnP PowerShell",
    "keywords": "Get-PnPTenantCdnEnabled SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Retrieves if the Office 365 Content Delivery Network has been enabled. SYNTAX Get-PnPTenantCdnEnabled -CdnType <SPOTenantCdnType> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Enables or disabled the public or private Office 365 Content Delivery Network (CDN). EXAMPLES EXAMPLE 1 Get-PnPTenantCdnEnabled -CdnType Public Returns the enabled status of the specified CDN PARAMETERS -CdnType The type of cdn to retrieve the origins from Type: SPOTenantCdnType Parameter Sets: (All) Accepted values: Public, Private Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantCdnOrigin.html": {
    "href": "cmdlets/Get-PnPTenantCdnOrigin.html",
    "title": "Get-PnPTenantCdnOrigin | PnP PowerShell",
    "keywords": "Get-PnPTenantCdnOrigin SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns the current registered origins from the public or private content delivery network (CDN). SYNTAX Get-PnPTenantCdnOrigin -CdnType <SPOTenantCdnType> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Returns the current registered origins from the public or private content delivery network (CDN). EXAMPLES EXAMPLE 1 Get-PnPTenantCdnOrigin -CdnType Public Returns the configured CDN origins for the specified CDN type PARAMETERS -CdnType The type of cdn to retrieve the origins from Type: SPOTenantCdnType Parameter Sets: (All) Accepted values: Public, Private Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantCdnPolicies.html": {
    "href": "cmdlets/Get-PnPTenantCdnPolicies.html",
    "title": "Get-PnPTenantCdnPolicies | PnP PowerShell",
    "keywords": "Get-PnPTenantCdnPolicies SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns the CDN Policies for the specified CDN (Public | Private). SYNTAX Get-PnPTenantCdnPolicies -CdnType <SPOTenantCdnType> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Retrieves the current CDN policies for the tenant for the specified CDN type. EXAMPLES EXAMPLE 1 Get-PnPTenantCdnPolicies -CdnType Public Returns the policies for the specified CDN type PARAMETERS -CdnType The type of cdn to retrieve the policies from Type: SPOTenantCdnType Parameter Sets: (All) Accepted values: Public, Private Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantDeletedSite.html": {
    "href": "cmdlets/Get-PnPTenantDeletedSite.html",
    "title": "Get-PnPTenantDeletedSite | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPTenantDeletedSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Fetches the site collections from the tenant recycle bin. SYNTAX Get-PnPTenantDeletedSite [-Identity] <String> [-Limit] [-IncludePersonalSite] [-IncludeOnlyPersonalSite] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Fetches the site collection's which are listed in your tenant's recycle bin. EXAMPLES EXAMPLE 1 Get-PnPTenantDeletedSite This will fetch the site collections from the recycle bin. EXAMPLE 2 Get-PnPTenantDeletedSite -Identity \"https://tenant.sharepoint.com/sites/contoso\" This will fetch the site collection with the url 'https://tenant.sharepoint.com/sites/contoso' from the recycle bin and display its properties. EXAMPLE 3 Get-PnPTenantDeletedSite -IncludePersonalSite This will fetch the site collections from the recycle bin including the personal sites and display its properties. EXAMPLE 4 Get-PnPTenantDeletedSite -IncludeOnlyPersonalSite This will fetch the site collections from the recycle bin which are personal sites and display its properties. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Limit Limit of the number of site collections to be retrieved from the recycle bin. Default is 200. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludePersonalSite If specified the task will also retrieve the personal sites from the recycle bin. Type: SwitchParameter Parameter Sets: (All, ParameterSetAllSites) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeOnlyPersonalSite If specified the task will only retrieve the personal sites from the recycle bin. Type: SwitchParameter Parameter Sets: (All, ParameterSetPersonalSitesOnly) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the full URL of the site collection that needs to be restored. Type: String Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantId.html": {
    "href": "cmdlets/Get-PnPTenantId.html",
    "title": "Get-PnPTenantId | PnP PowerShell",
    "keywords": "Get-PnPTenantId SYNOPSIS Returns the Tenant ID SYNTAX By TenantUrl Get-PnPTenantId -TenantUrl <String> [<CommonParameters>] By connection Get-PnPTenantId [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTenantId Returns the current Tenant Id. A valid connection with Connect-PnPOnline is required either as a current connection or by providing it using the -Connection parameter. EXAMPLE 2 Get-PnPTenantId -TenantUrl \"https://contoso.sharepoint.com\" Returns the Tenant ID for the specified tenant. Can be executed without an active PnP Connection. PARAMETERS -TenantUrl Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantInstance.html": {
    "href": "cmdlets/Get-PnPTenantInstance.html",
    "title": "Get-PnPTenantInstance | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPTenantInstance SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Retrieves the tenant instances in case of a Multi-GEO tenant. In case of a single geo (default) tenant it will return only one entry. SYNTAX Get-PnPTenantInstance DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTenantInstance Returns the tenant instances. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantRecycleBinItem.html": {
    "href": "cmdlets/Get-PnPTenantRecycleBinItem.html",
    "title": "Get-PnPTenantRecycleBinItem | PnP PowerShell",
    "keywords": "Get-PnPTenantRecycleBinItem SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns all modern and classic site collections in the tenant scoped recycle bin SYNTAX Get-PnPTenantRecycleBinItem [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This command will return all the items in the tenant recycle bin for the Office 365 tenant you are connected to. If you are not a SharePoint Tenant Admin connect to the site where you want to manage the recycle bin and use Get-PnPRecycleBinItem. EXAMPLES EXAMPLE 1 Get-PnPTenantRecycleBinItem Returns all modern and classic site collections in the tenant scoped recycle bin PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantSequence.html": {
    "href": "cmdlets/Get-PnPTenantSequence.html",
    "title": "Get-PnPTenantSequence | PnP PowerShell",
    "keywords": "Get-PnPTenantSequence SYNOPSIS Returns one ore more provisioning sequence object(s) from a tenant template SYNTAX Get-PnPTenantSequence -Template <ProvisioningHierarchy> [-Identity <ProvisioningSequencePipeBind>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTenantSequence -Template $myTemplateObject Returns all sequences from the specified tenant template EXAMPLE 2 Get-PnPTenantSequence -Template $myTemplateObject -Identity \"mysequence\" Returns the specified sequence from the specified tenant template PARAMETERS -Identity Optional Id of the sequence Type: ProvisioningSequencePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Template The template to retrieve the sequence from Type: ProvisioningHierarchy Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantSequenceSite.html": {
    "href": "cmdlets/Get-PnPTenantSequenceSite.html",
    "title": "Get-PnPTenantSequenceSite | PnP PowerShell",
    "keywords": "Get-PnPTenantSequenceSite SYNOPSIS Returns one ore more sites from a tenant template SYNTAX Get-PnPTenantSequenceSite -Sequence <ProvisioningSequence> [-Identity <ProvisioningSitePipeBind>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTenantSequenceSite -Sequence $mysequence Returns all sites from the specified sequence EXAMPLE 2 Get-PnPTenantSequenceSite -Sequence $mysequence -Identity 8058ea99-af7b-4bb7-b12a-78f93398041e Returns the specified site from the specified sequence PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Optional Id of the site Type: ProvisioningSitePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Sequence The sequence to retrieve the site from Type: ProvisioningSequence Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantServicePrincipal.html": {
    "href": "cmdlets/Get-PnPTenantServicePrincipal.html",
    "title": "Get-PnPTenantServicePrincipal | PnP PowerShell",
    "keywords": "Get-PnPTenantServicePrincipal SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns the current tenant's \"SharePoint Online Client\" service principal. SYNTAX Get-PnPTenantServicePrincipal [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Returns the current tenant's \"SharePoint Online Client\" service principal. EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantServicePrincipalPermissionGrants.html": {
    "href": "cmdlets/Get-PnPTenantServicePrincipalPermissionGrants.html",
    "title": "Get-PnPTenantServicePrincipalPermissionGrants | PnP PowerShell",
    "keywords": "Get-PnPTenantServicePrincipalPermissionGrants SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Gets the collection of permission grants for the \"SharePoint Online Client\" service principal SYNTAX Get-PnPTenantServicePrincipalPermissionGrants [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Gets the collection of permission grants for the \"SharePoint Online Client\" service principal. A permission grant contains the following properties: ClientId: The objectId of the service principal granted consent to impersonate the user when accessing the resource(represented by the resourceId). ConsentType: Whether consent was provided by the administrator on behalf of the organization or whether consent was provided by an individual.The possible values are \"AllPrincipals\" or \"Principal\". ObjectId: The unique identifier for the permission grant. Resource: The resource to which access has been granted (Coming soon) ResourceId: The objectId of the resource service principal to which access has been granted. Scope: The value of the scope claim that the resource application should expect in the OAuth 2.0 access token. EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantServicePrincipalPermissionRequests.html": {
    "href": "cmdlets/Get-PnPTenantServicePrincipalPermissionRequests.html",
    "title": "Get-PnPTenantServicePrincipalPermissionRequests | PnP PowerShell",
    "keywords": "Get-PnPTenantServicePrincipalPermissionRequests SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Gets the collection of permission requests for the \"SharePoint Online Client\" service principal SYNTAX Get-PnPTenantServicePrincipalPermissionRequests [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Gets the collection of permission requests for the \"SharePoint Online Client\" service principal. Permission request object A permission request contains the following properties: Id: The identifier of the request. Resource: The resource that the application requires access to. Scope: The value of the scope claim that the resource application should expect in the OAuth 2.0 access token. EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantSite.html": {
    "href": "cmdlets/Get-PnPTenantSite.html",
    "title": "Get-PnPTenantSite | PnP PowerShell",
    "keywords": "Get-PnPTenantSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Retrieves site collection information SYNTAX By Site Get-PnPTenantSite [-Identity] <string> [-Detailed] [-DisableSharingForNonOwnersStatus] [-Connection <PnPConnection>] [<CommonParameters>] All Sites Get-PnPTenantSite [-Template <string>] [-Detailed] [-IncludeOneDriveSites] [-GroupIdDefined <Boolean>] [-Filter <string>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This cmdlet allows for retrieval of site collection information through the SharePoint Online tenant site. It requires having SharePoint Online administrator access. EXAMPLES EXAMPLE 1 Get-PnPTenantSite Returns all site collections except the OneDrive for Business sites with basic information on them EXAMPLE 2 Get-PnPTenantSite -Detailed Returns all site collections except the OneDrive for Business sites with the full details on them EXAMPLE 3 Get-PnPTenantSite -IncludeOneDriveSites Returns all site collections including all OneDrive for Business sites EXAMPLE 4 Get-PnPTenantSite -IncludeOneDriveSites -Filter \"Url -like '-my.sharepoint.com/personal/'\" Returns only OneDrive for Business site collections EXAMPLE 5 Get-PnPTenantSite -Identity \"http://tenant.sharepoint.com/sites/projects\" Returns information of the site collection with the provided url EXAMPLE 6 Get-PnPTenantSite -Identity 7e8a6f56-92fe-4b22-9364-41799e579e8a Returns information of the site collection with the provided Id EXAMPLE 7 Get-PnPTenantSite -Template SITEPAGEPUBLISHING#0 Returns all Communication site collections EXAMPLE 8 Get-PnPTenantSite -Filter \"Url -like 'sales'\" Returns all site collections having 'sales' in their url EXAMPLE 9 Get-PnPTenantSite -GroupIdDefined $true Returns all site collections which have an underlying Microsoft 365 Group PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Detailed By default, not all returned attributes are populated. This switch populates all attributes. It can take several seconds to run. Without this, some attributes will show default values that may not be correct. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableSharingForNonOwnersStatus This parameter will include the status for non owners sharing on the returned object. By default the value for this property is null. Type: SwitchParameter Parameter Sets: By Site Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Filter Specifies the script block of the server-side filter to apply. See https://docs.microsoft.com/powershell/module/sharepoint-online/get-sposite?view=sharepoint-ps#:~:text=SharePoint%20Online-,%2DFilter,-Specifies%20the%20script . Type: String Parameter Sets: All sites Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -GroupIdDefined If specified allows you to filter on sites that have an underlying Microsoft 365 group defined. Type: Boolean Parameter Sets: All sites Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeOneDriveSites By default, the OneDrives are not returned. This switch includes all OneDrives. Type: SwitchParameter Parameter Sets: All Sites Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Template By default, all sites will be returned. Specify a template value alike \"STS#0\" here to filter on the template Type: String Parameter Sets: All Sites Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The URL or Id of the site collection. Requesting a site collection by its Id only works for modern SharePoint Online site collections. Type: String Parameter Sets: By Site Aliases: Url Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantSyncClientRestriction.html": {
    "href": "cmdlets/Get-PnPTenantSyncClientRestriction.html",
    "title": "Get-PnPTenantSyncClientRestriction | PnP PowerShell",
    "keywords": "Get-PnPTenantSyncClientRestriction SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns organization-level OneDrive synchronization restriction settings SYNTAX Get-PnPTenantSyncClientRestriction [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Returns organization-level OneDrive synchronization restriction properties such as BlockMacSync, OptOutOfGrooveBlock, and TenantRestrictionEnabled. Currently, there are no parameters for this cmdlet. You must have the SharePoint Online admin or Global admin role to run the cmdlet. EXAMPLES EXAMPLE 1 Get-PnPTenantSyncClientRestriction This example returns all tenant OneDrive synchronization restriction settings PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantTemplate.html": {
    "href": "cmdlets/Get-PnPTenantTemplate.html",
    "title": "Get-PnPTenantTemplate | PnP PowerShell",
    "keywords": "Get-PnPTenantTemplate SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Generates a provisioning tenant template from a site. If the site is a hubsite any connected site will be included. SYNTAX Extract a template to a file Get-PnPTenantTemplate [-SiteUrl <String>] [-Out <String>] [-Force] [-Configuration <ExtractConfigurationPipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] Extract a template as an object Get-PnPTenantTemplate [-SiteUrl <String>] [-AsInstance] [-Configuration <ExtractConfigurationPipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTenantTemplate -Out tenanttemplate.xml Extracts a tenant template EXAMPLE 2 Get-PnPTenantTemplate -Out tenanttemplate.xml -SiteUrl https://m365x123456.sharepoint.com/sites/HomeSite Extracts a tenant template for the site https://m365x123456.sharepoint.com/sites/HomeSite and places the schema XML into the file \"tenanttemplate.xml\". EXAMPLE 3 Get-PnPTenantTemplate -Out tenanttemplate.xml -SiteUrl https://m365x123456.sharepoint.com/sites/HomeSite -Force Extracts a tenant template for the site https://m365x123456.sharepoint.com/sites/HomeSite and places the schema XML into the file \"tenanttemplate.xml\". The xml file will be overwritten if it already exists. PARAMETERS -AsInstance Returns the template as an in-memory object, which is an instance of the ProvisioningHierarchy type of the PnP Core Component. It cannot be used together with the -Out parameter. Type: SwitchParameter Parameter Sets: Extract a template as an object Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Configuration Specify a JSON configuration file to configure the extraction progress. Type: ExtractConfigurationPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Overwrites the output file if it exists. Type: SwitchParameter Parameter Sets: Extract a template to a file Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Out Filename to write to, optionally including full path Type: String Parameter Sets: Extract a template to a file Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteUrl Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTenantTheme.html": {
    "href": "cmdlets/Get-PnPTenantTheme.html",
    "title": "Get-PnPTenantTheme | PnP PowerShell",
    "keywords": "Get-PnPTenantTheme SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns all or a specific theme SYNTAX Get-PnPTenantTheme [[-Name] <String>] [-AsJson] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Returns all or a specific tenant theme. EXAMPLES EXAMPLE 1 Get-PnPTenantTheme Returns all themes. EXAMPLE 2 Get-PnPTenantTheme -Name \"MyCompanyTheme\" Returns the specified theme. EXAMPLE 3 Get-PnPTenantTheme -Name \"MyCompanyTheme\" -AsJson Returns the specified theme as json. PARAMETERS -AsJson The theme is returned in json format. Type: SwitchParameter Parameter Sets: (All) Required: False Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The name of the theme to retrieve. Type: String Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTerm.html": {
    "href": "cmdlets/Get-PnPTerm.html",
    "title": "Get-PnPTerm | PnP PowerShell",
    "keywords": "Get-PnPTerm SYNOPSIS Returns a Term Store Term. SYNTAX By Term Id Get-PnPTerm -Identity <Guid> [-TermStore <Guid>] [-IncludeChildTerms] [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] By Term Name Get-PnPTerm -Identity <Name> -TermSet <Guid|Name> -TermGroup <Guid|Name> [-TermStore <Guid>] [-Recursive] [-IncludeChildTerms][-IncludeDeprecated] [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] DESCRIPTION Retries a Term Store Term. EXAMPLES EXAMPLE 1 Get-PnPTerm -TermSet \"Departments\" -TermGroup \"Corporate\" Returns all term in the termset \"Departments\" which is in the group \"Corporate\" from the site collection termstore EXAMPLE 2 Get-PnPTerm -Identity \"Finance\" -TermSet \"Departments\" -TermGroup \"Corporate\" Returns the term named \"Finance\" in the termset \"Departments\" from the termgroup called \"Corporate\" from the site collection termstore EXAMPLE 3 Get-PnPTerm -Identity ab2af486-e097-4b4a-9444-527b251f1f8d -TermSet \"Departments\" -TermGroup \"Corporate\" Returns the term named with the given id, from the \"Departments\" termset in a term group called \"Corporate\" from the site collection termstore EXAMPLE 4 Get-PnPTerm -Identity \"Small Finance\" -TermSet \"Departments\" -TermGroup \"Corporate\" -Recursive Returns the term named \"Small Finance\", from the \"Departments\" termset in a term group called \"Corporate\" from the site collection termstore even if it is a subterm below \"Finance\" EXAMPLE 5 $term = Get-PnPTerm -Identity \"Small Finance\" -TermSet \"Departments\" -TermGroup \"Corporate\" -Includes Labels $term.Labels Returns all the localized labels for the term named \"Small Finance\", from the \"Departments\" termset in a term group called \"Corporate\" EXAMPLE 6 Get-PnPTerm -Identity \"Small Finance\" -TermSet \"Departments\" -TermGroup \"Corporate\" -Recursive -IncludeDeprecated Returns the deprecated term named \"Small Finance\", from the \"Departments\" termset in a term group called \"Corporate\" from the site collection termstore even if it is a subterm below \"Finance\" PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Id or Name of a Term Type: GenericObjectNameIdPipeBind<Microsoft.SharePoint.Client.Taxonomy.Term> Parameter Sets: All Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeChildTerms Includes the hierarchy of child terms if available Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Recursive Find the first term recursively matching the label in a term hierarchy. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermGroup Name of the termgroup to check. Type: TermGroupPipeBind Parameter Sets: By Termset Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermSet Name of the termset to check. Type: TaxonomyItemPipeBind<TermSet> Parameter Sets: By Termset Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermStore Term store to use; if not specified the default term store is used. Type: GenericObjectNameIdPipeBind<TermStore> Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeDeprecated Includes the deprecated terms if available. Type: SwitchParameter Parameter Sets: By Term name Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTermGroup.html": {
    "href": "cmdlets/Get-PnPTermGroup.html",
    "title": "Get-PnPTermGroup | PnP PowerShell",
    "keywords": "Get-PnPTermGroup SYNOPSIS Returns a taxonomy term group SYNTAX Get-PnPTermGroup [-Identity <TaxonomyTermGroupPipeBind>] [-TermStore <TaxonomyTermStorePipeBind>] [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTermGroup Returns all Term Groups in the site collection termstore EXAMPLE 2 Get-PnPTermGroup -Identity \"Departments\" Returns the termgroup named \"Departments\" from the site collection termstore EXAMPLE 3 Get-PnPTermGroup -Identity ab2af486-e097-4b4a-9444-527b251f1f8d Returns the termgroup with the given ID from the site collection termstore PARAMETERS -Identity Name of the taxonomy term group to retrieve. Type: TaxonomyTermGroupPipeBind Parameter Sets: (All) Aliases: GroupName Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermStore Term store to use; if not specified the default term store is used. Type: TaxonomyTermStorePipeBind Parameter Sets: (All) Aliases: TermStoreName Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTermLabel.html": {
    "href": "cmdlets/Get-PnPTermLabel.html",
    "title": "Get-PnPTermLabel | PnP PowerShell",
    "keywords": "Get-PnPTermLabel SYNOPSIS Returns all or a specific translation label for a term. SYNTAX By Term Id Get-PnPTermLabel -Term <Guid> [-Lcid <Int32>] [-TermStore <TaxonomyTermStorePipeBind>] [<CommonParameters>] By Term Name Get-PnPTermLabel -Term <String> [-Lcid <Int32>] -TermSet <TaxonomyTermSetPipeBind> -TermGroup <TaxonomyTermGroupPipeBind> [-TermStore <TaxonomyTermStorePipeBind>] [<CommonParameters>] DESCRIPTION This cmdlets allows to retrieve all or a specific translation label for a term EXAMPLES Example 1 Get-PnPTermLabel -Term af8601d6-d925-46dd-af7b-4a58515ffd83 Returns all translation labels for a term Example 2 Get-PnPTermLabel -Term af8601d6-d925-46dd-af7b-4a58515ffd83 -Lcid 1033 Returns all translation labels for a term for a specific language Example 3 Get-PnPTermLabel -Term \"Marketing\" -TermSet \"Departments\" -TermGroup \"Corporate\" Returns all translation labels for a term PARAMETERS -Lcid Specify the codepage value for a language, for instance 1033 for English. Type: Int32 Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Term The term to retieve the labels for Type: Guid Parameter Sets: By Term Id Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False Type: String Parameter Sets: By Termset Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermGroup The TermGroup containing the termset, required when refering to the term by name. Type: TaxonomyTermGroupPipeBind Parameter Sets: By Termset Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermSet The TermSet to containing the term, required when refering to the term by name. Type: TaxonomyTermSetPipeBind Parameter Sets: By Termset Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermStore Term store to use; if not specified the default term store is used. Type: TaxonomyTermStorePipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTermSet.html": {
    "href": "cmdlets/Get-PnPTermSet.html",
    "title": "Get-PnPTermSet | PnP PowerShell",
    "keywords": "Get-PnPTermSet SYNOPSIS Returns a taxonomy term set SYNTAX Get-PnPTermSet [-Identity <TaxonomyTermSetPipeBind>] [-TermGroup] <TaxonomyTermGroupPipeBind> [-TermStore <TaxonomyTermStorePipeBind>] [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] DESCRIPTION This cmdlet returns a termset from the taxonomy store. EXAMPLES EXAMPLE 1 Get-PnPTermSet -TermGroup \"Corporate\" Returns all termsets in the group \"Corporate\" from the site collection termstore EXAMPLE 2 Get-PnPTermSet -Identity \"Departments\" -TermGroup \"Corporate\" Returns the termset named \"Departments\" from the termgroup called \"Corporate\" from the site collection termstore EXAMPLE 3 Get-PnPTermSet -Identity ab2af486-e097-4b4a-9444-527b251f1f8d -TermGroup \"Corporate Returns the termset with the given id from the termgroup called \"Corporate\" from the site collection termstore PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Id or Name of a termset Type: TaxonomyTermSetPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermGroup Name of the term group to check. Type: TaxonomyTermGroupPipeBind Parameter Sets: (All) Aliases: Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermStore Term store to use; if not specified the default term store is used. Type: TaxonomyTermStorePipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTheme.html": {
    "href": "cmdlets/Get-PnPTheme.html",
    "title": "Get-PnPTheme | PnP PowerShell",
    "keywords": "Get-PnPTheme SYNOPSIS Returns the current theme/composed look of the current web. SYNTAX Get-PnPTheme [-DetectCurrentComposedLook] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPTheme Returns the current composed look of the current web. EXAMPLE 2 Get-PnPTheme -DetectCurrentComposedLook Returns the current composed look of the current web, and will try to detect the currently applied composed look based upon the actual site. Without this switch the cmdlet will first check for the presence of a property bag variable called _PnP_SiteTemplateComposedLookInfo that contains composed look information when applied through the provisioning engine or the Set-PnPTheme cmdlet. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DetectCurrentComposedLook Specify this switch to not use the PnP Provisioning engine based composed look information but try to detect the current composed look as is. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPTimeZoneId.html": {
    "href": "cmdlets/Get-PnPTimeZoneId.html",
    "title": "Get-PnPTimeZoneId | PnP PowerShell",
    "keywords": "Get-PnPTimeZoneId SYNOPSIS Returns a time zone ID SYNTAX Get-PnPTimeZoneId [[-Match] <String>] [<CommonParameters>] DESCRIPTION In order to create a new classic site you need to specify the timezone this site will use. Use the cmdlet to retrieve a list of possible values. EXAMPLES EXAMPLE 1 Get-PnPTimeZoneId This will return all time zone IDs in use by Office 365. EXAMPLE 2 Get-PnPTimeZoneId -Match Stockholm This will return the time zone IDs for Stockholm PARAMETERS -Match A string to search for like 'Stockholm' Type: String Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPUnifiedAuditLog.html": {
    "href": "cmdlets/Get-PnPUnifiedAuditLog.html",
    "title": "Get-PnPUnifiedAuditLog | PnP PowerShell",
    "keywords": "Get-PnPUnifiedAuditLog SYNOPSIS Required Permissions Microsoft Office 365 Management API: ActivityFeed.Read Gets unified audit logs from the Office 365 Management API. Requires the Azure Active Directory application permission 'ActivityFeed.Read'. SYNTAX Get-PnPUnifiedAuditLog [-ContentType <AuditContentType>] [-StartTime <DateTime>] [-EndTime <DateTime>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPUnifiedAuditLog -ContentType SharePoint -StartTime (Get-Date).AddDays(-2) -EndTime (Get-Date).AddDays(-1) Retrieves the audit logs of SharePoint happening between the current time yesterday and the current time the day before yesterday PARAMETERS -ContentType Content type of logs to be retrieved, should be one of the following: AzureActiveDirectory, Exchange, SharePoint, General, DLP. Type: AuditContentType Parameter Sets: (All) Accepted values: AzureActiveDirectory, Exchange, SharePoint, General, DLP Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EndTime End time of logs to be retrieved. Start time and end time must both be specified (or both omitted) and must be less than or equal to 24 hours apart. Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StartTime Start time of logs to be retrieved. Start time and end time must both be specified (or both omitted) and must be less than or equal to 24 hours apart, with the start time prior to end time and start time no more than 7 days in the past. Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPUPABulkImportStatus.html": {
    "href": "cmdlets/Get-PnPUPABulkImportStatus.html",
    "title": "Get-PnPUPABulkImportStatus | PnP PowerShell",
    "keywords": "Get-PnPUPABulkImportStatus SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Get user profile bulk import status. SYNTAX Get-PnPUPABulkImportStatus [-JobId <Guid>] [-IncludeErrorDetails] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Retrieve information about the status of submitted user profile bulk upload jobs. EXAMPLES EXAMPLE 1 Get-PnPUPABulkImportStatus This will list the status of all submitted user profile bulk import jobs. EXAMPLE 2 Get-PnPUPABulkImportStatus -IncludeErrorDetails This will list the status of all submitted user profile bulk import jobs, and if it contains an error it will include the error log messages if present. EXAMPLE 3 Get-PnPUPABulkImportStatus -JobId <guid> This will list the status for the specified import job. EXAMPLE 4 Get-PnPUPABulkImportStatus -JobId <guid> -IncludeErrorDetails This will list the status for the specified import job, and if it contains an error it will include the error log messages if present. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeErrorDetails Include error log details Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -JobId The instance id of the job Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPUser.html": {
    "href": "cmdlets/Get-PnPUser.html",
    "title": "Get-PnPUser | PnP PowerShell",
    "keywords": "Get-PnPUser SYNOPSIS Returns site users of current web SYNTAX Identity based request (Default) Get-PnPUser [-Identity <UserPipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] With rights assigned Get-PnPUser [-WithRightsAssigned] [-Connection <PnPConnection>] [<CommonParameters>] With rights assigned detailed Get-PnPUser [-WithRightsAssignedDetailed] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This command will return all users that exist in the current site collection's User Information List, optionally identifying their current permissions to this site EXAMPLES EXAMPLE 1 Get-PnPUser Returns all users from the User Information List of the current site collection regardless if they currently have rights to access the current site EXAMPLE 2 Get-PnPUser -Identity 23 Returns the user with Id 23 from the User Information List of the current site collection EXAMPLE 3 Get-PnPUser -Identity \"i:0#.f|membership|user@tenant.onmicrosoft.com\" Returns the user with LoginName i:0#.f|membership|user@tenant.onmicrosoft.com from the User Information List of the current site collection EXAMPLE 4 Get-PnPUser | ? Email -eq \"user@tenant.onmicrosoft.com\" Returns the user with e-mail address user@tenant.onmicrosoft.com from the User Information List of the current site collection EXAMPLE 5 Get-PnPUser -WithRightsAssigned Returns only those users from the User Information List of the current site collection who currently have any kind of access rights given either directly to the user or Active Directory Group or given to the user or Active Directory Group via membership of a SharePoint Group to the current site EXAMPLE 6 Get-PnPUser -WithRightsAssigned -Web subsite1 Returns only those users from the User Information List of the current site collection who currently have any kind of access rights given either directly to the user or Active Directory Group or given to the user or Active Directory Group via membership of a SharePoint Group to subsite 'subsite1' EXAMPLE 7 Get-PnPUser -WithRightsAssignedDetailed Returns all users who have been granted explicit access to the current site, lists and listitems PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity User ID or login name Type: UserPipeBind Parameter Sets: Identity based request Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -WithRightsAssigned If provided, only users that currently have any kinds of access rights assigned to the current site collection will be returned. Otherwise all users, even those who previously had rights assigned, but not anymore at the moment, will be returned as the information is pulled from the User Information List. Only works if you don't provide an -Identity. Type: SwitchParameter Parameter Sets: With rights assigned Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WithRightsAssignedDetailed If provided, only users that currently have any specific kind of access rights assigned to the current site, lists or listitems/documents will be returned. Otherwise all users, even those who previously had rights assigned, but not anymore at the moment, will be returned as the information is pulled from the User Information List. Only works if you don't provide an -Identity. Type: SwitchParameter Parameter Sets: With rights assigned detailed Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPUserOneDriveQuota.html": {
    "href": "cmdlets/Get-PnPUserOneDriveQuota.html",
    "title": "Get-PnPUserOneDriveQuota | PnP PowerShell",
    "keywords": "Get-PnPUserOneDriveQuota SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Retrieves the current quota set on the OneDrive for Business site for a specific user in bytes. SYNTAX Get-PnPUserOneDriveQuota [-Account] <String> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This command allows you to request the quota set on the OneDrive for Business site of a specific user. EXAMPLES EXAMPLE 1 Get-PnPUserOneDriveQuota -Account 'user@domain.com' Returns the quota set on the OneDrive for Business site for the specified user in bytes EXAMPLE 2 (Get-PnPUserOneDriveQuota -Account 'user@domain.com') / 1gb Returns the quota set on the OneDrive for Business site for the specified user in gigabytes PARAMETERS -Account The account of the user, formatted either as a login name, or as a claims identity, e.g. i:0#.f|membership|user@domain.com Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPUserProfileProperty.html": {
    "href": "cmdlets/Get-PnPUserProfileProperty.html",
    "title": "Get-PnPUserProfileProperty | PnP PowerShell",
    "keywords": "Get-PnPUserProfileProperty SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site You must connect to the tenant admin website (https://: -admin.sharepoint.com) with Connect-PnPOnline in order to use this cmdlet. SYNTAX Get-PnPUserProfileProperty [-Account] <String[]> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Requires a connection to a SharePoint Tenant Admin site. EXAMPLES EXAMPLE 1 Get-PnPUserProfileProperty -Account 'user@domain.com' Returns the profile properties for the specified user EXAMPLE 2 Get-PnPUserProfileProperty -Account 'user@domain.com','user2@domain.com' Returns the profile properties for the specified users PARAMETERS -Account The account of the user, formatted either as a login name, or as a claims identity, e.g. i:0#.f|membership|user@domain.com Type: String[] Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPView.html": {
    "href": "cmdlets/Get-PnPView.html",
    "title": "Get-PnPView | PnP PowerShell",
    "keywords": "Get-PnPView SYNOPSIS Returns one or all views from a list SYNTAX Get-PnPView [-List] <ListPipeBind> [-Identity <ViewPipeBind>] [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPView -List \"Demo List\" Returns all views associated from the specified list EXAMPLE 2 Get-PnPView -List \"Demo List\" -Identity \"Demo View\" Returns the view called \"Demo View\" from the specified list EXAMPLE 3 Get-PnPView -List \"Demo List\" -Identity \"5275148a-6c6c-43d8-999a-d2186989a661\" Returns the view with the specified ID from the specified list PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID or name of the view Type: ViewPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPVivaConnectionsDashboardACE.html": {
    "href": "cmdlets/Get-PnPVivaConnectionsDashboardACE.html",
    "title": "Get-PnPVivaConnectionsDashboardACE | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPVivaConnectionsDashboardACE SYNOPSIS Returns the Adaptive card extensions from the Viva connections dashboard page. This requires that you connect to a SharePoint Home site and have configured the Viva connections page. SYNTAX Get-PnPVivaConnectionsDashboardACE [-Identity <GUID>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPVivaConnectionsDashboardACE Returns all the adaptive card extensions present in the Viva Connections dashboard page. EXAMPLE 2 Get-PnPVivaConnectionsDashboardACE -Identity \"58108715-185e-4214-8786-01218e7ab9ef\" Returns the adaptive card extensions with specified Instance Id from the Viva Connections dashboard page. PARAMETERS -Identity The instance Id of the Adaptive Card extension present on the Viva connections dashboard page. You can retrieve the value for this parameter by executing Get-PnPVivaConnectionsDashboardACE cmdlet Type: GUID Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPWeb.html": {
    "href": "cmdlets/Get-PnPWeb.html",
    "title": "Get-PnPWeb | PnP PowerShell",
    "keywords": "Get-PnPWeb SYNOPSIS Returns the current web object SYNTAX Get-PnPWeb [[-Identity] <WebPipeBind>] [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPWeb This will return the current web PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The guid of the web or web object Type: WebPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPWebHeader.html": {
    "href": "cmdlets/Get-PnPWebHeader.html",
    "title": "Get-PnPWebHeader | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Get-PnPWebHeader SYNOPSIS Retrieves the current configuration regarding the \"Change the look\" Header of the current site SYNTAX Get-PnPWebHeader [-SiteLogoUrl <string>] [-HeaderLayout <HeaderLayoutType>] [-HeaderEmphasis <SPVariantThemeType>] [-HideTitleInHeader] [-HeaderBackgroundImageUrl <string>] [-HeaderBackgroundImageFocalX <double>] [-HeaderBackgroundImageFocalY <double>] [-LogoAlignment <LogoAlignment>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Through this cmdlet the current configuration of the various options offered through \"Change the look\" Header can be retrieved. EXAMPLES EXAMPLE 1 Get-PnPWebHeader Retrieves all of the available configuration PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPWebhookSubscriptions.html": {
    "href": "cmdlets/Get-PnPWebhookSubscriptions.html",
    "title": "Get-PnPWebhookSubscriptions | PnP PowerShell",
    "keywords": "Get-PnPWebhookSubscriptions SYNOPSIS Gets all the Webhook subscriptions of the resource SYNTAX Get-PnPWebhookSubscriptions [-List <ListPipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPWebhookSubscriptions -List MyList Gets all Webhook subscriptions of the list MyList EXAMPLE 2 Get-PnPList | Get-PnPWebhookSubscriptions Gets all Webhook subscriptions of the all the lists PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list object or name to get the Webhook subscriptions from Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPWebPart.html": {
    "href": "cmdlets/Get-PnPWebPart.html",
    "title": "Get-PnPWebPart | PnP PowerShell",
    "keywords": "Get-PnPWebPart SYNOPSIS Returns a web part definition object SYNTAX Get-PnPWebPart -ServerRelativePageUrl <String> [-Identity <WebPartPipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Allows retrieval of the definition of a webpart on a classic SharePoint Online page. EXAMPLES EXAMPLE 1 Get-PnPWebPart -ServerRelativePageUrl \"/sites/demo/sitepages/home.aspx\" Returns all webparts defined on the given classic page. EXAMPLE 2 Get-PnPWebPart -ServerRelativePageUrl \"/sites/demo/sitepages/home.aspx\" -Identity a2875399-d6ff-43a0-96da-be6ae5875f82 Returns a specific web part defined on the given classic page. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The identity of the web part, this can be the web part guid or a web part object Type: WebPartPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -ServerRelativePageUrl Full server relative URL of the web part page, e.g. /sites/mysite/sitepages/home.aspx Type: String Parameter Sets: (All) Aliases: PageUrl Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPWebPartProperty.html": {
    "href": "cmdlets/Get-PnPWebPartProperty.html",
    "title": "Get-PnPWebPartProperty | PnP PowerShell",
    "keywords": "Get-PnPWebPartProperty SYNOPSIS Returns a web part property SYNTAX Get-PnPWebPartProperty -ServerRelativePageUrl <String> -Identity <Guid> [-Key <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPWebPartProperty -ServerRelativePageUrl /sites/demo/sitepages/home.aspx -Identity ccd2c98a-c9ae-483b-ae72-19992d583914 Returns all properties of the web part. EXAMPLE 2 Get-PnPWebPartProperty -ServerRelativePageUrl /sites/demo/sitepages/home.aspx -Identity ccd2c98a-c9ae-483b-ae72-19992d583914 -Key \"Title\" Returns the title property of the web part. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The id of the web part Type: Guid Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Key Name of a single property to be returned Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativePageUrl Full server relative URL of the web part page, e.g. /sites/mysite/sitepages/home.aspx Type: String Parameter Sets: (All) Aliases: PageUrl Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPWebPartXml.html": {
    "href": "cmdlets/Get-PnPWebPartXml.html",
    "title": "Get-PnPWebPartXml | PnP PowerShell",
    "keywords": "Get-PnPWebPartXml SYNOPSIS Returns the web part XML of a web part registered on a site SYNTAX Get-PnPWebPartXml -ServerRelativePageUrl <String> -Identity <WebPartPipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPWebPartXml -ServerRelativePageUrl \"/sites/demo/sitepages/home.aspx\" -Identity a2875399-d6ff-43a0-96da-be6ae5875f82 Returns the web part XML for a given web part on a page. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Id or title of the web part. Use Get-PnPWebPart to retrieve all web part Ids Type: WebPartPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativePageUrl Full server relative url of the web part page, e.g. /sites/mysite/sitepages/home.aspx Type: String Parameter Sets: (All) Aliases: PageUrl Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Get-PnPWebTemplates.html": {
    "href": "cmdlets/Get-PnPWebTemplates.html",
    "title": "Get-PnPWebTemplates | PnP PowerShell",
    "keywords": "Get-PnPWebTemplates SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Returns the available classic web templates SYNTAX Get-PnPWebTemplates [-Lcid <UInt32>] [-CompatibilityLevel <Int32>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Will list all available classic templates one can use to create a site. Modern templates will not be returned. EXAMPLES EXAMPLE 1 Get-PnPWebTemplates EXAMPLE 2 Get-PnPWebTemplates -LCID 1033 Returns all webtemplates for the Locale with ID 1033 (English) EXAMPLE 3 Get-PnPWebTemplates -CompatibilityLevel 15 Returns all webtemplates for the compatibility level 15 PARAMETERS -CompatibilityLevel The compatibily level of SharePoint where 14 is SharePoint 2010, 15 is SharePoint 2013 and 16 is SharePoint 2016 and later including SharePoint Online Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Lcid The language ID. For instance: 1033 for English. For more information, see Locale IDs supported by SharePoint at https://github.com/pnp/PnP-PowerShell/wiki/Supported-LCIDs-by-SharePoint . To get the list of supported languages on a SharePoint environment use: Get-PnPAvailableLanguage. Type: UInt32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Locale IDs"
  },
  "cmdlets/Get-PnPWikiPageContent.html": {
    "href": "cmdlets/Get-PnPWikiPageContent.html",
    "title": "Get-PnPWikiPageContent | PnP PowerShell",
    "keywords": "Get-PnPWikiPageContent SYNOPSIS Gets the contents/source of a wiki page SYNTAX Get-PnPWikiPageContent [-ServerRelativePageUrl] <String> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Get-PnPWikiPageContent -PageUrl '/sites/demo1/pages/wikipage.aspx' Gets the content of the page '/sites/demo1/pages/wikipage.aspx' PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativePageUrl The server relative URL for the wiki page Type: String Parameter Sets: (All) Aliases: PageUrl Required: True Position: 0 Default value: None Accept pipeline input: True (ByPropertyName, ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Grant-PnPAzureADAppSitePermission.html": {
    "href": "cmdlets/Grant-PnPAzureADAppSitePermission.html",
    "title": "Grant-PnPAzureADAppSitePermission | PnP PowerShell",
    "keywords": "Grant-PnPAzureADAppSitePermission SYNOPSIS Required Permissions Microsoft Graph API: Sites.FullControl.All Adds permissions for a given Azure Active Directory application registration SYNTAX Grant-PnPAzureADAppSitePermission -AppId <Guid> -DisplayName <String> -Permissions <Read|Write> [-Site <SitePipeBind>] DESCRIPTION This cmdlet adds permissions for a given Azure Active Directory application registration in a site collection. It is used in conjunction with the Azure Active Directory SharePoint application permission Sites.Selected. Notice that this cmdlet allows for fewer permissions compared for when updating rights through Set-PnPAzureADAppSitePermission . If you wish to i.e. assign FullControl permissions, you need to add read or write permissions through this cmdlet first and then update it to FullControl. EXAMPLES EXAMPLE 1 Grant-PnPAzureADAppSitePermission -AppId \"aa37b89e-75a7-47e3-bdb6-b763851c61b6\" -DisplayName \"TestApp\" -Permissions Read Adds permissions for the Azure Active Directory application registration with the specific application id and sets the rights to 'Read' access for the currently connected to site collection EXAMPLE 2 Grant-PnPAzureADAppSitePermission -AppId \"aa37b89e-75a7-47e3-bdb6-b763851c61b6\" -DisplayName \"TestApp\" -Permissions Write -Site https://contoso.sharepoint.com/sites/projects Adds permissions for the Azure Active Directory application registration with the specific application id and sets the rights to 'Write' access for the site collection at the provided URL PARAMETERS -AppId If specified the permission with that id specified will be retrieved Type: Guid Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName The display name to set for the application permission you're adding. Only for visual reference purposes, does not need to match the name of the application in Azure Active Directory. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Permissions Specifies the permissions to set for the Azure Active Directory application registration which can either be Read or Write. Use Set-PnPAzureADAppSitePermission after initially adding these permissions to update it to Manage or FullControl permissions. Type: String Parameter Sets: (All) Required: True Accepted values: Read, Write Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site Optional url to to a site to set the permissions for. Defaults to the current site if not provided. Type: SitePipeBind Parameter Sets: (All) Required: True Position: Named Default value: Currently connected to site Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Grant-PnPHubSiteRights.html": {
    "href": "cmdlets/Grant-PnPHubSiteRights.html",
    "title": "Grant-PnPHubSiteRights | PnP PowerShell",
    "keywords": "Grant-PnPHubSiteRights SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Grant additional permissions to the permissions already in place to associate sites to Hub Sites for one or more specific users SYNTAX Grant-PnPHubSiteRights [-Identity] <HubSitePipeBind> -Principals <String[]> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Grant-PnPHubSiteRights -Identity \"https://contoso.sharepoint.com/sites/hubsite\" -Principals \"myuser@mydomain.com\",\"myotheruser@mydomain.com\" This example shows how to grant rights to myuser and myotheruser to associate their sites with the provided Hub Site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify hub site url Type: HubSitePipeBind Parameter Sets: (All) Aliases: HubSite Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Principals Specify user(s) login name i.e user@company.com Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Grant-PnPSiteDesignRights.html": {
    "href": "cmdlets/Grant-PnPSiteDesignRights.html",
    "title": "Grant-PnPSiteDesignRights | PnP PowerShell",
    "keywords": "Grant-PnPSiteDesignRights SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Grants the specified principals rights to use the site design. SYNTAX Grant-PnPSiteDesignRights [-Identity] <TenantSiteDesignPipeBind> -Principals <String[]> [-Rights <TenantSiteDesignPrincipalRights>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Grant-PnPSiteDesignRights -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd -Principals \"myuser@mydomain.com\",\"myotheruser@mydomain.com\" Grants the specified principals View rights on the site design specified EXAMPLE 2 Get-PnPSiteDesign -Title \"MySiteDesign\" -SiteScriptIds 438548fd-60dd-42cf-b843-2db506c8e259 -WebTemplate TeamSite | Grant-PnPSiteDesignRights -Principals \"myuser@mydomain.com\",\"myotheruser@mydomain.com\" Grants the specified principals View rights on the site design specified PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The site design to use. Type: TenantSiteDesignPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Principals One or more principals to grant rights to. Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Rights The rights to set. Defaults to 'View' Type: TenantSiteDesignPrincipalRights Parameter Sets: (All) Accepted values: None, View Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Grant-PnPTenantServicePrincipalPermission.html": {
    "href": "cmdlets/Grant-PnPTenantServicePrincipalPermission.html",
    "title": "Grant-PnPTenantServicePrincipalPermission | PnP PowerShell",
    "keywords": "Grant-PnPTenantServicePrincipalPermission SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Microsoft Graph API : Directory.ReadWrite.All Explicitly grants a specified permission to the \"SharePoint Online Client Extensibility Web Application Principal\" service principal for SPFx solutions. SYNTAX Grant-PnPTenantServicePrincipalPermission -Scope <String> [-Resource <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Grant-PnPTenantServicePrincipalPermission -Scope \"Group.Read.All\" This will explicitly grant the Group.Read.All permission on the Microsoft Graph resource PARAMETERS -Scope The scope to grant the permission for Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Resource The resource to grant the permission for. Defaults to \"Microsoft Graph\" Type: String Parameter Sets: (All) Required: True Position: Named Default value: Microsoft Graph Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Import-PnPTaxonomy.html": {
    "href": "cmdlets/Import-PnPTaxonomy.html",
    "title": "Import-PnPTaxonomy | PnP PowerShell",
    "keywords": "Import-PnPTaxonomy SYNOPSIS Imports a taxonomy from either a string array or a file SYNTAX Direct Import-PnPTaxonomy [-Terms <String[]>] [-Lcid <Int32>] [-TermStoreName <String>] [-Delimiter <String>] [-SynchronizeDeletions] [-Connection <PnPConnection>] [<CommonParameters>] File Import-PnPTaxonomy -Path <String> [-Lcid <Int32>] [-TermStoreName <String>] [-Delimiter <String>] [-SynchronizeDeletions] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Import-PnPTaxonomy -Terms 'Company|Locations|Stockholm' Creates a new termgroup, 'Company', a termset 'Locations' and a term 'Stockholm' EXAMPLE 2 Import-PnPTaxonomy -Terms 'Company|Locations|Stockholm|Central','Company|Locations|Stockholm|North' Creates a new termgroup, 'Company', a termset 'Locations', a term 'Stockholm' and two subterms: 'Central', and 'North' EXAMPLE 3 Import-PnPTaxonomy -Path ./mytaxonomyterms.txt Imports the taxonomy from the file specified. Each line has to be in the format TERMGROUP|TERMSET|TERM. See example 2 for examples of the format. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Delimiter The path delimiter to be used, by default this is '|' Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Lcid Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Specifies a file containing terms per line, in the format as required by the Terms parameter. Type: String Parameter Sets: File Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SynchronizeDeletions If specified, terms that exist in the termset, but are not in the imported data, will be removed. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermStoreName Term store to import to; if not specified the default term store is used. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Terms An array of strings describing termgroup, termset, term, subterms using a default delimiter of '|'. Type: String[] Parameter Sets: Direct Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Import-PnPTermGroupFromXml.html": {
    "href": "cmdlets/Import-PnPTermGroupFromXml.html",
    "title": "Import-PnPTermGroupFromXml | PnP PowerShell",
    "keywords": "Import-PnPTermGroupFromXml SYNOPSIS Imports a taxonomy TermGroup from either the input or from an XML file. SYNTAX XML Import-PnPTermGroupFromXml [[-Xml] <String>] [-Connection <PnPConnection>] [<CommonParameters>] File Import-PnPTermGroupFromXml [-Path <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Import-PnPTermGroupFromXml -Xml $xml Imports the XML based termgroup information located in the $xml variable EXAMPLE 2 Import-PnPTermGroupFromXml -Path input.xml Imports the XML file specified by the path. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path The XML File to import the data from Type: String Parameter Sets: File Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Xml The XML to process Type: String Parameter Sets: XML Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Import-PnPTermSet.html": {
    "href": "cmdlets/Import-PnPTermSet.html",
    "title": "Import-PnPTermSet | PnP PowerShell",
    "keywords": "Import-PnPTermSet SYNOPSIS Imports a taxonomy term set from a file in the standard format. SYNTAX Import-PnPTermSet -GroupName <String> -Path <String> [-TermSetId <Guid>] [-SynchronizeDeletions] [-IsOpen <Boolean>] [-Contact <String>] [-Owner <String>] [-TermStoreName <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION The format of the file is the same as that used by the import function in the web interface. A sample file can be obtained from the web interface. This is a CSV file, with the following headings: Term Set Name,Term Set Description,LCID,Available for Tagging,Term Description,Level 1 Term,Level 2 Term,Level 3 Term,Level 4 Term,Level 5 Term,Level 6 Term,Level 7 Term The first data row must contain the Term Set Name, Term Set Description, and LCID, and should also contain the first term. It is recommended that a fixed GUID be used as the termSetId, to allow the term set to be easily updated (so do not pass Guid.Empty). In contrast to the web interface import, this is not a one-off import but runs synchronization logic allowing updating of an existing Term Set. When synchronizing, any existing terms are matched (with Term Description and Available for Tagging updated as necessary), any new terms are added in the correct place in the hierarchy, and (if synchronizeDeletions is set) any terms not in the imported file are removed. The import file also supports an expanded syntax for the Term Set Name and term names (Level 1 Term, Level 2 Term, etc). These columns support values with the format 'Name | GUID', with the name and GUID separated by a pipe character (note that the pipe character is invalid to use within a taxonomy item name). This expanded syntax is not required, but can be used to ensure all terms have fixed IDs. EXAMPLES EXAMPLE 1 Import-PnPTermSet -GroupName 'Standard Terms' -Path 'C:\\\\Temp\\\\ImportTermSet.csv' -SynchronizeDeletions Creates (or updates) the term set specified in the import file, in the group specified, removing any existing terms not in the file. EXAMPLE 2 Import-PnPTermSet -TermStoreName 'My Term Store' -GroupName 'Standard Terms' -Path 'C:\\\\Temp\\\\ImportTermSet.csv' -TermSetId '{15A98DB6-D8E2-43E6-8771-066C1EC2B8D8}' Creates (or updates) the term set specified in the import file, in the term store and group specified, using the specified ID. EXAMPLE 3 Import-PnPTermSet -GroupName 'Standard Terms' -Path 'C:\\\\Temp\\\\ImportTermSet.csv' -IsOpen $true -Contact 'user@example.org' -Owner 'user@example.org' Creates (or updates) the term set specified in the import file, setting the IsOpen, Contact, and Owner properties as specified. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Contact Contact for the term set; if not specified, the existing setting is retained. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -GroupName Group to import the term set to; an error is returned if the group does not exist. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsOpen Whether the term set should be marked open; if not specified, then the existing setting is not changed. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owner Owner for the term set; if not specified, the existing setting is retained. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Local path to the file containing the term set to import, in the standard format (as the 'sample import file' available in the Term Store Administration). Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SynchronizeDeletions If specified, the import will remove any terms (and children) previously in the term set but not in the import file; default is to leave them. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermSetId GUID to use for the term set; if not specified, or the empty GUID, a random GUID is generated and used. Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermStoreName Term store to import into; if not specified the default term store is used. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Install-PnPApp.html": {
    "href": "cmdlets/Install-PnPApp.html",
    "title": "Install-PnPApp | PnP PowerShell",
    "keywords": "Install-PnPApp SYNOPSIS Installs an available app from the app catalog SYNTAX Install-PnPApp [-Identity] <AppMetadataPipeBind> [-Scope <AppCatalogScope>] [-Wait] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Install-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe This will install an app that is available in the tenant scoped app catalog, specified by the id, to the current site. EXAMPLE 2 Install-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Scope Site This will install an app that is available in the site collection scoped app catalog, specified by the id, to the current site. EXAMPLE 3 Get-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe | Install-PnPApp This will install the given app from the tenant scoped app catalog into the site. EXAMPLE 4 Get-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Scope Site | Install-PnPApp This will install the given app from the site collection scoped app catalog into the site. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the Id or an actual app metadata instance Type: AppMetadataPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Scope Defines which app catalog to use. Defaults to Tenant Type: AppCatalogScope Parameter Sets: (All) Accepted values: Tenant, Site Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Wait If specified the execution will pause until the app has been installed in the site. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Invoke-PnPBatch.html": {
    "href": "cmdlets/Invoke-PnPBatch.html",
    "title": "Invoke-PnPBatch | PnP PowerShell",
    "keywords": "Invoke-PnPBatch SYNOPSIS Executes the batch SYNTAX Invoke-PnPBatch [-Batch] <PnPBatch> [-Details] [-StopOnException] [-Force] DESCRIPTION Executes any queued actions / changes in the batch. EXAMPLES EXAMPLE 1 $batch = New-PnPBatch Add-PnPListItem -List \"DemoList\" -Values @{\"Title\"=\"Demo Item 1\"} -Batch $batch Add-PnPListItem -List \"DemoList\" -Values @{\"Title\"=\"Demo Item 2\"} -Batch $batch Add-PnPListItem -List \"DemoList\" -Values @{\"Title\"=\"Demo Item 3\"} -Batch $batch Invoke-PnPBatch -Batch $batch This will add the 3 defined list items in the batch. PARAMETERS -Batch The batch to execute Type: PnPBatch Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Once a batch has been executed you cannot execute it again. Using -Force will allow you to reexecute the batch again. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Details Will return detailed information of the batch executed. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StopOnException By default the batch will be fully executed. If any exceptions occur during this process they will be listed after the full run. Specify this switch to stop immediately after an exception occurs. The rest of the batch will be skipped then. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Invoke-PnPGraphMethod.html": {
    "href": "cmdlets/Invoke-PnPGraphMethod.html",
    "title": "Invoke-PnPGraphMethod | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Invoke-PnPGraphMethod SYNOPSIS Invokes a REST request towards the Microsoft Graph API SYNTAX Invoke-PnPGraphMethod -Url <String> [-AdditionalHeaders <System.Collections.Generic.IDictionary`2[System.String,System.String]>] [[-Method] <HttpRequestMethod>] [-Content <Object>] [-ContentType <String>] [-ConsistencyLevelEventual] [-Raw] [-All] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Invokes a REST request towards the Microsoft Graph API EXAMPLES Example 1 Invoke-PnPGraphMethod -Url \"groups?`$filter=startsWith(displayName,'ZZ')&`$select=displayName\" Invoke-PnPGraphMethod -Url 'groups/{id}?`$select=hideFromOutlookClients' Execute a GET request to get groups by filter and select. Example 2 Invoke-PnPGraphMethod -Url \"groups/{id}\" -Method Delete delete the group with id. Example 3 Invoke-PnPGraphMethod -Url \"groups/{id}\" -Method Patch -Content @{ displayName = \"NewName\" } set the displayName of the group with a Patch request. Example 4 Invoke-PnPGraphMethod -Url \"v1.0/users?$filter=accountEnabled ne true&$count=true\" -Method Get -ConsistencyLevelEventual get users with advanced query capabilities. use of -ConsistencyLevelEventual. PARAMETERS -AdditionalHeaders Additional request headers Type: System.Collections.Generic.IDictionary`2[System.String,System.String] Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -All retrieve all pages of results. this will loop through all @odata.nextLink. this flag will only be respected if the request is a GET request. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ConsistencyLevelEventual set the ConsistencyLevel header to eventual for advanced query capabilities on Azure AD directory objects Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Content A string or object to send Type: Object Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType The content type of the object to send. Defaults to 'application/json'. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Method The Http method to execute. Defaults to GET. Type: HttpRequestMethod Parameter Sets: (All) Aliases: Accepted values: Default, Get, Head, Post, Put, Delete, Trace, Options, Merge, Patch Required: False Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Raw If specified the returned data will not be converted to an object but returned as a JSON string. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url the graph endpoint to invoke Type: String Parameter Sets: (All) Aliases: Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Invoke-PnPListDesign.html": {
    "href": "cmdlets/Invoke-PnPListDesign.html",
    "title": "Invoke-PnPListDesign | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Invoke-PnPListDesign SYNOPSIS Apply a List Design to an existing site. * Requires Tenant Administration Rights * SYNTAX Invoke-PnPListDesign [-Identity] <TenantListDesignPipeBind> [-WebUrl <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Applies the List Design provided through Identity to an existing site. EXAMPLES EXAMPLE 1 Invoke-PnPListDesign -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd Applies the specified list design to the current site. EXAMPLE 2 Invoke-PnPListDesign -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd -WebUrl \"https://contoso.sharepoint.com/sites/mydemosite\" Applies the specified site design to the specified site. EXAMPLE 3 Get-PnPListDesign | ?{$_.Title -eq \"Demo\"} | Invoke-PnPListDesign Applies the specified list design to the specified site. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The List Design Id Type: TenantSiteDesignPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -WebUrl The URL of the web to apply the list design to. If not specified it will default to the current web based upon the URL specified with Connect-PnPOnline. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Invoke-PnPQuery.html": {
    "href": "cmdlets/Invoke-PnPQuery.html",
    "title": "Invoke-PnPQuery | PnP PowerShell",
    "keywords": "Invoke-PnPQuery SYNOPSIS Executes the currently queued actions SYNTAX Invoke-PnPQuery [-RetryCount <Int32>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Executes any queued actions / changes on the SharePoint Client Side Object Model Context EXAMPLES EXAMPLE 1 Invoke-PnPQuery -RetryCount 5 This will execute any queued actions / changes on the SharePoint Client Side Object Model Context and will retry 5 times in case of throttling. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RetryCount Number of times to retry in case of throttling. Defaults to 10. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Invoke-PnPSiteDesign.html": {
    "href": "cmdlets/Invoke-PnPSiteDesign.html",
    "title": "Invoke-PnPSiteDesign | PnP PowerShell",
    "keywords": "Invoke-PnPSiteDesign SYNOPSIS Apply a Site Design to an existing site. * Requires Tenant Administration Rights * SYNTAX Invoke-PnPSiteDesign [-Identity] <TenantSiteDesignPipeBind> [-WebUrl <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Applies the Site Design provided through Identity to an existing site. When providing a site design name and multiple site designs exist with the same name, all of them will be invoked. EXAMPLES EXAMPLE 1 Invoke-PnPSiteDesign -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd Applies the specified site design to the current site. EXAMPLE 2 Invoke-PnPSiteDesign -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd -WebUrl \"https://contoso.sharepoint.com/sites/mydemosite\" Applies the specified site design to the specified site. EXAMPLE 3 Get-PnPSiteDesign | ?{$_.Title -eq \"Demo\"} | Invoke-PnPSiteDesign Applies the specified site design to the specified site. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Site Design Id or an actual Site Design object to apply Type: TenantSiteDesignPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -WebUrl The URL of the web to apply the site design to. If not specified it will default to the current web based upon the URL specified with Connect-PnPOnline. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Invoke-PnPSiteScript.html": {
    "href": "cmdlets/Invoke-PnPSiteScript.html",
    "title": "Invoke-PnPSiteScript | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Invoke-PnPSiteScript SYNOPSIS Applies a Site Script to an existing site SYNTAX Executing a site script registered as such Invoke-PnPSiteScript -Identity <TenantSiteScriptPipeBind> -WebUrl <String> [-Connection <PnPConnection>] [<CommonParameters>] Executing a site script by passing in the script directly Invoke-PnPSiteScript -Script <String> [-WebUrl <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Applies the Site Design provided through Identity to an existing site. When providing a site design name and multiple site designs exist with the same name, all of them will be invoked and applied. It is also possible to provide a site script directly without having to add it as a site script first. This could be ideal for making quick one time copies of i.e. lists and sites. When passing in a site script through -Script, you only need to have permissions to the site you are applying the site script to. When passing in a site script through -Identity, you need to be connected to the SharePoint Online admin site collection and have rights to access it. Using the -WebUrl you can specify the full URL of the site collection you wish to apply the site script to. The output provided by this cmdlet are the site script actions that have been applied along with for each of them information on if they were successfully applied. EXAMPLES EXAMPLE 1 Invoke-PnPSiteScript -Identity \"My awesome script\" -WebUrl https://contoso.sharepoint.com/sites/mydemosite Retrieves the site script(s) with the provided name and applies it/them to the provided site. Ensure to connect to the SharePoint Online Admin site for this to work. EXAMPLE 2 $script = Get-PnPSiteScriptFromList -Url \"https://contoso.sharepoint.com/sites/mytemplatesite/lists/Sample\" Invoke-PnPSiteScript -Script $script Creates a site script from an existing list on the fly and uses it to create a new list with the same fields, settings and views in the current site EXAMPLE 3 Get-PnPSiteScript | ? { $_.Title -like \"*Test*\"} | Invoke-PnPSiteScript -WebUrl https://contoso.sharepoint.com/sites/mydemosite Applies all of the registered site scripts having the word Title in their name to the site at the provided URL PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The site script instance, name or Id of the site script to apply Type: TenantSiteScriptPipeBind Parameter Sets: SITESCRIPTREFERENCE Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Script The site script to apply, i.e. retrieved using Get-PnPSiteScriptFromWeb or Get-PnPSiteScriptFromList Type: TenantSiteScriptPipeBind Parameter Sets: SITESCRIPTREFERENCE Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -WebUrl The URL of the web to apply the site script to. If not specified it will default to the current web based upon the URL specified with Connect-PnPOnline. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Invoke-PnPSiteSwap.html": {
    "href": "cmdlets/Invoke-PnPSiteSwap.html",
    "title": "Invoke-PnPSiteSwap | PnP PowerShell",
    "keywords": "Invoke-PnPSiteSwap SYNOPSIS Invokes a job to swap the location of a site with another site while archiving the original site. SYNTAX Invoke-PnPSiteSwap -SourceUrl <string> -TargetUrl <string> -ArchiveUrl <string> [-DisableRedirection] [-NoWait] DESCRIPTION Swaps the location of a source site with a target site while archiving the original target site. Please note, the target site must be either: The root site, for example https://tenant-name.sharepoint.com; or The search center site, for example https://tenant-name.sharepoint.com/search . When the swap is initiated, the target site is moved to the archive location and the source site is moved to the target location. By default, a site redirect is created at the source location that will redirect traffic to the target location. If the target is the root site at https://tenant-name.sharepoint.com , then the following preparation activities should be performed prior to performing the swap: Any Featured links defined in SharePoint Start Page at https://tenant-name.sharepoint.com/_layouts/15/sharepoint.aspx will not be displayed after performing the swap. If required, the Featured links should be documented so they can be manually recreated after the swap. Functionality such as external sharing and application interfaces are dependent on the policies and permissions defined at the root site. Review the source site to ensure that it has the required policies and permissions as per the existing root site. This includes external sharing settings as well as site permissions. Larger tenants that have more than ~10,000 licenses may also need to run the Page Diagnostic Tool against the source site. Any analysis results that have the category Attention required (Red) or Improvement opprtunities (Orange) will need to be remediated before performing the swap. The source and target sites can't be connected to an Office 365 group. They also can't be hub sites or associated with a hub. If a site is a hub site, unregister it as a hub site, swap the root site, and then register the site as a hub site. If a site is associated with a hub, disassociate the site, swap the root site, and then reassociate the site. EXAMPLES EXAMPLE 1 Invoke-PnPSiteSwap -SourceUrl https://contoso.sharepoint.com/sites/CommunicationSite -TargetUrl https://contoso.sharepoint.com -ArchiveUrl https://contoso.sharepoint.com/sites/Archive Archives the existing site at https://contoso.sharepoint.com to https://contoso.sharepoint.com/sites/Archive and moves https://contoso.sharepoint.com/sites/CommunicationSite to https://contoso.sharepoint.com . A site redirect will be created at https://contoso.sharepoint.com/sites/CommunicationSite that will redirect any requests to https://contoso.sharepoint.com . EXAMPLE 2 Invoke-PnPSiteSwap -SourceUrl https://contoso.sharepoint.com/sites/SearchSite -TargetUrl https://contoso.sharepoint.com/search -ArchiveUrl https://contoso.sharepoint.com/sites/Archive Archives the existing Search Center site at https://contoso.sharepoint.com/search to https://contoso.sharepoint.com/sites/Archive and moves the https://contoso.sharepoint.com/sites/SearchSite to https://contoso.sharepoint.com/search . A site redirect be created at https://contoso.sharepoint.com/sites/SearchSite that will redirect any requests to https://contoso.sharepoint.com/search . EXAMPLE 3 Invoke-PnPSiteSwap -SourceUrl https://contoso.sharepoint.com/sites/CommunicationSite -TargetUrl https://contoso.sharepoint.com -ArchiveUrl https://contoso.sharepoint.com/sites/Archive -DisableRedirection Archives the existing site at https://contoso.sharepoint.com to https://contoso.sharepoint.com/sites/Archive and moves https://contoso.sharepoint.com/sites/CommunicationSite to https://contoso.sharepoint.com . A site redirect will not be created at https://contoso.sharepoint.com/sites/CommunicationSite . PARAMETERS -SourceUrl URL of the source site. The site at this location must exist before performing the swap. If the target is the root site at https://tenant-name.sharepoint.com then the source site must be either a Modern Team Site (STS#3) or a Communication Site (SITEPAGEPUBLISHING#0). If the target is the search center site at https://tenant-name.sharepoint.com/search then the source site must be either a Search Center Site (SRCHCEN#0) or a Basic Search Center Site (SRCHCENTERLITE#0). Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TargetUrl URL of the target site that the source site will be swapped to. The site at this location must exist before performing the swap. The target site must be either: The root site at https://tenant-name.sharepoint.com; or The search center site at https://tenant-name.sharepoint.com/search . Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ArchiveUrl URL that the target site will be archived to. There should be no existing site, including a deleted site in the Recycle Bin, at this location before performing the swap. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableRedirection Disables the site redirect from being created at the Source URL location. Type: Switch Parameter Parameter Sets: (All) Required: false Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Invoke-PnPSiteTemplate.html": {
    "href": "cmdlets/Invoke-PnPSiteTemplate.html",
    "title": "Invoke-PnPSiteTemplate | PnP PowerShell",
    "keywords": "Invoke-PnPSiteTemplate SYNOPSIS Applies a site template to a web SYNTAX Path Invoke-PnPSiteTemplate [-Path] <String> [-TemplateId <String>] [-ResourceFolder <String>] [-OverwriteSystemPropertyBagValues] [-IgnoreDuplicateDataRowErrors] [-ProvisionContentTypesToSubWebs] [-ProvisionFieldsToSubWebs] [-ClearNavigation] [-Parameters <Hashtable>] [-Handlers <Handlers>] [-ExcludeHandlers <Handlers>] [-ExtensibilityHandlers <ExtensibilityHandler[]>] [-TemplateProviderExtensions <ITemplateProviderExtension[]>] [-Connection <PnPConnection>] [<CommonParameters>] Instance Invoke-PnPSiteTemplate [-TemplateId <String>] [-ResourceFolder <String>] [-OverwriteSystemPropertyBagValues] [-IgnoreDuplicateDataRowErrors] [-ProvisionContentTypesToSubWebs] [-ProvisionFieldsToSubWebs] [-ClearNavigation] [-Parameters <Hashtable>] [-Handlers <Handlers>] [-ExcludeHandlers <Handlers>] [-ExtensibilityHandlers <ExtensibilityHandler[]>] [-TemplateProviderExtensions <ITemplateProviderExtension[]>] [-InputInstance <SiteTemplate>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Invoke-PnPSiteTemplate -Path template.xml Applies a site template in XML format to the current web. EXAMPLE 2 Invoke-PnPSiteTemplate -Path template.xml -ResourceFolder c:\\provisioning\\resources Applies a site template in XML format to the current web. Any resources like files that are referenced in the template will be retrieved from the folder as specified with the ResourceFolder parameter. EXAMPLE 3 Invoke-PnPSiteTemplate -Path template.xml -Parameters @{\"ListTitle\"=\"Projects\";\"parameter2\"=\"a second value\"} Applies a site template in XML format to the current web. It will populate the parameter in the template the values as specified and in the template you can refer to those values with the {parameter: } token. For instance with the example above, specifying {parameter:ListTitle} in your template will translate to 'Projects' when applying the template. These tokens can be used in most string values in a template. EXAMPLE 4 Invoke-PnPSiteTemplate -Path template.xml -Handlers Lists, SiteSecurity Applies a site template in XML format to the current web. It will only apply the lists and site security part of the template. EXAMPLE 5 Invoke-PnPSiteTemplate -Path template.pnp Applies a site template from a pnp package to the current web. EXAMPLE 6 Invoke-PnPSiteTemplate -Path \"https://tenant.sharepoint.com/sites/templatestorage/Documents/template.pnp\" Applies a site template from a pnp package stored in a library to the current web. EXAMPLE 7 $handler1 = New-PnPExtensibilityHandlerObject -Assembly Contoso.Core.Handlers -Type Contoso.Core.Handlers.MyExtensibilityHandler1 $handler2 = New-PnPExtensibilityHandlerObject -Assembly Contoso.Core.Handlers -Type Contoso.Core.Handlers.MyExtensibilityHandler2 Invoke-PnPSiteTemplate -Path NewTemplate.xml -ExtensibilityHandlers $handler1,$handler2 This will create two new ExtensibilityHandler objects that are run while provisioning the template EXAMPLE 8 Invoke-PnPSiteTemplate -Path .\\ -InputInstance $template Applies a site template from an in-memory instance of a SiteTemplate type of the PnP Core Component, reading the supporting files, if any, from the current (.) path. The syntax can be used together with any other supported parameters. EXAMPLE 9 Invoke-PnPSiteTemplate -Path .\\template.xml -TemplateId \"MyTemplate\" Applies the SiteTemplate with the ID \"MyTemplate\" located in the template definition file template.xml. PARAMETERS -ClearNavigation Override the RemoveExistingNodes attribute in the Navigation elements of the template. If you specify this value the navigation nodes will always be removed before adding the nodes in the template Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExcludeHandlers Allows you to run all handlers, excluding the ones specified. Type: Handlers Parameter Sets: (All) Accepted values: None, AuditSettings, ComposedLook, CustomActions, ExtensibilityProviders, Features, Fields, Files, Lists, Pages, Publishing, RegionalSettings, SearchSettings, SitePolicy, SupportedUILanguages, TermGroups, Workflows, SiteSecurity, ContentTypes, PropertyBagEntries, PageContents, WebSettings, Navigation, ImageRenditions, ApplicationLifecycleManagement, Tenant, WebApiPermissions, SiteHeader, SiteFooter, Theme, SiteSettings, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExtensibilityHandlers Allows you to specify ExtensbilityHandlers to execute while applying a template Type: ExtensibilityHandler[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Handlers Allows you to only process a specific part of the template. Notice that this might fail, as some of the handlers require other artifacts in place if they are not part of what your applying. Visit https://docs.microsoft.com/dotnet/api/officedevpnp.core.framework.provisioning.model.handlers for possible values. Type: Handlers Parameter Sets: (All) Accepted values: None, AuditSettings, ComposedLook, CustomActions, ExtensibilityProviders, Features, Fields, Files, Lists, Pages, Publishing, RegionalSettings, SearchSettings, SitePolicy, SupportedUILanguages, TermGroups, Workflows, SiteSecurity, ContentTypes, PropertyBagEntries, PageContents, WebSettings, Navigation, ImageRenditions, ApplicationLifecycleManagement, Tenant, WebApiPermissions, SiteHeader, SiteFooter, Theme, SiteSettings, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IgnoreDuplicateDataRowErrors Ignore duplicate data row errors when the data row in the template already exists. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InputInstance Allows you to provide an in-memory instance of the SiteTemplate type of the PnP Core Component. When using this parameter, the -Path parameter refers to the path of any supporting file for the template. Type: SiteTemplate Parameter Sets: Instance Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OverwriteSystemPropertyBagValues Specify this parameter if you want to overwrite and/or create properties that are known to be system entries (starting with vti_, dlc_, etc.) Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Parameters Allows you to specify parameters that can be referred to in the template by means of the {parameter:<Key>} token. See examples on how to use this parameter. Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Path to the xml or pnp file containing the provisioning template. Type: String Parameter Sets: Path Required: True Position: 0 Default value: None Accept pipeline input: True (ByPropertyName, ByValue) Accept wildcard characters: False -ProvisionContentTypesToSubWebs If set content types will be provisioned if the target web is a subweb. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ProvisionFieldsToSubWebs If set fields will be provisioned if the target web is a subweb. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ResourceFolder Root folder where resources/files that are being referenced in the template are located. If not specified the same folder as where the provisioning template is located will be used. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateId ID of the template to use from the xml file containing the provisioning template. If not specified and multiple SiteTemplate elements exist, the last one will be used. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateProviderExtensions Allows you to specify ITemplateProviderExtension to execute while applying a template. Type: ITemplateProviderExtension[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Invoke-PnPSPRestMethod.html": {
    "href": "cmdlets/Invoke-PnPSPRestMethod.html",
    "title": "Invoke-PnPSPRestMethod | PnP PowerShell",
    "keywords": "Invoke-PnPSPRestMethod SYNOPSIS Invokes a REST request towards a SharePoint site SYNTAX Invoke-PnPSPRestMethod -Url <String> [-Method <HttpRequestMethod>] [-Content <Object>] [-ContentType <String>] [-Raw] [-Connection <PnPConnection>] DESCRIPTION Invokes a REST request towards a SharePoint site EXAMPLES ------------------EXAMPLE 1------------------ Invoke-PnPSPRestMethod -Url /_api/web This example executes a GET request towards the current site collection and returns the properties of the current web ------------------EXAMPLE 2------------------ $output = Invoke-PnPSPRestMethod -Url '/_api/web/lists?$select=Id,Title' $output.value This example executes a GET request towards the current site collection and returns the id and title of all the lists and outputs them to the console. Notice the use of single quotes. If you want to use double quotes (\") then you will have to escape the $ character with a backtick: `$ ------------------EXAMPLE 3------------------ $item = @{Title=\"Test\"} Invoke-PnPSPRestMethod -Method Post -Url \"/_api/web/lists/GetByTitle('Test')/items\" -Content $item This example creates a new item in the list 'Test' and sets the title field to 'Test' ------------------EXAMPLE 4------------------ $item = \"{'Title':'Test'}\" Invoke-PnPSPRestMethod -Method Post -Url \"/_api/web/lists/GetByTitle('Test')/items\" -Content $item This example creates a new item in the list 'Test' and sets the title field to 'Test' ------------------EXAMPLE 5------------------ $item = \"{ '__metadata': { 'type': 'SP.Data.TestListItem' }, 'Title': 'Test'}\" Invoke-PnPSPRestMethod -Method Post -Url \"/_api/web/lists/GetByTitle('Test')/items\" -Content $item -ContentType \"application/json;odata=verbose\" This example creates a new item in the list 'Test' and sets the title field to 'Test' PARAMETERS -Content A string or object to send Type: Object Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -ContentType The content type of the object to send. Defaults to 'application/json'. Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -Method The Http method to execute. Defaults to GET. Type: HttpRequestMethod Parameter Sets: (All) Required: False Position: 0 Accept pipeline input: False -Url The url to execute Type: String Parameter Sets: (All) Required: True Position: 0 Accept pipeline input: False -Raw If specified the returned data will not be converted to an object but returned as a JSON string. Type: SwitchParameter Parameter Sets: (All) Required: True Position: 0 Accept pipeline input: False -Accept The Accept HTTP request header. Defaults to 'application/json;odata=nometadata'. Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Invoke-PnPTenantTemplate.html": {
    "href": "cmdlets/Invoke-PnPTenantTemplate.html",
    "title": "Invoke-PnPTenantTemplate | PnP PowerShell",
    "keywords": "Invoke-PnPTenantTemplate SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Applies a tenant template to the current tenant. You must have the Office 365 Global Admin role to run this cmdlet successfully. SYNTAX By Path Invoke-PnPTenantTemplate [-Path] <String> [-SequenceId <String>] [-ResourceFolder <String>] [-Handlers <Handlers>] [-ExcludeHandlers <Handlers>] [-ExtensibilityHandlers <ExtensibilityHandler[]>] [-TemplateProviderExtensions <ITemplateProviderExtension[]>] [-Parameters <Hashtable>] [-OverwriteSystemPropertyBagValues] [-IgnoreDuplicateDataRowErrors] [-ProvisionContentTypesToSubWebs] [-ProvisionFieldsToSubWebs] [-ClearNavigation] [-Configuration <ApplyConfigurationPipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] By Object Invoke-PnPTenantTemplate [-Template] <ProvisioningHierarchy> [-SequenceId <String>] [-ResourceFolder <String>] [-Handlers <Handlers>] [-ExcludeHandlers <Handlers>] [-ExtensibilityHandlers <ExtensibilityHandler[]>] [-TemplateProviderExtensions <ITemplateProviderExtension[]>] [-Parameters <Hashtable>] [-OverwriteSystemPropertyBagValues] [-IgnoreDuplicateDataRowErrors] [-ProvisionContentTypesToSubWebs] [-ProvisionFieldsToSubWebs] [-ClearNavigation] [-Configuration <ApplyConfigurationPipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Invoke-PnPTenantTemplate -Path myfile.pnp Will read the tenant template from the filesystem and will apply the sequences in the template EXAMPLE 2 Invoke-PnPTenantTemplate -Path myfile.pnp -SequenceId \"mysequence\" Will read the tenant template from the filesystem and will apply the specified sequence in the template EXAMPLE 3 Invoke-PnPTenantTemplate -Path myfile.pnp -Parameters @{\"ListTitle\"=\"Projects\";\"parameter2\"=\"a second value\"} Applies a tenant template to the current tenant. It will populate the parameter in the template the values as specified and in the template you can refer to those values with the {parameter: } token. For instance with the example above, specifying {parameter:ListTitle} in your template will translate to 'Projects' when applying the template. These tokens can be used in most string values in a template. PARAMETERS -ClearNavigation Override the RemoveExistingNodes attribute in the Navigation elements of the template. If you specify this value the navigation nodes will always be removed before adding the nodes in the template Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Configuration Specify a JSON configuration file to configure the extraction progress. Type: ApplyConfigurationPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExcludeHandlers Allows you to run all handlers, excluding the ones specified. Type: Handlers Parameter Sets: (All) Accepted values: None, AuditSettings, ComposedLook, CustomActions, ExtensibilityProviders, Features, Fields, Files, Lists, Pages, Publishing, RegionalSettings, SearchSettings, SitePolicy, SupportedUILanguages, TermGroups, Workflows, SiteSecurity, ContentTypes, PropertyBagEntries, PageContents, WebSettings, Navigation, ImageRenditions, ApplicationLifecycleManagement, Tenant, WebApiPermissions, SiteHeader, SiteFooter, Theme, SiteSettings, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExtensibilityHandlers Allows you to specify ExtensbilityHandlers to execute while applying a template Type: ExtensibilityHandler[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Handlers Allows you to only process a specific part of the template. Notice that this might fail, as some of the handlers require other artifacts in place if they are not part of what your applying. Type: Handlers Parameter Sets: (All) Accepted values: None, AuditSettings, ComposedLook, CustomActions, ExtensibilityProviders, Features, Fields, Files, Lists, Pages, Publishing, RegionalSettings, SearchSettings, SitePolicy, SupportedUILanguages, TermGroups, Workflows, SiteSecurity, ContentTypes, PropertyBagEntries, PageContents, WebSettings, Navigation, ImageRenditions, ApplicationLifecycleManagement, Tenant, WebApiPermissions, SiteHeader, SiteFooter, Theme, SiteSettings, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IgnoreDuplicateDataRowErrors Ignore duplicate data row errors when the data row in the template already exists. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OverwriteSystemPropertyBagValues Specify this parameter if you want to overwrite and/or create properties that are known to be system entries (starting with vti_, dlc_, etc.) Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Parameters Allows you to specify parameters that can be referred to in the tenant template by means of the {parameter:<Key>} token. See examples on how to use this parameter. Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Path to the xml or pnp file containing the tenant template. Type: String Parameter Sets: By Path Required: True Position: 0 Default value: None Accept pipeline input: True (ByPropertyName, ByValue) Accept wildcard characters: False -ProvisionContentTypesToSubWebs If set content types will be provisioned if the target web is a subweb. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ProvisionFieldsToSubWebs If set fields will be provisioned if the target web is a subweb. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ResourceFolder Root folder where resources/files that are being referenced in the template are located. If not specified the same folder as where the tenant template is located will be used. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SequenceId Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Template Type: ProvisioningHierarchy Parameter Sets: By Object Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TemplateProviderExtensions Allows you to specify ITemplateProviderExtension to execute while applying a template. Type: ITemplateProviderExtension[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Invoke-PnPWebAction.html": {
    "href": "cmdlets/Invoke-PnPWebAction.html",
    "title": "Invoke-PnPWebAction | PnP PowerShell",
    "keywords": "Invoke-PnPWebAction SYNOPSIS Executes operations on web, lists and list items. SYNTAX Invoke-PnPWebAction [-ListName <String>] [-Webs <Web[]>] [-WebAction <System.Action`1[Microsoft.SharePoint.Client.Web]>] [-ShouldProcessWebAction <System.Func`2[Microsoft.SharePoint.Client.Web,System.Boolean]>] [-PostWebAction <System.Action`1[Microsoft.SharePoint.Client.Web]>] [-ShouldProcessPostWebAction <System.Func`2[Microsoft.SharePoint.Client.Web,System.Boolean]>] [-WebProperties <String[]>] [-ListAction <System.Action`1[Microsoft.SharePoint.Client.List]>] [-ShouldProcessListAction <System.Func`2[Microsoft.SharePoint.Client.List,System.Boolean]>] [-PostListAction <System.Action`1[Microsoft.SharePoint.Client.List]>] [-ShouldProcessPostListAction <System.Func`2[Microsoft.SharePoint.Client.List,System.Boolean]>] [-ListProperties <String[]>] [-ListItemAction <System.Action`1[Microsoft.SharePoint.Client.ListItem]>] [-ShouldProcessListItemAction <System.Func`2[Microsoft.SharePoint.Client.ListItem,System.Boolean]>] [-ListItemProperties <String[]>] [-SubWebs] [-DisableStatisticsOutput] [-SkipCounting] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Invoke-PnPWebAction -ListAction ${function:ListAction} This will call the function ListAction on all the lists located on the current web. EXAMPLE 2 Invoke-PnPWebAction -ShouldProcessListAction ${function:ShouldProcessList} -ListAction ${function:ListAction} This will call the function ShouldProcessList, if it returns true the function ListAction will then be called. This will occur on all lists located on the current web PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableStatisticsOutput Will not output statistics after the operation Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ListAction Function to be executed on the list. There is one input parameter of type List Type: System.Action`1[Microsoft.SharePoint.Client.List] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ListItemAction Function to be executed on the list item. There is one input parameter of type ListItem Type: System.Action`1[Microsoft.SharePoint.Client.ListItem] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ListItemProperties The properties to load for list items. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ListName {{ Fill ListName Description }} Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ListProperties The properties to load for list. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PostListAction Function to be executed on the list, this will trigger after list items have been processed. There is one input parameter of type List Type: System.Action`1[Microsoft.SharePoint.Client.List] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PostWebAction Function to be executed on the web, this will trigger after lists and list items have been processed. There is one input parameter of type Web Type: System.Action`1[Microsoft.SharePoint.Client.Web] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShouldProcessListAction Function to be executed on the web that would determine if ListAction should be invoked, There is one input parameter of type List and the function should return a boolean value Type: System.Func`2[Microsoft.SharePoint.Client.List,System.Boolean] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShouldProcessListItemAction Function to be executed on the web that would determine if ListItemAction should be invoked, There is one input parameter of type ListItem and the function should return a boolean value Type: System.Func`2[Microsoft.SharePoint.Client.ListItem,System.Boolean] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShouldProcessPostListAction Function to be executed on the web that would determine if PostListAction should be invoked, There is one input parameter of type List and the function should return a boolean value Type: System.Func`2[Microsoft.SharePoint.Client.List,System.Boolean] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShouldProcessPostWebAction Function to be executed on the web that would determine if PostWebAction should be invoked, There is one input parameter of type Web and the function should return a boolean value Type: System.Func`2[Microsoft.SharePoint.Client.Web,System.Boolean] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShouldProcessWebAction Function to be executed on the web that would determine if WebAction should be invoked, There is one input parameter of type Web and the function should return a boolean value Type: System.Func`2[Microsoft.SharePoint.Client.Web,System.Boolean] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SkipCounting Will skip the counting process; by doing this you will not get an estimated time remaining Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SubWebs Specify if sub webs will be processed Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WebAction Function to be executed on the web. There is one input parameter of type Web Type: System.Action`1[Microsoft.SharePoint.Client.Web] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WebProperties The properties to load for web. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Webs Webs you want to process (for example different site collections), will use Web parameter if not specified Type: Web[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Measure-PnPList.html": {
    "href": "cmdlets/Measure-PnPList.html",
    "title": "Measure-PnPList | PnP PowerShell",
    "keywords": "Measure-PnPList SYNOPSIS Returns statistics on the list object. This may fail on lists larger than the list view threshold SYNTAX Measure-PnPList [-Identity] <ListPipeBind> [-ItemLevel] [-BrokenPermissions] [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Measure-PnPList \"Documents\" Gets statistics on Documents document library EXAMPLE 2 Measure-PnPList \"Documents\" -BrokenPermissions -ItemLevel Displays items and folders with broken permissions inside Documents library PARAMETERS -BrokenPermissions Show items with broken permissions Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -ItemLevel Show item level statistics Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Measure-PnPWeb.html": {
    "href": "cmdlets/Measure-PnPWeb.html",
    "title": "Measure-PnPWeb | PnP PowerShell",
    "keywords": "Measure-PnPWeb SYNOPSIS Returns statistics on the web object SYNTAX Measure-PnPWeb [[-Identity] <WebPipeBind>] [-Recursive] [-IncludeHiddenList] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Measure-PnPWeb Gets statistics on the current web EXAMPLE 2 Measure-PnPWeb $web -Recursive Gets statistics on the provided web including all its subwebs PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Type: WebPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -IncludeHiddenList Include hidden lists in statistics calculation Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Recursive Iterate all sub webs recursively Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Move-PnPFile.html": {
    "href": "cmdlets/Move-PnPFile.html",
    "title": "Move-PnPFile | PnP PowerShell",
    "keywords": "Move-PnPFile SYNOPSIS Moves a file or folder to a different location SYNTAX Move-PnPFile [-SourceUrl] <String> [-TargetUrl] <String> [-Overwrite] [-AllowSchemaMismatch] [-AllowSmallerVersionLimitOnDestination] [-IgnoreVersionHistory] [-NoWait] [-Force] [-Connection <PnPConnection>] DESCRIPTION Allows moving a file or folder to a different location inside the same document library, such as in a subfolder, to a different document library on the same site collection or to a document library on another site collection. If you move a file to a different site or subweb you cannot specify a target filename. Moving files and folders is bound to some restrictions. You can find more on it here: https://docs.microsoft.com/office365/servicedescriptions/sharepoint-online-service-description/sharepoint-online-limits#moving-and-copying-across-sites EXAMPLES EXAMPLE 1 Move-PnPFile -SourceUrl \"Shared Documents/Document.docx\" -TargetUrl \"Archive/Document2.docx\" Moves a file named Document.docx located in the document library named \"Shared Documents\" in the current site to the document library named \"Archive\" in the same site, renaming the file to Document2.docx. If a file named Document2.docx already exists at the destination, it won't perform the move. EXAMPLE 2 Move-PnPFile -SourceUrl \"Shared Documents/Document.docx\" -TargetUrl \"Archive\" -Overwrite Moves a file named Document.docx located in the document library named \"Shared Documents\" in the current site to the document library named \"Archive\" in the same site. If a file named Document.docx already exists at the destination, it will overwrite it. EXAMPLE 3 Move-PnPFile -SourceUrl \"Shared Documents/Document.docx\" -TargetUrl \"/sites/otherproject/Shared Documents\" -Overwrite -AllowSchemaMismatch -AllowSmallerVersionLimitOnDestination Moves a file named Document.docx located in the document library named \"Shared Documents\" in the current site to the document library named \"Shared Documents\" in another site collection \"otherproject\" allowing it to overwrite an existing file Document.docx in the destination, allowing the fields to be different on the destination document library from the source document library and allowing a lower document version limit on the destination compared to the source. EXAMPLE 4 Move-PnPFile -SourceUrl \"/sites/project/Shared Documents/Archive\" -TargetUrl \"/sites/archive/Project\" -AllowSchemaMismatch -AllowSmallerVersionLimitOnDestination Moves a folder named Archive located in the document library named \"Shared Documents\" in the current site to the document library named \"Project\" in another site collection \"archive\" not allowing it to overwrite an existing folder named \"Archive\" in the destination, allowing the fields to be different on the destination document library from the source document library and allowing a lower document version limit on the destination compared to the source. EXAMPLE 5 $job = Move-PnPFile -SourceUrl \"Shared Documents/company.docx\" -TargetUrl \"SubSite2/Shared Documents\" -NoWait $jobStatus = Receive-PnPCopyMoveJobStatus -Job $result if($jobStatus.JobState == 0) { Write-Host \"Job finished\" } Moves a file named company.docx from the current document library to the documents library in SubSite2. It will not wait for the action to return but returns job information instead. The Receive-PnPCopyMoveJobStatus cmdlet will return the job status. PARAMETERS -AllowSchemaMismatch If provided and the target document library specified using TargetServerRelativeLibrary has different fields than the document library where the document is being moved from, the move will succeed. If not provided, it will fail to protect against data loss of metadata stored in fields that cannot be moved along. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowSmallerVersionLimitOnDestination If provided and the target document library specified using TargetServerRelativeLibrary is configured to keep less historical versions of documents than the document library where the document is being moved from, the move will succeed. If not provided, it will fail to protect against data loss of historical versions that cannot be moved along. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be requested and the action will be performed Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IgnoreVersionHistory If provided, only the latest version of the document will be moved and its history will be discarded. If not provided, all historical versions will be moved along. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Overwrite If provided, if a file or folder already exists at the TargetUrl, it will be overwritten. If omitted, the move operation will be canceled if the file or folder already exists at the TargetUrl location. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SourceUrl Site or server relative URL specifying the file or folder to move. Must include the file name if it is a file or the entire path to the folder if it is a folder. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TargetUrl Site or server relative URL of a document library where to move the file or folder to. Type: String Parameter Sets: (All) Required: True Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -NoWait If specified the task will return immediately after creating the move job. The cmdlet will return a job object which can be used with Receive-PnPCopyMoveJobStatus to retrieve the status of the job. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Move-PnPFolder.html": {
    "href": "cmdlets/Move-PnPFolder.html",
    "title": "Move-PnPFolder | PnP PowerShell",
    "keywords": "Move-PnPFolder SYNOPSIS Move a folder to another location in the current web. If you want to move a folder to a different site collection, use the Move-PnPFile cmdlet instead, which also supports moving folders and also accross site collections. Move-PnPFolder can be used to move folders that are within the list view threshold, the commandlet will fail if the list view threshold is exceeded. SYNTAX Move-PnPFolder -Folder <FolderPipeBind> -TargetFolder <String> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Move-PnPFolder -Folder Documents/Reports -TargetFolder 'Archived Reports' This will move the folder Reports in the Documents library to the 'Archived Reports' library EXAMPLE 2 Move-PnPFolder -Folder 'Shared Documents/Reports/2016/Templates' -TargetFolder 'Shared Documents/Reports' This will move the folder Templates to the new location in 'Shared Documents/Reports' PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder The folder to move Type: FolderPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TargetFolder The new parent location to which the folder should be moved to Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Move-PnPListItemToRecycleBin.html": {
    "href": "cmdlets/Move-PnPListItemToRecycleBin.html",
    "title": "Move-PnPListItemToRecycleBin | PnP PowerShell",
    "keywords": "Move-PnPListItemToRecycleBin SYNOPSIS Moves an item from a list to the Recycle Bin SYNTAX Move-PnPListItemToRecycleBin [-List] <ListPipeBind> -Identity <ListItemPipeBind> [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Move-PnPListItemToRecycleBin -List \"Demo List\" -Identity \"1\" -Force Moves the listitem with id \"1\" from the \"Demo List\" list to the Recycle Bin. PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Move-PnPPageComponent.html": {
    "href": "cmdlets/Move-PnPPageComponent.html",
    "title": "Move-PnPPageComponent | PnP PowerShell",
    "keywords": "Move-PnPPageComponent SYNOPSIS Moves a page component to a different section/column SYNTAX Move to other section Move-PnPPageComponent [-Page] <PagePipeBind> -InstanceId <Guid> -Section <Int32> [-Position <Int32>] [-Connection <PnPConnection>] [<CommonParameters>] Move to other section and column Move-PnPPageComponent [-Page] <PagePipeBind> -InstanceId <Guid> -Section <Int32> -Column <Int32> [-Position <Int32>] [-Connection <PnPConnection>] [<CommonParameters>] Move to other column Move-PnPPageComponent [-Page] <PagePipeBind> -InstanceId <Guid> -Column <Int32> [-Position <Int32>] [-Connection <PnPConnection>] [<CommonParameters>] Move within a column Move-PnPPageComponent [-Page] <PagePipeBind> -InstanceId <Guid> -Position <Int32> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Moves a component to a different location on the page. Notice that the sections and or columns need to be present before moving the component. EXAMPLES EXAMPLE 1 Move-PnPPageComponent -Page Home -InstanceId a2875399-d6ff-43a0-96da-be6ae5875f82 -Section 1 Moves the specified component to the first section of the page. EXAMPLE 2 Move-PnPPageComponent -Page Home -InstanceId a2875399-d6ff-43a0-96da-be6ae5875f82 -Column 2 Moves the specified component to the second column of the current section. EXAMPLE 3 Move-PnPPageComponent -Page Home -InstanceId a2875399-d6ff-43a0-96da-be6ae5875f82 -Section 1 -Column 2 Moves the specified component to the first section of the page into the second column. EXAMPLE 4 Move-PnPPageComponent -Page Home -InstanceId a2875399-d6ff-43a0-96da-be6ae5875f82 -Section 1 -Column 2 -Position 2 Moves the specified component to the first section of the page into the second column and sets the column to position 2 in the list of webparts. PARAMETERS -Column The column to move the web part to Type: Int32 Parameter Sets: Move to other section and column, Move to other column Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InstanceId The instance id of the control. Use Get-PnPPageComponent to retrieve the instance ids. Type: Guid Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Page The name of the page Type: PagePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Position Change to order of the web part in the column Type: Int32 Parameter Sets: Move to other section, Move to other section and column, Move to other column Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False Type: Int32 Parameter Sets: Move within a column Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Section The section to move the web part to Type: Int32 Parameter Sets: Move to other section, Move to other section and column Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Move-PnpRecycleBinItem.html": {
    "href": "cmdlets/Move-PnpRecycleBinItem.html",
    "title": "Move-PnPRecycleBinItem | PnP PowerShell",
    "keywords": "Move-PnPRecycleBinItem SYNOPSIS Moves all items or a specific item in the first stage recycle bin of the current site collection to the second stage recycle bin SYNTAX Move-PnPRecycleBinItem [-Identity <RecycleBinItemPipeBind>] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Move-PnPRecycleBinItem Moves all the items in the first stage recycle bin of the current site collection to the second stage recycle bin EXAMPLE 2 Move-PnPRecycleBinItem -Identity 26ffff29-b526-4451-9b6f-7f0e56ba7125 Moves the item with the provided ID in the first stage recycle bin of the current site collection to the second stage recycle bin without asking for confirmation first EXAMPLE 3 Move-PnPRecycleBinItem -Force Moves all the items in the first stage recycle bin of the current context to the second stage recycle bin without asking for confirmation first PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be asked to move the first stage recycle bin items to the second stage Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity If provided, moves the item with the specific ID to the second stage recycle bin Type: RecycleBinItemPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPAzureADGroup.html": {
    "href": "cmdlets/New-PnPAzureADGroup.html",
    "title": "New-PnPAzureADGroup | PnP PowerShell",
    "keywords": "New-PnPAzureADGroup SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.ReadWrite.All, Group.Create, Group.ReadWrite.All Creates a new Azure Active Directory group. This can be a security or distribution group. SYNTAX New-PnPAzureADGroup -DisplayName <String> -Description <String> -MailNickname <String> [-Owners <String[]>] [-Members <String[]>] [-IsSecurityEnabled <SwitchParameter>] [-IsMailEnabled <SwitchParameter>] [-Force] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 New-PnPAzureADGroup -DisplayName $displayName -Description $description -MailNickname $nickname Creates an Azure Active Directory group with all the required properties EXAMPLE 2 New-PnPAzureADGroup -DisplayName $displayName -Description $description -MailNickname $nickname -Owners $arrayOfOwners -Members $arrayOfMembers Creates a new Azure Active Directory group with all the required properties, and with a custom list of Owners and a custom list of Members EXAMPLE 3 New-PnPAzureADGroup -DisplayName $displayName -Description $description -MailNickname $nickname -IsSecurityEnabled -IsMailEnabled Creates a new Azure Active Directory group which is mail and security enabled PARAMETERS -Description The Description of the Azure Active Directory group Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName The Display Name of the Azure Active Directory group Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsSecurityEnabled Creates an Azure Active Directory group which can be used to set permissions Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsMailEnabled Creates an Azure Active Directory group which can be used to send e-mail to Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MailNickname The Mail Nickname of the Azure Active Directory group. Cannot contain spaces. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Members The array UPN values of the group's members Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owners The array UPN values of the group's owners Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/New-PnPAzureADUserTemporaryAccessPass.html": {
    "href": "cmdlets/New-PnPAzureADUserTemporaryAccessPass.html",
    "title": "New-PnPAzureADUserTemporaryAccessPass | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. New-PnPAzureADUserTemporaryAccessPass SYNOPSIS Required Permissions Microsoft Graph API : UserAuthenticationMethod.ReadWrite.All Creates a temporary access pass to authenticate with for a certain user SYNTAX New-PnPAzureADUserTemporaryAccessPass -DisplayName <String> -Description <String> -MailNickname <String> [-Owners <String[]>] [-Members <String[]>] [-IsSecurityEnabled <SwitchParameter>] [-IsMailEnabled <SwitchParameter>] [-Force] [<CommonParameters>] DESCRIPTION This cmdlet allows creation of a temporary access pass for a specific user to allow the user to log on once using the generated token. This can be used i.e. when the user needs to sign in to replace the multi factor authentication token. You can read more on how to enable Temporary Access Pass in Azure Active Directory in this article . It is disabled by default on Azure Active Directory. EXAMPLES EXAMPLE 1 New-PnPAzureADUserTemporaryAccessPass -Identity johndoe@contoso.onmicrosoft.com Creates a temporary access pass for the user with the provided user principal name following the default configuration in Azure Active Directory towards the access pass its lifetime, password length and reusability which can directly be used. EXAMPLE 2 New-PnPAzureADUserTemporaryAccessPass -Identity 72e2eb87-c124-4bd9-8e01-a447a1752058 -IsUseableOnce:$true Creates a temporary access pass for the user with the provided user Id following the default configuration in Azure Active Directory towards the access pass its lifetime and password length. The token will only be able to be used once and will then immediately expire and can directly be used. EXAMPLE 3 New-PnPAzureADUserTemporaryAccessPass -Identity johndoe@contoso.onmicrosoft.com -StartDateTime (Get-Date).AddHours(2) -LifeTimeInMinutes 10 -IsUseableOnce:$true Creates a temporary access pass for the user with the provided user principal name which will not become valid for use until 2 hours from now has passed. It will then only be valid for 10 minutes and only can be used once to login after which it will immediately expire, regardless if there are minutes left in the -LifeTimeInMinutes parameter. EXAMPLE 4 Get-PnPAzureADUser -Identity johndoe@contoso.onmicrosoft.com | New-PnPAzureADUserTemporaryAccessPass -StartDateTime (Get-Date).AddMinutes(10) -LifeTimeInMinutes 15 -IsUseableOnce:$false Creates a temporary access pass for the user with the provided user principal name which will not become valid for use until 10 minutes from now has passed. It will then only be valid for 15 minutes and only can be used repeatedly to login while there are minutes left in the -LifeTimeInMinutes parameter. PARAMETERS -Identity The user principal name, user Id or user instance for which to generate a temporary access pass. Type: AzureADUserPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False -StartDateTime Date and time at which the access pass should become valid. If not provided, the access pass will immediately be valid. Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LifeTimeInMinutes Time in minutes counting from the moment the access pass has become active, how long it will be valid until it will expire and cannot be used anymore. IF not provided, the configured default in Azure Active Directory will be used. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsUseableOnce Allows defining if the access token can only be used once to log on after which it will directly expire. This takes presedence over the -LifeTimeInMinutes option. If not provided, the configured default in Azure Active Directory will be used. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation Feature description"
  },
  "cmdlets/New-PnPAzureCertificate.html": {
    "href": "cmdlets/New-PnPAzureCertificate.html",
    "title": "New-PnPAzureCertificate | PnP PowerShell",
    "keywords": "New-PnPAzureCertificate SYNOPSIS Generate a new 2048bit self-signed certificate and manifest settings for use when using CSOM via an app-only ADAL application. See https://github.com/pnp/powershell/tree/master/samples/SharePoint.ConnectUsingAppPermissions for a sample on how to get started. KeyCredentials contains the ADAL app manifest sections. Certificate contains the PEM encoded certificate. PrivateKey contains the PEM encoded private key of the certificate. SYNTAX New-PnPAzureCertificate [-CommonName <String>] [-Country <String>] [-State <String>] [-Locality <String>] [-Organization <String>] [-OrganizationUnit <String>] [-OutPfx <String>] [-OutCert <String>] [-ValidYears <Int32>] [-CertificatePassword <SecureString>] [-Store <StoreLocation>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 New-PnPAzureCertificate -OutPfx pnp.pfx -OutCert pnp.cer This will generate a default self-signed certificate named \"pnp.contoso.com\" valid for 10 years and output a pfx and cer file to disk. The private key file (pfx) will not be password protected. EXAMPLE 2 New-PnPAzureCertificate -CommonName \"My Certificate\" -ValidYears 30 This will output a certificate named \"My Certificate\" which expires in 30 years from now to the screen. It will not write the certificate files to disk. EXAMPLE 3 New-PnPAzureCertificate -OutPfx pnp.pfx -OutCert pnp.cer -CertificatePassword (ConvertTo-SecureString -String \"pass@word1\" -AsPlainText -Force) This will generate a default self-signed certificate named \"pnp.contoso.com\" valid for 10 years and output a pfx and cer file to disk. The pfx file will have the password pass@word1 set on it. PARAMETERS -CertificatePassword Optional certificate password Type: SecureString Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CommonName Common Name (e.g. server FQDN or YOUR name) [pnp.contoso.com] Type: String Parameter Sets: (All) Required: False Position: 0Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Country Country Name (2 letter code) Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Locality Locality Name (eg, city) Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Organization Organization Name (eg, company) Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OrganizationUnit Organizational Unit Name (eg, section) Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OutCert Filename to write to, optionally including full path (.cer) Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OutPfx Filename to write to, optionally including full path (.pfx) Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -State State or Province Name (full name) Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ValidYears Number of years until expiration (default is 10, max is 30) Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Store Local Certificate Store to add the certificate to. Only works on Microsoft Windows. Type: StoreLocation Parameter Sets: Generate Certificate Required: False Position: Named Accept pipeline input: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPBatch.html": {
    "href": "cmdlets/New-PnPBatch.html",
    "title": "New-PnPBatch | PnP PowerShell",
    "keywords": "New-PnPBatch SYNOPSIS Creates a new batch SYNTAX New-PnPBatch [-RetainRequests] DESCRIPTION Creates a new batch to be used by cmdlets that support batching. The requests in the batch are clear after execute Invoke-PnPBatch, unless you specify -RetainRequests. That allows you to execute batch multiple times. EXAMPLES EXAMPLE 1 $batch = New-PnPBatch Add-PnPListItem -List \"DemoList\" -Values @{\"Title\"=\"Demo Item 1\"} -Batch $batch Add-PnPListItem -List \"DemoList\" -Values @{\"Title\"=\"Demo Item 2\"} -Batch $batch Add-PnPListItem -List \"DemoList\" -Values @{\"Title\"=\"Demo Item 3\"} -Batch $batch Invoke-PnPBatch -Batch $batch This will add the 3 defined list items in the batch. EXAMPLE 2 $batch = New-PnPBatch 1..50 | Foreach-Object{Remove-PnPListItem -List \"DemoList\" -Identity $_ -Batch $batch} Invoke-PnPBatch -Batch $batch This will delete all the items with Id 1 to Id 50 in the specified list. PARAMETERS -RetainRequests Type: SwitchParameter Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPExtensibilityHandlerObject.html": {
    "href": "cmdlets/New-PnPExtensibilityHandlerObject.html",
    "title": "New-PnPExtensibilityHandlerObject | PnP PowerShell",
    "keywords": "New-PnPExtensibilityHandlerObject SYNOPSIS Creates an ExtensibilityHandler Object, to be used by the Get-PnPSiteTemplate cmdlet SYNTAX New-PnPExtensibilityHandlerObject [-Assembly] <String> -Type <String> [-Configuration <String>] [-Disabled] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 $handler = New-PnPExtensibilityHandlerObject -Assembly Contoso.Core.Handlers -Type Contoso.Core.Handlers.MyExtensibilityHandler Get-PnPSiteTemplate -Out NewTemplate.xml -ExtensibilityHandlers $handler This will create a new ExtensibilityHandler object that is run during extraction of the template PARAMETERS -Assembly The full assembly name of the handler Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Configuration Any configuration data you want to send to the handler Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Disabled If set, the handler will be disabled Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Type The type of the handler Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPGraphSubscription.html": {
    "href": "cmdlets/New-PnPGraphSubscription.html",
    "title": "New-PnPGraphSubscription | PnP PowerShell",
    "keywords": "New-PnPGraphSubscription SYNOPSIS Creates a new Microsof Graph Subscription which allows your webhook API to be called when a change occurs in Microsoft Graph SYNTAX New-PnPGraphSubscription -ChangeType <GraphSubscriptionChangeType> -NotificationUrl <String> -Resource <String> [-ExpirationDateTime <DateTime>] [-ClientState <String>] [-LatestSupportedTlsVersion <GraphSubscriptionTlsVersion>] [<CommonParameters>] DESCRIPTION Creates a new Microsof Graph Subscription. The required Azure Active Directory application permission depends on the resource creating the subscription for, see https://docs.microsoft.com/graph/api/subscription-post-subscriptions#permissions . For a sample ASP.NET WebApi webhook implementation to receive the notifications from Microsoft Graph, see https://github.com/microsoftgraph/msgraph-training-changenotifications/blob/b8d21ca7aa5feeece336287c9a781e71b7ba01c6/demos/01-create-application/Controllers/NotificationsController.cs#L51 . EXAMPLES EXAMPLE 1 New-PnPGraphSubscription -ChangeType Create -NotificationUrl https://mywebapiservice/notifications -Resource \"me/mailFolders('Inbox')/messages\" -ExpirationDateTime (Get-Date).AddDays(1) -ClientState [Guid]::NewGuid().ToString() Creates a new Microsoft Graph subscription listening for incoming mail during the next 24 hours in the inbox of the user under which the connection has been made and will signal the URL provided through NotificationUrl when a message comes in EXAMPLE 2 New-PnPGraphSubscription -ChangeType Updates -NotificationUrl https://mywebapiservice/notifications -Resource \"Users\" -ExpirationDateTime (Get-Date).AddHours(1) -ClientState [Guid]::NewGuid().ToString() Creates a new Microsoft Graph subscription listening for changes to user objects during the next hour and will signal the URL provided through NotificationUrl when a change has been made PARAMETERS -ChangeType The event(s) the subscription should trigger on Type: GraphSubscriptionChangeType Parameter Sets: (All) Accepted values: Created, Updated, Deleted Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClientState Specifies the value of the clientState property sent by the service in each notification. The maximum length is 128 characters. The client can check that the notification came from the service by comparing the value of the clientState property sent with the subscription with the value of the clientState property received with each notification. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExpirationDateTime The datetime defining how long this subscription should stay alive before which it needs to get extended to stay alive. See https://docs.microsoft.com/graph/api/resources/subscription#maximum-length-of-subscription-per-resource-type for the supported maximum lifetime of the subscriber endpoints. Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LatestSupportedTlsVersion Specifies the latest version of Transport Layer Security (TLS) that the notification endpoint, specified by NotificationUrl, supports. If not provided, TLS 1.2 will be assumed. Type: GraphSubscriptionTlsVersion Parameter Sets: (All) Accepted values: v1_0, v1_1, v1_2, v1_3 Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NotificationUrl The URL that should be called when an event matching this subscription occurs Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Resource The resource to monitor for changes. See https://docs.microsoft.com/graph/api/subscription-post-subscriptions#resources-examples for the list with supported options. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPGroup.html": {
    "href": "cmdlets/New-PnPGroup.html",
    "title": "New-PnPGroup | PnP PowerShell",
    "keywords": "New-PnPGroup SYNOPSIS Adds group to the Site Groups List and returns a group object SYNTAX New-PnPGroup -Title <String> [-Description <String>] [-Owner <String>] [-AllowRequestToJoinLeave] [-AutoAcceptRequestToJoinLeave] [-AllowMembersEditMembership] [-OnlyAllowMembersViewMembership] [-DisallowMembersViewMembership] [-RequestToJoinEmail <String>] [-SetAssociatedGroup <AssociatedGroupType>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This command creates a SharePoint group in the current Site Collection connected to. EXAMPLES EXAMPLE 1 New-PnPGroup -Title \"My Site Users\" PARAMETERS -AllowMembersEditMembership A switch parameter that specifies whether group members can modify membership in the group Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowRequestToJoinLeave A switch parameter that specifies whether to allow users to request membership in the group and to allow users to request to leave the group Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AutoAcceptRequestToJoinLeave A switch parameter that specifies whether users are automatically added or removed when they make a request Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description for the group Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisallowMembersViewMembership A switch parameter that disallows group members to view membership. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OnlyAllowMembersViewMembership {{ Fill OnlyAllowMembersViewMembership Description }} Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owner The owner for the group, which can be a user or another group Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RequestToJoinEmail The e-mail address to which membership requests are sent Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SetAssociatedGroup {{ Fill SetAssociatedGroup Description }} Type: AssociatedGroupType Parameter Sets: (All) Accepted values: None, Visitors, Members, Owners Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The Title of the group Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPList.html": {
    "href": "cmdlets/New-PnPList.html",
    "title": "New-PnPList | PnP PowerShell",
    "keywords": "New-PnPList SYNOPSIS Creates a new list SYNTAX New-PnPList -Title <String> -Template <ListTemplateType> [-Url <String>] [-Hidden] [-EnableVersioning] [-EnableContentTypes] [-OnQuickLaunch] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 New-PnPList -Title Announcements -Template Announcements Create a new announcements list EXAMPLE 2 New-PnPList -Title \"Demo List\" -Url \"lists/DemoList\" -Template Announcements Create an announcements list with a title that is different from the url EXAMPLE 3 New-PnPList -Title HiddenList -Template GenericList -Hidden Create a new custom list and hides it from the SharePoint UI PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableContentTypes Switch parameter if content types should be enabled on this list Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableVersioning Switch parameter if versioning should be enabled Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Hidden Switch parameter if list should be hidden from the SharePoint UI Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OnQuickLaunch Switch parameter if this list should be visible on the QuickLaunch Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Template The type of list to create. Type: ListTemplateType Parameter Sets: (All) Accepted values: NoListTemplate, GenericList, DocumentLibrary, Survey, Links, Announcements, Contacts, Events, Tasks, DiscussionBoard, PictureLibrary, DataSources, WebTemplateCatalog, UserInformation, WebPartCatalog, ListTemplateCatalog, XMLForm, MasterPageCatalog, NoCodeWorkflows, WorkflowProcess, WebPageLibrary, CustomGrid, SolutionCatalog, NoCodePublic, ThemeCatalog, DesignCatalog, AppDataCatalog, AppFilesCatalog, DataConnectionLibrary, WorkflowHistory, GanttTasks, HelpLibrary, AccessRequest, PromotedLinks, TasksWithTimelineAndHierarchy, MaintenanceLogs, Meetings, Agenda, MeetingUser, Decision, MeetingObjective, TextBox, ThingsToBring, HomePageLibrary, Posts, Comments, Categories, Facility, Whereabouts, CallTrack, Circulation, Timecard, Holidays, IMEDic, ExternalList, MySiteDocumentLibrary, IssueTracking, AdminTasks, HealthRules, HealthReports, DeveloperSiteDraftApps, ContentCenterModelLibrary, ContentCenterPrimeLibrary, ContentCenterSampleLibrary, AccessApp, AlchemyMobileForm, AlchemyApprovalWorkflow, SharingLinks, HashtagStore, RecipesTable, FormulasTable, WebTemplateExtensionsList, ItemReferenceCollection, ItemReferenceReference, ItemReferenceReferenceCollection, InvalidType Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The Title of the list Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url If set, will override the url of the list. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPMicrosoft365Group.html": {
    "href": "cmdlets/New-PnPMicrosoft365Group.html",
    "title": "New-PnPMicrosoft365Group | PnP PowerShell",
    "keywords": "New-PnPMicrosoft365Group SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.ReadWrite.All, Group.Create, Group.ReadWrite.All Creates a new Microsoft 365 Group SYNTAX New-PnPMicrosoft365Group -DisplayName <String> -Description <String> -MailNickname <String> [-Owners <String[]>] [-Members <String[]>] [-IsPrivate] [-LogoPath <String>] [-CreateTeam] [-HideFromAddressLists <Boolean>] [-HideFromOutlookClients <Boolean>] [-ResourceBehaviorOptions <TeamResourceBehaviorOptions>] [-Force] [-SensitivityLabels <GUID[]>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 New-PnPMicrosoft365Group -DisplayName $displayName -Description $description -MailNickname $nickname Creates a public Microsoft 365 Group with all the required properties EXAMPLE 2 New-PnPMicrosoft365Group -DisplayName $displayName -Description $description -MailNickname $nickname -Owners \"owner1@domain.com\" -Members \"member1@domain.com\" Creates a public Microsoft 365 Group with all the required properties, and with a custom list of Owners and a custom list of Members EXAMPLE 3 New-PnPMicrosoft365Group -DisplayName $displayName -Description $description -MailNickname $nickname -IsPrivate Creates a private Microsoft 365 Group with all the required properties EXAMPLE 4 New-PnPMicrosoft365Group -DisplayName $displayName -Description $description -MailNickname $nickname -Owners $arrayOfOwners -Members $arrayOfMembers -IsPrivate Creates a private Microsoft 365 Group with all the required properties, and with a custom list of Owners and a custom list of Members EXAMPLE 5 New-PnPMicrosoft365Group -DisplayName \"myPnPDemo1\" -Description $description -MailNickname $nickname -Owners $arrayOfOwners -Members $arrayOfMembers -IsPrivate -ResourceBehaviorOptions WelcomeEmailDisabled, HideGroupInOutlook This will create a new Microsoft 365 Group called \"myPnPDemo1\" and sets the privacy to Private. Welcome Email will not be sent when the Group is created. The M365 Group will also not be visible in Outlook. EXAMPLE 6 New-PnPMicrosoft365Group -DisplayName $displayName -Description $description -MailNickname $nickname -IsPrivate -SensitivityLabels \"bc98af29-59eb-4869-baaa-9a8dff631aa4\" Creates a private Microsoft 365 Group with all the required properties and applies the sensitivity label. PARAMETERS -CreateTeam Creates a Microsoft Teams team associated with created group Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The Description of the Microsoft 365 Group Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName The Display Name of the Microsoft 365 Group Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LogoPath The path to the logo file of to set. Supported formats are .png, .gif and .jpg Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsPrivate Makes the group private when selected Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MailNickname The Mail Nickname of the Microsoft 365 Group. Cannot contain spaces. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Members The array UserPrincipalName values of the group's members Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owners The array UserPrincipalName values of the group's owners Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HideFromAddressLists Controls whether the group is hidden or shown in the Global Address List (GAL). Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HideFromOutlookClients Controls whether the group shows in the Outlook left-hand navigation. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ResourceBehaviorOptions Allows providing ResourceBehaviorOptions which accepts multiple values that specify group behaviors for a Microsoft 365 Group. Type: TeamResourceBehaviorOptions Parameter Sets: (All) Accepted values: AllowOnlyMembersToPost, HideGroupInOutlook, SubscribeNewGroupMembers, WelcomeEmailDisabled Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SensitivityLabels The Sensitivity label to be set to the Microsoft 365 Group. To retrieve the sensitivity label you need to use the Graph API mentioned here . Type: GUID[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/New-PnPMicrosoft365GroupSettings.html": {
    "href": "cmdlets/New-PnPMicrosoft365GroupSettings.html",
    "title": "New-PnPMicrosoft365GroupSettings | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. New-PnPMicrosoft365GroupSettings SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.ReadWrite.All, Directory.AccessAsUser.All Creates a new Microsoft 365 Group setting for a specific group or the tenant SYNTAX New-PnPMicrosoft365GroupSettings -Identity <Microsoft365GroupPipeBind> -DisplayName <String> -TemplateId <String> -Values <Hashtable> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 New-PnPMicrosoft365GroupSettings -DisplayName \"Group.Unified\" -TemplateId \"62375ab9-6b52-47ed-826b-58e47e0e304b\" -Values @{\"GuestUsageGuidelinesUrl\"=\"https://privacy.contoso.com/privacystatement\";\"EnableMSStandardBlockedWords\"=\"true\"} Creates a tenant-wide Microsoft 365 Group setting EXAMPLE 2 New-PnPMicrosoft365GroupSettings -Identity $groupId -DisplayName \"Group.Unified.Guest\" -TemplateId \"08d542b9-071f-4e16-94b0-74abb372e3d9\" -Values @{\"AllowToAddGuests\"=\"false\"} Creates a Microsoft 365 Group specific setting with all the required properties PARAMETERS -DisplayName The Display Name of the Microsoft 365 Group setting. You can get that by using Get-PnPMicrosoft365GroupSettingTemplates cmdlet Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateId The unqiue identifier for the template used to create this group of settings. To fetch the values of available templates, use Get-PnPMicrosoft365GroupSettingTemplates . Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Values Hashtable of properties for the settings defined in the templated. Use the syntax @{AllowToAddGuests=\"false\";GuestUsageGuidelinesUrl=\"https://google.com/privacy\"}. Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Identity of the Microsoft 365 Group for which you want to create setting. These settings will override the tenant wide settings. Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/New-PnPPersonalSite.html": {
    "href": "cmdlets/New-PnPPersonalSite.html",
    "title": "New-PnPPersonalSite | PnP PowerShell",
    "keywords": "New-PnPPersonalSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site SYNTAX New-PnPPersonalSite [-Email] <String[]> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Creates a OneDrive For Business site for the provided user(s) If you want to use this cmdlet in an automated script not requiring manual authentication, you must assign the following permisson to your application registration from either Azure Active Directory or done through https://tenant-admin.sharepoint.com/_layouts/appregnew.aspx with the following permission through https://tenant-admin.sharepoint.com/_layouts/appinv.aspx : <AppPermissionRequests AllowAppOnlyPolicy=\"true\"> <AppPermissionRequest Scope=\"http://sharepoint/social/tenant\" Right=\"FullControl\" /> </AppPermissionRequests> You then must connect using: Connect-PnPOnline -Url https://tenant-admin.sharepoint.com -ClientId <clientid> -ClientSecret <clientsecret> Authenticating using a certificate is not possible and will throw an unauthorized exception. It does not require assigning any permissions in Azure Active Directory. If you want to run this cmdlet using an interactive login, you must connect using: Connect-PnPOnline -Url https://tenant-admin.sharepoint.com -UseWebLogin EXAMPLES EXAMPLE 1 New-PnPPersonalSite -Email @('katiej@contoso.onmicrosoft.com','garth@contoso.onmicrosoft.com') Creates a OneDrive For Business site for the provided two users PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Email The UserPrincipalName (UPN) of the users Type: String[] Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPPlannerPlan.html": {
    "href": "cmdlets/New-PnPPlannerPlan.html",
    "title": "new-pnpplannerplan | PnP PowerShell",
    "keywords": "New-PnPPlannerPlan SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Creates a new Planner plan. SYNTAX New-PnPPlannerPlan -Group <PlannerGroupPipeBind> -Title <String> [<CommonParameters>] DESCRIPTION This cmdlet creates a new Planner plan. EXAMPLES Example 1 New-PnPPlannerPlan -Group \"Marketing\" -Title \"Conference Plan\" This example will add a new plan called \"Conference Plan\" to the \"Marketing\" group. PARAMETERS -Group Specify the group name or id owning the plan. Type: PlannerGroupPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Specify the name of the new plan. Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPSdnProvider.html": {
    "href": "cmdlets/New-PnPSdnProvider.html",
    "title": "New-PnPSdnProvider | PnP PowerShell",
    "keywords": "New-PnPSdnProvider SYNOPSIS Adds a new Software-Defined Networking (SDN) provider SYNTAX New-PnPSdnProvider -Identity <String> -License <String> [-WhatIf] DESCRIPTION This Cmdlet creates a new Software-Defined Networking, and it receives two parameters, the Identity (ID) of the Hive and the License key of the Hive. EXAMPLES EXAMPLE 1 New-PnPSdnProvider -ID \"Hive\" -License \"\" This example creates the Hive for a SDN Provider. PARAMETERS -Identity Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -License Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPSite.html": {
    "href": "cmdlets/New-PnPSite.html",
    "title": "New-PnPSite | PnP PowerShell",
    "keywords": "New-PnPSite SYNOPSIS Creates a communication site, Microsoft 365 group-connected team site or Modern team site not connected to M365 group. SYNTAX TeamSite New-PnPSite -Type TeamSite -Title <String> -Alias <String> [-Description <String>] [-Classification <String>] [-IsPublic] [-Lcid <UInt>] [-Owners <String[][]>] [-PreferredDataLocation <Office365Geography>] [-SensitivityLabel <String>] [-HubSiteId <Guid>] [-SiteAlias <String>] [-TimeZone <PnP.Framework.Enums.TimeZone>] [-Wait] [-Connection <PnPConnection>] [<CommonParameters>] CommunicationSite New-PnPSite -Type CommunicationSite -Title <String> -Url <String> [-HubSiteId <Guid>] [-Classification <String>] [-SiteDesign <SiteDesign>] [-SiteDesignId <Guid>] [-Lcid <UInt>] [-Owner <String>] [-PreferredDataLocation <Office365Geography>] [-SensitivityLabel <String>] [-TimeZone <PnP.Framework.Enums.TimeZone>] TeamSiteWithoutMicrosoft365Group New-PnPSite -Type TeamSiteWithoutMicrosoft365Group -Title <String> -Url <String> [-HubSiteId <Guid>] [-Classification <String>] [-SiteDesignId <Guid>] [-Lcid <UInt>] [-Owner <String>] [-PreferredDataLocation <Office365Geography>] [-SensitivityLabel <String>] [-TimeZone <PnP.Framework.Enums.TimeZone>] DESCRIPTION The New-PnPSite cmdlet creates a new site collection for the current tenant. Currently only 'modern' sites like Communication Site , Modern Microsoft 365 group-connected team sites and Modern Team sites not connected to M365 groups are supported. If you want to create a classic site, use New-PnPTenantSite. Note that the -Type parameter is mandatory to be used to indicate which type of site you would like to create. Based on the type of site you specify, you will be able to provide the additional arguments that are valid for that site type, so it is recommended to provide this as the first argument. EXAMPLES EXAMPLE 1 New-PnPSite -Type CommunicationSite -Title Contoso -Url https://tenant.sharepoint.com/sites/contoso This will create a new Communications Site collection with the title 'Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso' EXAMPLE 2 New-PnPSite -Type CommunicationSite -Title Contoso -Url https://tenant.sharepoint.com/sites/contoso -SiteDesign Showcase This will create a new Communications Site collection with the title 'Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso'. It will use the 'Showcase' design for the site. EXAMPLE 3 New-PnPSite -Type CommunicationSite -Title Contoso -Url https://tenant.sharepoint.com/sites/contoso -SiteDesignId ae2349d5-97d6-4440-94d1-6516b72449ac This will create a new Communications Site collection with the title 'Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso'. It will use the specified custom site design for the site. EXAMPLE 4 New-PnPSite -Type CommunicationSite -Title Contoso -Url https://tenant.sharepoint.com/sites/contoso -Classification \"HBI\" This will create a new Communications Site collection with the title 'Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso'. The classification for the site will be set to \"HBI\" EXAMPLE 5 New-PnPSite -Type CommunicationSite -Title Contoso -Url https://tenant.sharepoint.com/sites/contoso -ShareByEmailEnabled This will create a new Communications Site collection with the title 'Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso'. Allows owners to invite users outside of the organization. EXAMPLE 6 New-PnPSite -Type CommunicationSite -Title Contoso -Url https://tenant.sharepoint.com/sites/contoso -Lcid 1040 This will create a new Communications Site collection with the title 'Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso' and sets the default language to Italian (LCID 1040). EXAMPLE 7 New-PnPSite -Type TeamSite -Title 'Team Contoso' -Alias contoso This will create a new Modern Team Site collection with the title 'Team Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso' or 'https://tenant.sharepoint.com/teams/contoso' based on the managed path configuration in the SharePoint Online Admin portal. EXAMPLE 8 New-PnPSite -Type TeamSite -Title 'Team Contoso' -Alias contoso -IsPublic This will create a new Modern Team Site collection with the title 'Team Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso' or 'https://tenant.sharepoint.com/teams/contoso' based on the managed path configuration in the SharePoint Online Admin portal and sets the site to public. EXAMPLE 9 New-PnPSite -Type TeamSite -Title 'Team Contoso' -Alias contoso -Lcid 1040 This will create a new Modern Team Site collection with the title 'Team Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso' or 'https://tenant.sharepoint.com/teams/contoso' based on the managed path configuration in the SharePoint Online Admin portal and sets the default language of the site to Italian. EXAMPLE 10 New-PnPSite -Type TeamSite -Title 'Team Contoso' -Alias contoso -SiteAlias contoso-site This will create a new Modern Team Site collection with the title 'Team Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso-site' or 'https://tenant.sharepoint.com/teams/contoso-site' based on the managed path configuration in the SharePoint Online Admin portal. The underlying M365 Group will have 'contoso' as the alias. EXAMPLE 11 New-PnPSite -Type TeamSiteWithoutMicrosoft365Group -Title Contoso -Url https://tenant.sharepoint.com/sites/contoso This will create a new Modern team site collection not connected to M365 group with the title 'Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso' EXAMPLE 12 New-PnPSite -Type TeamSiteWithoutMicrosoft365Group -Title Contoso -Url https://tenant.sharepoint.com/sites/contoso -SiteDesignId ae2349d5-97d6-4440-94d1-6516b72449ac This will create a new Modern team site collection not connected to M365 group with the title 'Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso'. It will use the specified custom site design for the site. EXAMPLE 13 New-PnPSite -Type TeamSiteWithoutMicrosoft365Group -Title Contoso -Url https://tenant.sharepoint.com/sites/contoso -Classification \"HBI\" This will create a new Modern team site collection not connected to M365 group with the title 'Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso'. The classification for the site will be set to \"HBI\" EXAMPLE 14 New-PnPSite -Type TeamSiteWithoutMicrosoft365Group -Title Contoso -Url https://tenant.sharepoint.com/sites/contoso -ShareByEmailEnabled This will create a new Modern team site collection not connected to M365 group with the title 'Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso'. Allows owners to invite users outside of the organization. EXAMPLE 15 New-PnPSite -Type TeamSiteWithoutMicrosoft365Group -Title Contoso -Url https://tenant.sharepoint.com/sites/contoso -Lcid 1040 This will create a new Modern team site collection not connected to M365 group with the title 'Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso' and sets the default language to Italian (LCID 1040). EXAMPLE 16 New-PnPSite -Type TeamSite -TimeZone UTCPLUS0200_HELSINKI_KYIV_RIGA_SOFIA_TALLINN_VILNIUS -Title \"Contoso\" -Alias \"Contoso\" This will create a new Modern team site collection connected to a Microsoft 365 Group with the title 'Contoso' and the url 'https://tenant.sharepoint.com/sites/contoso' and sets the timezone to UTC + 2 which is the Eastern European time zone. PARAMETERS -Alias The alias to use for the team site. Type: String Parameter Sets: TeamSite Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Classification The classification to use for the new site. Type: String Parameter Sets: CommunicationSite, TeamSite, TeamSiteWithoutMicrosoft365Group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the site to create Type: String Parameter Sets: CommunicationSite, TeamSite, TeamSiteWithoutMicrosoft365Group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the site to create Type: String Parameter Sets: CommunicationSite, TeamSite, TeamSiteWithoutMicrosoft365Group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HubSiteId If specified the site will be associated to the hubsite as identified by this id Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsPublic Identifies whether the corresponding Microsoft365 group type is Private or Public. If not specified, group is considered Private. Content in a Public group can be seen by anybody in the organization, and anybody in the organization is able to join the group. Content in a Private group can only be seen by the members of the group and people who want to join a private group have to be approved by a group owner. Type: SwitchParameter Parameter Sets: TeamSite Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -Lcid The language to use for the site. For more information, see Locale IDs supported by SharePoint at https://github.com/pnp/powershell/wiki/Supported-LCIDs-by-SharePoint . To get the list of supported languages on a SharePoint environment use: Get-PnPAvailableLanguage. Type: SwitchParameter Parameter Sets: CommunicationSite, TeamSite, TeamSiteWithoutMicrosoft365Group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owners Specifies one or more users with full access on the site and owner permissions on the corresponding Microsoft 365 Group. Can be used when Team Site is being created. Requires user object. If this parameter is skipped or a group object is provided, the user running New-PnPSite command will be set as a site owner. Required in case of the app-only connection. Type: String[] Parameter Sets: TeamSite Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owner Specifies a Site Collection Administator for the new site. Can be used when Communication Site is being created or Teams Site should not get a corresponding Microsoft 365 group. Requires user object. If this parameter is skipped or a group object is provided, the user running New-PnPSite command will be set as a site owner. Required in case of the app-only connection. Type: String Parameter Sets: CommunicationSite, TeamSiteWithoutMicrosoft365Group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PreferredDataLocation In case of a multi-geo environment you can specify the preferred data location Type: String Parameter Sets: CommunicationSite, TeamSite, TeamSiteWithoutMicrosoft365Group Accepted values: APC, ARE, AUS, CAN, CHE, DEU, EUR, FRA, GBR, IND, JPN, KOR, NAM, NOR, ZAF Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SensitivityLabel The sensitivity label to specify for the new site. Type: String Parameter Sets: CommunicationSite, TeamSite, TeamSiteWithoutMicrosoft365Group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShareByEmailEnabled If specified sharing content by email will be enabled. Type: SwitchParameter Parameter Sets: CommunicationSite, TeamSiteWithoutMicrosoft365Group Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -SiteAlias The site alias to use for the team site URL. If specified, a site collection will be created based on its value, otherwise the value specified in Alias parameter will be used. Type: String Parameter Sets: TeamSite Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteDesign Allows to specify an OOTB site design Type: SwitchParameter Parameter Sets: CommunicationSite Accepted values: Blank, Topic, Showcase Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteDesignId Allows to specify a custom site design Type: Guid Parameter Sets: CommunicationSite, TeamSiteWithoutMicrosoft365Group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Specifies the title of the site to create Type: String Parameter Sets: CommunicationSite, TeamSiteWithoutMicrosoft365Group Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TimeZone Specifies the timezone of the site to create. To get the full list of timezone that you can select, you can visit https://docs.microsoft.com/dotnet/api/officedevpnp.core.enums.timezone Type: Framework.Enums.TimeZone Parameter Sets: CommunicationSite, TeamSiteWithoutMicrosoft365Group, TeamSite Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Type Specifies with type of site to create. Type: SiteType Parameter Sets: (All) Accepted values: CommunicationSite, TeamSite, TeamSiteWithoutMicrosoft365Group Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Wait If specified the cmdlet will wait until the site has been fully created and all site artifacts have been provisioned by SharePoint. Notice that this can take a while. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPSiteCollectionTermStore.html": {
    "href": "cmdlets/New-PnPSiteCollectionTermStore.html",
    "title": "New-PnPSiteCollectionTermStore | PnP PowerShell",
    "keywords": "New-PnPSiteCollectionTermStore SYNOPSIS Creates the site collection term store if it doesn't exist yet or if it does it will return the already existing site collection term store SYNTAX New-PnPSiteCollectionTermStore [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION The site collection scoped term store will be created if it does not exist yet. If it does already exist for the currently connected to site collection, it will return the existing instance. EXAMPLES EXAMPLE 1 New-PnPSiteCollectionTermStore Returns the site collection term store by creating it if it doesn't exist yet or returning the existing instance if it does PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPSiteGroup.html": {
    "href": "cmdlets/New-PnPSiteGroup.html",
    "title": "New-PnPSiteGroup | PnP PowerShell",
    "keywords": "New-PnPSiteGroup SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Creates a new group in a SharePoint Online site collection. SYNTAX New-PnPSiteGroup -Name <String> -PermissionLevels <String[]> [-Site <SitePipeBind>] DESCRIPTION A SharePoint group is a set of individual users. SharePoint groups enable you to manage sets of users instead of individual users. EXAMPLES EXAMPLE 1 New-PnPSiteGroup -Site \"https://contoso.sharepoint.com/sites/siteA\" -Name \"Project Leads\" -PermissionLevels \"Full Control\" This example creates a group named Project Leads with the Full Control permission level on the site collection https://contoso.sharepoint.com/sites/siteA . EXAMPLE 2 New-PnPSiteGroup -Site \"https://contoso.sharepoint.com/sites/marketing\" -Name \"NewGroupName\" -PermissionLevels \"Design\" This example creates a group named NewGroupName with the Design permission level on the site collection https://contoso.sharepoint.com/sites/marketing . PARAMETERS -Name Specifies the name of the group to add Type: String Parameter Sets: (All) Aliases: Group Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PermissionLevels Specifies the permission levels to grant to the newly created group. It can be any permission level that exists on the site collection on which the group is being created. Note Permission Levels, are defined on the top-level site of the site collection, please see How to create and edit permission levels for more information. Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site Specifies the site collection to add the group to. If not specified the currently connected site collection will be used. Type: SitePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPSiteTemplate.html": {
    "href": "cmdlets/New-PnPSiteTemplate.html",
    "title": "New-PnPSiteTemplate | PnP PowerShell",
    "keywords": "New-PnPSiteTemplate SYNOPSIS Creates a new provisioning template object SYNTAX New-PnPSiteTemplate [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 $template = New-PnPSiteTemplate Creates a new instance of a site template object. PARAMETERS RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPSiteTemplateFromFolder.html": {
    "href": "cmdlets/New-PnPSiteTemplateFromFolder.html",
    "title": "New-PnPSiteTemplateFromFolder | PnP PowerShell",
    "keywords": "New-PnPSiteTemplateFromFolder SYNOPSIS Generates a provisioning template from a given folder, including only files that are present in that folder SYNTAX New-PnPSiteTemplateFromFolder [[-Out] <String>] [[-Folder] <String>] [[-TargetFolder] <String>] [-Match <String>] [-ContentType <ContentTypePipeBind>] [-Properties <Hashtable>] [[-Schema] <XMLPnPSchemaVersion>] [-AsIncludeFile] [-Force] [-Encoding <Encoding>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 New-PnPSiteTemplateFromFolder -Out template.xml Creates an empty provisioning template, and includes all files in the current folder. EXAMPLE 2 New-PnPSiteTemplateFromFolder -Out template.xml -Folder c:\\temp Creates an empty provisioning template, and includes all files in the c:\\temp folder. EXAMPLE 3 New-PnPSiteTemplateFromFolder -Out template.xml -Folder c:\\temp -Match *.js Creates an empty provisioning template, and includes all files with a JS extension in the c:\\temp folder. EXAMPLE 4 New-PnPSiteTemplateFromFolder -Out template.xml -Folder c:\\temp -Match *.js -TargetFolder \"Shared Documents\" Creates an empty provisioning template, and includes all files with a JS extension in the c:\\temp folder and marks the files in the template to be added to the 'Shared Documents' folder EXAMPLE 5 New-PnPSiteTemplateFromFolder -Out template.xml -Folder c:\\temp -Match *.js -TargetFolder \"Shared Documents\" -ContentType \"Test Content Type\" Creates an empty provisioning template, and includes all files with a JS extension in the c:\\temp folder and marks the files in the template to be added to the 'Shared Documents' folder. It will add a property to the item for the content type. EXAMPLE 6 New-PnPSiteTemplateFromFolder -Out template.xml -Folder c:\\temp -Match *.js -TargetFolder \"Shared Documents\" -Properties @{\"Title\" = \"Test Title\"; \"Category\"=\"Test Category\"} Creates an empty provisioning template, and includes all files with a JS extension in the c:\\temp folder and marks the files in the template to be added to the 'Shared Documents' folder. It will add the specified properties to the file entries. EXAMPLE 7 New-PnPSiteTemplateFromFolder -Out template.pnp Creates an empty provisioning template as a pnp package file, and includes all files in the current folder EXAMPLE 8 New-PnPSiteTemplateFromFolder -Out template.pnp -Folder c:\\temp Creates an empty provisioning template as a pnp package file, and includes all files in the c:\\temp folder PARAMETERS -AsIncludeFile If specified, the output will only contain the <pnp:Files> element. This allows the output to be included in another template. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType An optional content type to use. Type: ContentTypePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Encoding The encoding type of the XML file, Unicode is default Type: Encoding Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder Folder to process. If not specified the current folder will be used. Type: String Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Overwrites the output file if it exists. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Match Optional wildcard pattern to match filenames against. If empty all files will be included. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Out Filename to write to, optionally including full path. Type: String Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Properties Additional properties to set for every file entry in the generated template. Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Schema The schema of the output to use, defaults to the latest schema Type: XMLPnPSchemaVersion Parameter Sets: (All) Accepted values: LATEST, V201503, V201505, V201508, V201512, V201605, V201705, V201801, V201805, V201807, V201903, V201909, V202002 Required: False Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -TargetFolder Target folder to provision to files to. If not specified, the current folder name will be used. Type: String Parameter Sets: (All) Required: False Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Encoding"
  },
  "cmdlets/New-PnPTeamsApp.html": {
    "href": "cmdlets/New-PnPTeamsApp.html",
    "title": "New-PnPTeamsApp | PnP PowerShell",
    "keywords": "New-PnPTeamsApp SYNOPSIS Required Permissions Microsoft Graph API : One of AppCatalog.ReadWrite.All, Directory.ReadWrite.All Adds an app to the Teams App Catalog. SYNTAX New-PnPTeamsApp -Path <String> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 New-PnPTeamsApp -Path c:\\myapp.zip Adds the app as defined in the zip file to the Teams App Catalog PARAMETERS -Path The path pointing to the packaged/zip file containing the app Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPTeamsTeam.html": {
    "href": "cmdlets/New-PnPTeamsTeam.html",
    "title": "New-PnPTeamsTeam | PnP PowerShell",
    "keywords": "New-PnPTeamsTeam SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Creates a new team in Microsoft Teams or teamifies an existing Microsoft 365 Group. If the Microsoft 365 Group does not exist yet, it will create it first and then add a Microsoft Teams team to the group. If it does already exist, it will use the provided Microsoft 365 Group and just teamify it by adding a Microsoft Teams team to it. SYNTAX For an existing group New-PnPTeamsTeam -GroupId <String> [-AllowAddRemoveApps <Boolean>] [-AllowChannelMentions <Boolean>] [-AllowCreateUpdateChannels <Boolean>] [-AllowCreateUpdateRemoveConnectors <Boolean>] [-AllowCreateUpdateRemoveTabs <Boolean>] [-AllowCustomMemes <Boolean>] [-AllowDeleteChannels <Boolean>] [-AllowGiphy <Boolean>] [-AllowGuestCreateUpdateChannels <Boolean>] [-AllowGuestDeleteChannels <Boolean>] [-AllowOwnerDeleteMessages <Boolean>] [-AllowStickersAndMemes <Boolean>] [-AllowTeamMentions <Boolean>] [-AllowUserDeleteMessages <Boolean>] [-AllowUserEditMessages <Boolean>] [-GiphyContentRating <TeamGiphyContentRating>] [-ShowInTeamsSearchAndSuggestions <Boolean>] [-Classification <String>] [-Owners <String[]>] [-Members <String[]>] [<CommonParameters>] For a new group New-PnPTeamsTeam -DisplayName <String> [-MailNickName <String>] [-Description <String>] [-AllowAddRemoveApps <Boolean>] [-AllowChannelMentions <Boolean>] [-AllowCreateUpdateChannels <Boolean>] [-AllowCreateUpdateRemoveConnectors <Boolean>] [-AllowCreateUpdateRemoveTabs <Boolean>] [-AllowCustomMemes <Boolean>] [-AllowDeleteChannels <Boolean>] [-AllowGiphy <Boolean>] [-AllowGuestCreateUpdateChannels <Boolean>] [-AllowGuestDeleteChannels <Boolean>] [-AllowOwnerDeleteMessages <Boolean>] [-AllowStickersAndMemes <Boolean>] [-AllowTeamMentions <Boolean>] [-AllowUserDeleteMessages <Boolean>] [-AllowUserEditMessages <Boolean>] [-GiphyContentRating <TeamGiphyContentRating>] [-Visibility <TeamVisibility>] [-ShowInTeamsSearchAndSuggestions <Boolean>] [-Classification <String>] [-Owners <String[]>] [-Members <String[]>] [-ResourceBehaviorOptions <TeamResourceBehaviorOptions>] [-SensitivityLabels <GUID[]>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 New-PnPTeamsTeam -DisplayName \"myPnPDemo1\" -Visibility Private -AllowCreateUpdateRemoveTabs $false -AllowUserDeleteMessages $false This will create a new Microsoft Teams team called \"myPnPDemo1\" and sets the privacy to Private, as well as preventing users from deleting their messages or update/remove tabs. The user creating the Microsoft Teams team will be added as Owner. EXAMPLE 2 New-PnPTeamsTeam -GroupId $groupId This will create a new Microsoft Teams team from an existing Microsoft 365 Group using the Group ID (teamify) EXAMPLE 3 New-PnPTeamsTeam -DisplayName \"myPnPDemo1\" -Visibility Private -AllowCreateUpdateRemoveTabs $false -AllowUserDeleteMessages $false -ResourceBehaviorOptions WelcomeEmailDisabled This will create a new Microsoft Teams team called \"myPnPDemo1\" and sets the privacy to Private, as well as preventing users from deleting their messages or update/remove tabs. The user creating the Microsoft Teams team will be added as Owner. Welcome Email will not be sent when the Group is created. EXAMPLE 4 New-PnPTeamsTeam -DisplayName \"myPnPDemo1\" -Visibility Private -AllowCreateUpdateRemoveTabs $false -AllowUserDeleteMessages $false -ResourceBehaviorOptions WelcomeEmailDisabled, HideGroupInOutlook This will create a new Microsoft Teams team called \"myPnPDemo1\" and sets the privacy to Private, as well as preventing users from deleting their messages or update/remove tabs. The user creating the Microsoft Teams team will be added as Owner. Welcome Email will not be sent when the Group is created. The M365 Group will also not be visible in Outlook. EXAMPLE 5 New-PnPTeamsTeam -DisplayName \"myPnPDemo1\" -Visibility Private -Owners \"user1@contoso.onmicrosoft.com\",\"user2@contoso.onmicrosoft.com\" -Members \"user3@contoso.onmicrosoft.com\" This will create a new Microsoft Teams team called \"myPnPDemo1\" and sets the privacy to Private. User1 and user2 will be added as owners. User3 will be added as a member. EXAMPLE 6 New-PnPTeamsTeam -DisplayName \"myPnPDemo1\" -Visibility Private -Owners \"user1@contoso.onmicrosoft.com\",\"user2@contoso.onmicrosoft.com\" -Members \"user3@contoso.onmicrosoft.com\" -SensitivityLabels \"bc98af29-59eb-4869-baaa-9a8dff631aa4\" This will create a new Microsoft Teams team called \"myPnPDemo1\" and sets the privacy to Private. User1 and user2 will be added as owners. User3 will be added as a member. The team will also get the sensitivity label value corresponding to the GUID specified. PARAMETERS -AllowAddRemoveApps Boolean value that determines whether or not members (not only owners) are allowed to add apps to the team. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowChannelMentions Boolean value that determines whether or not channels in the team can be @ mentioned so that all users who follow the channel are notified. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowCreateUpdateChannels Setting that determines whether or not members (and not just owners) are allowed to create channels. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowCreateUpdateRemoveConnectors Setting that determines whether or not members (and not only owners) can manage connectors in the team. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowCreateUpdateRemoveTabs Setting that determines whether or not members (and not only owners) can manage tabs in channels. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowCustomMemes Setting that determines whether or not members can use the custom memes functionality in teams. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowDeleteChannels Setting that determines whether or not members (and not only owners) can delete channels in the team. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowGiphy Setting that determines whether or not giphy can be used in the team. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowGuestCreateUpdateChannels Setting that determines whether or not guests can create channels in the team. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowGuestDeleteChannels Setting that determines whether or not guests can delete channels in the team. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowOwnerDeleteMessages Setting that determines whether or not owners can delete messages that they or other members of the team have posted. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowStickersAndMemes Setting that determines whether stickers and memes usage is allowed in the team. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowTeamMentions Setting that determines whether the entire team can be @ mentioned (which means that all users will be notified) Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowUserDeleteMessages Setting that determines whether or not members can delete messages that they have posted. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowUserEditMessages Setting that determines whether or not users can edit messages that they have posted. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Classification Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Team description. Characters Limit - 1024. Type: String Parameter Sets: For a new group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName Team display name. Characters Limit - 256. Type: String Parameter Sets: For a new group Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -GiphyContentRating Setting that determines the level of sensitivity of giphy usage that is allowed in the team. Accepted values are \"Strict\" or \"Moderate\" Type: TeamGiphyContentRating Parameter Sets: (All) Accepted values: moderate, strict Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -GroupId Specify a GroupId to convert to a Team. If specified, you cannot provide the other values that are already specified by the existing group, namely: Visibility, Alias, Description, or DisplayName. Type: String Parameter Sets: For an existing group Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MailNickName The MailNickName parameter specifies the alias for the associated Microsoft 365 Group. This value will be used for the mail enabled object and will be used as PrimarySmtpAddress for this Microsoft 365 Group.The value of the MailNickName parameter has to be unique across your tenant. Type: String Parameter Sets: For a new group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShowInTeamsSearchAndSuggestions Setting that determines whether or not private teams should be searchable from Teams clients for users who do not belong to that team. Set to $false to make those teams not discoverable from Teams clients. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Visibility Set to Public to allow all users in your organization to join the group by default. Set to Private to require that an owner approve the join request. Type: TeamVisibility Parameter Sets: For a new group Accepted values: Private, Public Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owner User to be added as both a member and an owner of the group. If not specified, the user who creates the team will be added as both a member and an owner. This parameter has been deprecated and will be removed in a future version. Use -Owners instead which allows providing one or even multiple owners at once. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owners The User Principal Name(s) of the user(s) to be added to the Microsoft 365 Group as owners. If omitted and the cmdlet is run using a token containing a user identity, such as when logging on with -Interactive or -DeviceLogin, the user used to authenticate with would become the owner. You can provide as many owners as you want, as long as you stay within the Microsoft 365 Groups limits . Notice that e-mail addresses are not accepted, if they differ from the User Principal Name on the same account. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Members The User Principal Name(s) of the user(s) to be added to the Microsoft 365 Group as members. You can provide as many members as you want, as long as you stay within the Microsoft 365 Groups limits . Notice that e-mail addresses are not accepted, if they differ from the User Principal Name on the same account. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ResourceBehaviorOptions Allows providing ResourceBehaviorOptions which accepts multiple values that specify group behaviors for a Microsoft 365 Group. This will only work when you create a new Microsoft 365 Group, it will not work for existing groups. Type: TeamResourceBehaviorOptions Parameter Sets: For a new group Accepted values: AllowOnlyMembersToPost, HideGroupInOutlook, SubscribeNewGroupMembers, WelcomeEmailDisabled Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SensitivityLabels The Sensitivity label to be set to the Microsoft 365 Group and Team. To retrieve the sensitivity label you need to use the Graph API mentioned here . Type: GUID[] Parameter Sets: For a new group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPTenantSequence.html": {
    "href": "cmdlets/New-PnPTenantSequence.html",
    "title": "New-PnPTenantSequence | PnP PowerShell",
    "keywords": "New-PnPTenantSequence SYNOPSIS Creates a new tenant sequence object SYNTAX New-PnPTenantSequence [-Id <String>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 $sequence = New-PnPTenantSequence Creates a new instance of a tenant sequence object. EXAMPLE 2 $sequence = New-PnPTenantSequence -Id \"MySequence\" Creates a new instance of a tenant sequence object and sets the Id to the value specified. PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Id Optional Id of the sequence Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPTenantSequenceCommunicationSite.html": {
    "href": "cmdlets/New-PnPTenantSequenceCommunicationSite.html",
    "title": "New-PnPTenantSequenceCommunicationSite | PnP PowerShell",
    "keywords": "New-PnPTenantSequenceCommunicationSite SYNOPSIS Creates a communication site object SYNTAX New-PnPTenantSequenceCommunicationSite -Url <String> -Title <String> [-Language <UInt32>] [-Owner <String>] [-Description <String>] [-Classification <String>] [-SiteDesignId <String>] [-HubSite] [-AllowFileSharingForGuestUsers] [-TemplateIds <String[]>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 $site = New-PnPTenantSequenceCommunicationSite -Url \"/sites/mycommunicationsite\" -Title \"My Team Site\" Creates a new communication site object with the specified variables PARAMETERS -AllowFileSharingForGuestUsers Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Classification Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HubSite Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Language Type: UInt32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owner Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteDesignId Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateIds Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPTenantSequenceTeamNoGroupSite.html": {
    "href": "cmdlets/New-PnPTenantSequenceTeamNoGroupSite.html",
    "title": "New-PnPTenantSequenceTeamNoGroupSite | PnP PowerShell",
    "keywords": "New-PnPTenantSequenceTeamNoGroupSite SYNOPSIS Creates a new team site without a Microsoft 365 group in-memory object SYNTAX New-PnPTenantSequenceTeamNoGroupSite -Url <String> -Title <String> -TimeZoneId <UInt32> [-Language <UInt32>] [-Owner <String>] [-Description <String>] [-HubSite] [-TemplateIds <String[]>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 $site = New-PnPTenantSequenceTeamNoGroupSite -Url \"/sites/MyTeamSite\" -Title \"My Team Site\" Creates a new team site object with the specified variables PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HubSite Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Language Type: UInt32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owner Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateIds Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TimeZoneId Type: UInt32 Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPTenantSequenceTeamNoGroupSubSite.html": {
    "href": "cmdlets/New-PnPTenantSequenceTeamNoGroupSubSite.html",
    "title": "New-PnPTenantSequenceTeamNoGroupSubSite | PnP PowerShell",
    "keywords": "New-PnPTenantSequenceTeamNoGroupSubSite SYNOPSIS Creates a team site subsite with no Microsoft 365 group object SYNTAX New-PnPTenantSequenceTeamNoGroupSubSite -Url <String> -Title <String> -TimeZoneId <UInt32> [-Language <UInt32>] [-Description <String>] [-TemplateIds <String[]>] [-QuickLaunchDisabled] [-UseDifferentPermissionsFromParentSite] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 $site = New-PnPTenantSequenceTeamNoGroupSubSite -Url \"MyTeamSubsite\" -Title \"My Team Site\" -TimeZoneId 4 Creates a new team site subsite object with the specified variables PARAMETERS -Description Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Language Type: UInt32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -QuickLaunchDisabled Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateIds Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TimeZoneId Type: UInt32 Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UseDifferentPermissionsFromParentSite Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPTenantSequenceTeamSite.html": {
    "href": "cmdlets/New-PnPTenantSequenceTeamSite.html",
    "title": "New-PnPTenantSequenceTeamSite | PnP PowerShell",
    "keywords": "New-PnPTenantSequenceTeamSite SYNOPSIS Creates a team site object SYNTAX New-PnPTenantSequenceTeamSite -Alias <String> -Title <String> [-Description <String>] [-DisplayName <String>] [-Classification <String>] [-Public] [-HubSite] [-TemplateIds <String[]>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 $site = New-PnPTenantSequenceTeamSite -Alias \"MyTeamSite\" -Title \"My Team Site\" Creates a new team site object with the specified variables PARAMETERS -Alias Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Classification Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HubSite Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Public Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateIds Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPTenantSite.html": {
    "href": "cmdlets/New-PnPTenantSite.html",
    "title": "New-PnPTenantSite | PnP PowerShell",
    "keywords": "New-PnPTenantSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Creates a new (classic) site collection for the current tenant SYNTAX New-PnPTenantSite -Title <String> -Url <String> -Owner <String> [-Lcid <UInt32>] [-Template <String>] -TimeZone <Int32> [-ResourceQuota <Double>] [-ResourceQuotaWarningLevel <Double>] [-StorageQuota <Int64>] [-StorageQuotaWarningLevel <Int64>] [-RemoveDeletedSite] [-SharingCapability <SharingCapabilities>] [-Wait] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION The New-PnPTenantSite cmdlet creates a new site collection for the current company. However, creating a new SharePoint Online site collection fails if a deleted site with the same URL exists in the Recycle Bin EXAMPLES EXAMPLE 1 New-PnPTenantSite -Title Contoso -Url \"https://tenant.sharepoint.com/sites/contoso\" -Owner user@example.org -TimeZone 4 -Template STS#0 This will add a site collection with the title 'Contoso', the url 'https://tenant.sharepoint.com/sites/contoso', the timezone 'UTC+01:00',the owner 'user@example.org' and the template used will be STS#0, a TeamSite EXAMPLE 2 New-PnPTenantSite -Title Contoso -Url /sites/contososite -Owner user@example.org -TimeZone 4 -Template STS#0 This will add a site collection with the title 'Contoso', the url 'https://tenant.sharepoint.com/sites/contososite' of which the base part will be picked up from your current connection, the timezone 'UTC+01:00', the owner 'user@example.org' and the template used will be STS#0, a TeamSite PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Lcid Specifies the language of this site collection. For more information, see Locale IDs supported by SharePoint at https://github.com/pnp/powershell/wiki/Supported-LCIDs-by-SharePoint . To get the list of supported languages on a SharePoint environment use: Get-PnPAvailableLanguage. Type: UInt32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owner Specifies the user name of the site collection's primary owner. The owner must be a user instead of a security group or an email-enabled security group. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveDeletedSite Specifies if any existing site with the same URL should be removed from the recycle bin Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ResourceQuota Specifies the quota for this site collection in Sandboxed Solutions units. This value must not exceed the company's aggregate available Sandboxed Solutions quota. The default value is 0. For more information, see Resource Usage Limits on Sandboxed Solutions in SharePoint 2010 : https://docs.microsoft.com/previous-versions/office/developer/sharepoint-2010/gg615462(v=office.14) . Type: Double Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ResourceQuotaWarningLevel Specifies the warning level for the resource quota. This value must not exceed the value set for the ResourceQuota parameter Type: Double Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StorageQuota Specifies the storage quota for this site collection in megabytes. This value must not exceed the company's available quota. Type: Int64 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StorageQuotaWarningLevel Specifies the warning level for the storage quota in megabytes. This value must not exceed the values set for the StorageQuota parameter Type: Int64 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Template Specifies the site collection template type. Use the Get-PnPWebTemplates cmdlet to get the list of valid templates. If no template is specified, one can be added later. The Template and LocaleId parameters must be a valid combination as returned from the Get-PnPWebTemplates cmdlet. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TimeZone Use Get-PnPTimeZoneId to retrieve possible timezone values Type: Int32 Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Specifies the title of the new site collection Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Specifies the full URL of the new site collection. It must be in a valid managed path in the company's site. For example, for company contoso, valid managed paths are https://contoso.sharepoint.com/sites and https://contoso.sharepoint.com/teams . Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Wait Waits for the site collection to be fully provisioned. Type: SwitchParameter Parameter Sets: (All), (Wait) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SharingCapability Specifies what the sharing capabilities are for the site. Possible values: Disabled, ExternalUserSharingOnly, ExternalUserAndGuestSharing, ExistingExternalUserSharingOnly. It will only work if Wait parameter is specified. Type: SwitchParameter Parameter Sets: (Wait) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False Accepted values: Disabled, ExternalUserSharingOnly, ExternalUserAndGuestSharing, ExistingExternalUserSharingOnly RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPTenantTemplate.html": {
    "href": "cmdlets/New-PnPTenantTemplate.html",
    "title": "New-PnPTenantTemplate | PnP PowerShell",
    "keywords": "New-PnPTenantTemplate SYNOPSIS Creates a new tenant template object SYNTAX New-PnPTenantTemplate [-Author <String>] [-Description <String>] [-DisplayName <String>] [-Generator <String>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 $template = New-PnPTenantTemplate Creates a new instance of a tenant template object. PARAMETERS -Author Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Generator Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPTerm.html": {
    "href": "cmdlets/New-PnPTerm.html",
    "title": "New-PnPTerm | PnP PowerShell",
    "keywords": "New-PnPTerm SYNOPSIS Creates a taxonomy term SYNTAX New-PnPTerm -Name <String> [-Id <Guid>] [-Lcid <Int32>] [-TermSet] <TaxonomyTermSetPipeBind> -TermGroup <TaxonomyTermGroupPipeBind> [-Description <String>] [-CustomProperties <Hashtable>] [-LocalCustomProperties <Hashtable>] [-TermStore <TaxonomyTermStorePipeBind>] [<CommonParameters>] DESCRIPTION This cmdlet adds a new taxonony term to a given termset. EXAMPLES Example 1 New-PnPTerm -TermSet \"Departments\" -TermGroup \"Corporate\" -Name \"Finance\" Creates a new taxonomy term named \"Finance\" in the termset Departments which is located in the \"Corporate\" termgroup Example 2 New-PnPTerm -TermSet \"Departments\" -TermGroup \"Corporate\" -Name \"Finance\" -CustomProperties @{\"IsCorporate\"=\"True\"} Creates a new taxonomy term named \"Finance\" in the termset Departments which is located in the \"Corporate\" termgroup and sets a custom property on the termset. PARAMETERS -CustomProperties Sets custom properties. Type: Hashtable Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Descriptive text to help users understand the intended use of this term. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Id The Id to use for the term; if not specified, or provided with an empty GUID, a random GUID is generated and used. Type: Guid Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Lcid The locale id to use for the term. Defaults to the default language of the termstore. Type: Int32 Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LocalCustomProperties Sets local custom properties Type: Hashtable Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The name of the term. Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermGroup The termgroup to create the term in. Type: TaxonomyTermGroupPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermSet The termset to add the term to. Type: TaxonomyTermSetPipeBind Parameter Sets: (All) Aliases: Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermStore Term store to use; if not specified the default term store is used. Type: TaxonomyTermStorePipeBind Parameter Sets: (All) Aliases: TermStoreName Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPTermGroup.html": {
    "href": "cmdlets/New-PnPTermGroup.html",
    "title": "New-PnPTermGroup | PnP PowerShell",
    "keywords": "New-PnPTermGroup SYNOPSIS Creates a taxonomy term group SYNTAX New-PnPTermGroup -Name <String> [-Id <Guid>] [-Description <String>] [-TermStore <PnP.PowerShell.Commands.Base.PipeBinds.GenericObjectNameIdPipeBind`1[Microsoft.SharePoint.Client.Taxonomy.TermStore]>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 New-PnPTermGroup -GroupName \"Countries\" Creates a new taxonomy term group named \"Countries\" PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Description to use for the term group. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Id GUID to use for the term group; if not specified, or the empty GUID, a random GUID is generated and used. Type: Guid Parameter Sets: (All) Aliases: GroupId Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name Name of the taxonomy term group to create. Type: String Parameter Sets: (All) Aliases: GroupName Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermStore Term store to add the group to; if not specified the default term store is used. Type: PnP.PowerShell.Commands.Base.PipeBinds.GenericObjectNameIdPipeBind`1[Microsoft.SharePoint.Client.Taxonomy.TermStore] Parameter Sets: (All) Aliases: TermStoreName Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPTermLabel.html": {
    "href": "cmdlets/New-PnPTermLabel.html",
    "title": "New-PnPTermLabel | PnP PowerShell",
    "keywords": "New-PnPTermLabel SYNOPSIS Creates a localized label for a taxonomy term SYNTAX New-PnPTermLabel -Term <TaxonomyTermPipeBind> -Name <String> -Lcid <Int32> [-IsDefault] [<CommonParameters>] DESCRIPTION Creates a localized label for a taxonomy term. Use Get-PnPTerm -Include Labels to request the current labels on a taxonomy term. EXAMPLES EXAMPLE 1 New-PnPTermLabel -Name \"Finanzwesen\" -Lcid 1031 -Term (Get-PnPTerm -Identity \"Finance\" -TermSet \"Departments\" -TermGroup \"Corporate\") Creates a new localized taxonomy label in German (LCID 1031) named \"Finanzwesen\" for the term \"Finance\" in the termset Departments which is located in the \"Corporate\" termgroup EXAMPLE 2 Get-PnPTerm -Identity \"Finance\" -TermSet \"Departments\" -TermGroup \"Corporate\" | New-PnPTermLabel -Name \"Finanzwesen\" -Lcid 1031 Creates a new localized taxonomy label in German (LCID 1031) named \"Finanzwesen\" for the term \"Finance\" in the termset Departments which is located in the \"Corporate\" termgroup PARAMETERS -IsDefault Makes this new label the default label Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Lcid The locale id to use for the localized term Type: Int32 Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The localized name of the term Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Term The term to add the localized label to. Type: TaxonomyTermPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPTermSet.html": {
    "href": "cmdlets/New-PnPTermSet.html",
    "title": "New-PnPTermSet | PnP PowerShell",
    "keywords": "New-PnPTermSet SYNOPSIS Creates a taxonomy term set SYNTAX New-PnPTermSet -Name <String> [-Id <Guid>] [-Lcid <Int32>] -TermGroup <TermGroupPipeBind> [-Contact <String>] [-Description <String>] [-IsOpenForTermCreation] [-IsNotAvailableForTagging] [-Owner <String>] [-StakeHolders <String[]>] [-CustomProperties <Hashtable>] [-TermStore <PnP.PowerShell.Commands.Base.PipeBinds.GenericObjectNameIdPipeBind`1[Microsoft.SharePoint.Client.Taxonomy.TermStore]>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 New-PnPTermSet -Name \"Department\" -TermGroup \"Corporate\" Creates a new termset named \"Department\" in the group named \"Corporate\" PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Contact An e-mail address for term suggestion and feedback. If left blank the suggestion feature will be disabled. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CustomProperties Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Descriptive text to help users understand the intended use of this term set. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Id The Id to use for the term set; if not specified, or the empty GUID, a random GUID is generated and used. Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsNotAvailableForTagging By default a term set is available to be used by end users and content editors of sites consuming this term set. Specify this switch to turn this off Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsOpenForTermCreation When a term set is closed, only metadata managers can add terms to this term set. When it is open, users can add terms from a tagging application. Not specifying this switch will make the term set closed. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Lcid The locale id to use for the term set. Defaults to the current locale id. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The name of the termset. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Owner The primary user or group of this term set. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StakeHolders People and groups in the organization that should be notified before major changes are made to the term set. You can enter multiple users or groups. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermGroup Name, id or actually termgroup to create the termset in. Type: TermGroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermStore Term store to use; if not specified the default term store is used. Type: PnP.PowerShell.Commands.Base.PipeBinds.GenericObjectNameIdPipeBind`1[Microsoft.SharePoint.Client.Taxonomy.TermStore] Parameter Sets: (All) Aliases: TermStoreName Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPUPABulkImportJob.html": {
    "href": "cmdlets/New-PnPUPABulkImportJob.html",
    "title": "New-PnPUPABulkImportJob | PnP PowerShell",
    "keywords": "New-PnPUPABulkImportJob SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Submit up a new user profile bulk import job. SYNTAX New-PnPUPABulkImportJob [-Folder] <String> [-Path] <String> [-UserProfilePropertyMapping] <Hashtable> [-IdProperty] <String> [[-IdType] <ImportProfilePropertiesUserIdType>] [-Wait] [-Verbose] [-Connection <PnPConnection>] [<CommonParameters>] New-PnPUPABulkImportJob -Url <String> [-UserProfilePropertyMapping] <Hashtable> [-IdProperty] <String> [[-IdType] <ImportProfilePropertiesUserIdType>] [-Wait] [-Verbose] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION See https://docs.microsoft.com/sharepoint/dev/solution-guidance/bulk-user-profile-update-api-for-sharepoint-online for information on the API and how the bulk import process works. EXAMPLES EXAMPLE 1 @\" { \"value\": [ { \"IdName\": \"mikaels@contoso.com\", \"Department\": \"PnP\", }, { \"IdName\": \"vesaj@contoso.com\", \"Department\": \"PnP\", } ] } \"@ > profiles.json New-PnPUPABulkImportJob -Folder \"Shared Documents\" -Path profiles.json -IdProperty \"IdName\" -UserProfilePropertyMapping @{\"Department\"=\"Department\"} This will submit a new user profile bulk import job to SharePoint Online using a local file. EXAMPLE 2 New-PnPUPABulkImportJob -Url \"https://{tenant}.sharepoint.com/Shared Documents/profiles.json\" -IdProperty \"IdName\" -UserProfilePropertyMapping @{\"Department\"=\"Department\"} This will submit a new user profile bulk import job to SharePoint Online using an already uploaded file. EXAMPLE 3 New-PnPUPABulkImportJob -Url \"https://{tenant}.sharepoint.com/sites/userprofilesync/Shared Documents/profiles.json\" -IdProperty \"IdName\" -UserProfilePropertyMapping @{\"Department\"=\"Department\"} -Wait -Verbose This will submit a new user profile bulk import job to SharePoint Online using an already uploaded file and will wait until the import has finished. PARAMETERS -Folder Site or server relative URL of the folder to where you want to store the import job file. Type: String Parameter Sets: Submit up a new user profile bulk import job from local file Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -IdProperty The name of the property identifying the user in your JSON file to update the user profile for Type: String Parameter Sets: (All) Required: True Position: 3 Default value: None Accept pipeline input: False Accept wildcard characters: False -IdType The type of profile identifier (Email/CloudId/PrincipalName). Defaults to Email. Type: ImportProfilePropertiesUserIdType Parameter Sets: (All) Accepted values: Email, CloudId, PrincipalName Required: False Position: 4 Default value: Email Accept pipeline input: False Accept wildcard characters: False -Path The local file path of the JSON file to use for the user profile import Type: String Parameter Sets: Submit up a new user profile bulk import job from local file Required: True Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -Url The full url of the JSON file saved in SharePoint Online containing the identities and properties to import into the SharePoint Online User Profiles Type: String Parameter Sets: Submit up a new user profile bulk import job job from url Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UserProfilePropertyMapping Specify user profile property mapping between the import file and UPA property names, i.e. @{\"JobTitle\"=\"Title\"} where the left side represents the property in the JSON file and the right side the name of the property in the SharePoint Online User Profile Service. Type: Hashtable Parameter Sets: (All) Required: True Position: 2 Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Wait Adding this parameter will cause the script to start the user profile sync operation and wait with proceeding with the rest of the script until the user profiles have been imported into the SharePoint Online user profile. It can take a long time for the user profile sync operation to complete. It will check every 30 seconds for the current status of the job, to avoid getting throttled. The check interval is non configurable. Add -Verbose as well to be notified about the progress while waiting. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while going through the user profile sync steps. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Bulk update custom user profile properties for SharePoint Online"
  },
  "cmdlets/New-PnPUser.html": {
    "href": "cmdlets/New-PnPUser.html",
    "title": "New-PnPUser | PnP PowerShell",
    "keywords": "New-PnPUser SYNOPSIS Adds a user to the built-in Site User Info List and returns a user object SYNTAX New-PnPUser -LoginName <String> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 New-PnPUser -LoginName user@company.com Adds a new user with the login user@company.com to the current site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LoginName The users login name (user@company.com) Type: String Parameter Sets: (All) Aliases: LogonName Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/New-PnPWeb.html": {
    "href": "cmdlets/New-PnPWeb.html",
    "title": "New-PnPWeb | PnP PowerShell",
    "keywords": "New-PnPWeb SYNOPSIS Creates a new subweb under the current web SYNTAX New-PnPWeb -Title <String> -Url <String> [-Description <String>] [-Locale <Int32>] -Template <String> [-BreakInheritance] [-InheritNavigation] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 New-PnPWeb -Title \"Project A Web\" -Url projectA -Description \"Information about Project A\" -Locale 1033 -Template \"STS#0\" Creates a new subweb under the current web with URL projectA PARAMETERS -BreakInheritance By default the subweb will inherit its security from its parent, specify this switch to break this inheritance Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the new web Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InheritNavigation Specifies whether the site inherits navigation. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Locale The language id of the new web. default = 1033 for English Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Template The site definition template to use for the new web, e.g. STS#0. Use Get-PnPWebTemplates to fetch a list of available templates Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the new web Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url The URL of the new web Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Publish-PnPApp.html": {
    "href": "cmdlets/Publish-PnPApp.html",
    "title": "Publish-PnPApp | PnP PowerShell",
    "keywords": "Publish-PnPApp SYNOPSIS Publishes/Deploys/Trusts an available app in the app catalog SYNTAX Publish-PnPApp [-Identity] <AppMetadataPipeBind> [-SkipFeatureDeployment] [-Scope <AppCatalogScope>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Publish-PnPApp -Identity 2646ccc3-6a2b-46ef-9273-81411cbbb60f This will deploy/trust an app into the app catalog. Notice that the app needs to be available in the tenant scoped app catalog EXAMPLE 2 Publish-PnPApp -Identity 2646ccc3-6a2b-46ef-9273-81411cbbb60f -Scope Site This will deploy/trust an app into the app catalog. Notice that the app needs to be available in the site collection scoped app catalog PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the Id of the app Type: AppMetadataPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Scope Defines which app catalog to use. Defaults to Tenant Type: AppCatalogScope Parameter Sets: (All) Accepted values: Tenant, Site Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SkipFeatureDeployment Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Publish-PnPCompanyApp.html": {
    "href": "cmdlets/Publish-PnPCompanyApp.html",
    "title": "Publish-PnPCompanyApp | PnP PowerShell",
    "keywords": "Publish-PnPCompanyApp SYNOPSIS This cmdlet publishes a new company app to Microsoft Teams. SYNTAX Publish-PnPCompanyApp -PortalUrl <String> -AppName <String> [-Description <String>] [-LongDescription <String>] [-PrivacyPolicyUrl <String>] [-TermsAndUsagePolicyUrl <String>] -CompanyName <String> -CompanyWebSiteUrl <String> -ColoredIconPath <String> -OutlineIconPath <String> [-Force] [-NoUpload] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This cmdlet publishes a new company app (Microsoft Viva Connections) to Microsoft Teams. It will create a new package (zip file) in the current folder named after the CompanyApp value specified. E.g. if the name is 'Contoso Portal', the package will be called \"Contoso Portal.zip\". This package will be uploaded to the Teams App Catalog. If you do not want to upload the package automatically, e.g. prepare a package ahead of time, specify '-NoUpload'. EXAMPLES Example 1 Publish-PnPCompanyApp -PortalUrl https://contoso.sharepoint.com/sites/portal -AppName \"Contoso Portal\" -CompanyName \"Contoso\" -CompanyWebSite \"https://www.contoso.com\" -ColoredIconPath ./coloricon.png -OutlineIconPath ./outlinedicon This will create a new zip file called \"Contoso Portal.zip\" and it will upload this app to the Teams App Catalog. PARAMETERS -AppName The name of the app as you want to it to appear in Teams. Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ColoredIconPath The path to the color icon (192x192px) Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CompanyName The name of your company/organization. Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CompanyWebSiteUrl The link to the public website of your company / organization. Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description A short description for the app (less than 80 characters) Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force This will overwrite an existing zip file if present and no confirmation will be asked. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LongDescription A longer description for the app (less than 4000 characters) Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NoUpload If specified the app package will not be uploaded to the Teams App Catalog. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OutlineIconPath The path to the outline icon (32x32 px) Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PortalUrl The URL to the site you want to use in the app. This has to be a Communication Site. Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PrivacyPolicyUrl Privacy policy link for the app. If not specified the default privacy policy link from Microsoft will be used. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermsAndUsagePolicyUrl The Terms of Use link for the app. If not specified the default Terms of Use from Microsoft link will be used. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Publish-PnPContentType.html": {
    "href": "cmdlets/Publish-PnPContentType.html",
    "title": "Publish-PnPContentType | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Publish-PnPContentType SYNOPSIS Required Permissions Fullcontrol permission on the content type hub site. Publishes or republishes a content type present on content type hub site. SYNTAX Publish-PnPContentType -ContentType <ContentTypePipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Publish-PnPContentType -ContentType 0x0101 This will publish the content type with the given id. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType The content type object in the content type hub site which is to be published. Type: ContentType Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Publish-PnPSyntexModel.html": {
    "href": "cmdlets/Publish-PnPSyntexModel.html",
    "title": "Publish-PnPSyntexModel | PnP PowerShell",
    "keywords": "Publish-PnPSyntexModel SYNOPSIS Publishes a SharePoint Syntex models to a list. This cmdlet only works when you've connected to a SharePoint Syntex Content Center site. SYNTAX Single Publish-PnPSyntexModel -Model <SyntexModelPipeBind> -ListWebUrl <string> -List <ListPipeBind> [-PublicationViewOption <MachineLearningPublicationViewOption>] [-Connection <PnPConnection>] [<CommonParameters>] Batched Publish-PnPSyntexModel -Model <SyntexModelPipeBind> -TargetSiteUrl <string> -TargetWebServerRelativeUrl <string> -TargetLibraryServerRelativeUrl <string> -Batch <PnPBatch> [-PublicationViewOption <MachineLearningPublicationViewOption>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This command publishes a SharePoint Syntex content understanding models to a list. EXAMPLES EXAMPLE 1 Publish-PnPSyntexModel -Model \"Invoice model\" -ListWebUrl \"https://contoso.sharepoint.com/sites/finance\" -List \"Documents\" Publishes the content understanding model named \"Invoice model\" to the list named \"Documents\" in the /sites/finance web. EXAMPLE 2 Publish-PnPSyntexModel -Model \"Invoice model\" -TargetSiteUrl \"https://contoso.sharepoint.com/sites/finance\" -TargetWebServerRelativeUrl \"/sites/finance\" -TargetLibraryServerRelativeUrl \"/sites/finance/shared%20documents\" -Batch $batch Adds the publishing of the content understanding model named \"Invoice model\" to the \"Shared Documents\" library into the PnPBatch $batch. Use Invoke-PnPBatch -Batch $batch to execute the batch, use $batch = New-PnPBatch to create a batch. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Model The name or id of the SharePoint Syntex model. Type: SyntexModelPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -ListWebUrl Url of the web hosting the list to publish the model to. Type: String Parameter Sets: Single Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The name or id of the list to publish the model to. Type: ListPipeBind Parameter Sets: Single Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TargetSiteUrl The fully qualified URL of the site collection hosting the library to publish the model to. Type: String Parameter Sets: Batched Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TargetWebServerRelativeUrl The server relative url of the web hosting the library to publish the model to. Type: String Parameter Sets: Batched Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TargetLibraryServerRelativeUrl The server relative url of the library to publish the model to. Type: String Parameter Sets: Batched Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Batch The batch to add this publish request to. Type: PnPBatch Parameter Sets: Batched Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -PublicationViewOption The view options to apply when publishing the model to the list. Type: MachineLearningPublicationViewOption Parameter Sets: (All) Accepted values: NewView, NewViewAsDefault, NoNewView Required: False Position: Named Default value: NewViewAsDefault Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Read-PnPSiteTemplate.html": {
    "href": "cmdlets/Read-PnPSiteTemplate.html",
    "title": "Read-PnPSiteTemplate | PnP PowerShell",
    "keywords": "Read-PnPSiteTemplate SYNOPSIS Loads/Reads a PnP file from the file system, string or stream SYNTAX By Path Read-PnPSiteTemplate [-Path] <String> [-TemplateProviderExtensions <ITemplateProviderExtension[]>] [<CommonParameters>] By XML Read-PnPSiteTemplate [-Xml] <String> [-TemplateProviderExtensions <ITemplateProviderExtension[]>] [<CommonParameters>] From a Stream Read-PnPSiteTemplate [-Stream] <Stream> [-TemplateProviderExtensions <ITemplateProviderExtension[]>] [<CommonParameters>] DESCRIPTION This cmdlet allows you to read a PnP Provisioning Template from disk, by passing in XML as text or from a stream to keep it in memory and not needing to physically save the template anywhere. The template can be modified in memory if needed and then applied to a site. EXAMPLES EXAMPLE 1 Read-PnPSiteTemplate -Path template.pnp Loads a PnP file from the file system EXAMPLE 2 Read-PnPSiteTemplate -Path template.pnp -TemplateProviderExtensions $extensions Loads a PnP file from the file system using some custom template provider extensions while loading the file. EXAMPLE 3 Read-PnPSiteTemplate -Xml $xml Reads a PnP Provisioning template from a string containing the XML of a provisioning template EXAMPLE 4 $stream = Get-PnPFile -Url \"/sites/templates/Site Templates/sample1.pnp\" -AsMemoryStream Read-PnPSiteTemplate -Stream $stream Downloads the contents of a PnP Provisioning template from a SharePoint Online location in memory and parses it as a PnP Provisioning Template PARAMETERS -Path Filename to read from, optionally including full path. Type: String Parameter Sets: By Path Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateProviderExtensions Allows you to specify ITemplateProviderExtension to execute while loading the template. Type: ITemplateProviderExtension[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Xml Variable to read from, containing the valid XML of a provisioning template. Type: String Parameter Sets: By XML Required: True Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -Stream Stream containing an XML or PNP provisioning template package Type: Stream Parameter Sets: By Stream Required: True Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Read-PnPTenantTemplate.html": {
    "href": "cmdlets/Read-PnPTenantTemplate.html",
    "title": "Read-PnPTenantTemplate | PnP PowerShell",
    "keywords": "Read-PnPTenantTemplate SYNOPSIS Loads/Reads a PnP tenant template from the file system and returns an in-memory instance of this template. SYNTAX Read-PnPTenantTemplate [-Path] <String> DESCRIPTION EXAMPLES EXAMPLE 1 Read-PnPTenantTemplate -Path template.pnp Reads a PnP tenant template file from the file system and returns an in-memory instance PARAMETERS -Path Filename to read from, optionally including full path. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Receive-PnPCopyMoveJobStatus.html": {
    "href": "cmdlets/Receive-PnPCopyMoveJobStatus.html",
    "title": "Receive-PnPCopyMoveJobStatus | PnP PowerShell",
    "keywords": "Receive-PnPCopyMoveJobStatus SYNOPSIS This cmdlets receives Copy or Move job status which is being returned by Copy-PnPFile or Move-PnPFile when using the -NoWait parameter SYNTAX Receive-PnPCopyMoveJobStatus -Job <CopyMigrationInfo> [-Wait] DESCRIPTION This cmdlets outputs the results of a pending/finished copy or move job. EXAMPLES Example 1 $job = Copy-PnPFile -SourceUrl \"Shared Documents/company.docx\" -TargetUrl \"SubSite2/Shared Documents\" -NoWait $jobStatus = Receive-PnPCopyMoveJobStatus -Job $job if($jobStatus.JobState == 0) { Write-Host \"Job finished\" } Copies a file named company.docx from the current document library to the documents library in SubSite2. It will not wait for the action to return but returns job information instead. The Receive-PnPCopyMoveJobStatus cmdlet will return the job status. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Job The job which is returned from Copy-PnPFile or Move-PnPFile Type: CopyMigrationInfo Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Wait If specified the cmdlet will continue to poll the job to be finished. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Register-PnPAppCatalogSite.html": {
    "href": "cmdlets/Register-PnPAppCatalogSite.html",
    "title": "Register-PnPAppCatalogSite | PnP PowerShell",
    "keywords": "Register-PnPAppCatalogSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Creates a new App Catalog Site and sets this site as the Tenant App Catalog SYNTAX Register-PnPAppCatalogSite -Url <String> -Owner <String> -TimeZoneId <Int32> [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Register-PnPAppCatalogSite -Url \"https://yourtenant.sharepoint.com/sites/appcatalog\" -Owner admin@domain.com -TimeZoneId 4 This will create a new appcatalog site if no app catalog is already present. Use -Force to create a new appcatalog site if one has already been registered. If using the same URL as an existing one and Force is present, the current/existing appcatalog site will be deleted. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If specified, and an app catalog is already present, a new app catalog site will be created. If the same URL is used the existing/current app catalog site will be deleted first. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owner The login account of the user designated to be the admin for the site, e.g. user@domain.com Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TimeZoneId Use Get-PnPTimeZoneId to retrieve possible timezone values Type: Int32 Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url The full url of the app catalog site to be created, e.g. https://yourtenant.sharepoint.com/sites/appcatalog Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Register-PnPAzureADApp.html": {
    "href": "cmdlets/Register-PnPAzureADApp.html",
    "title": "Register-PnPAzureADApp | PnP PowerShell",
    "keywords": "Register-PnPAzureADApp SYNOPSIS Register an Azure AD App and optionally creates a new self-signed certificate to use with the application registration. SYNTAX Generate Certificate Register-PnPAzureADApp -ApplicationName <String> -Tenant <String> [-Username <String>] [-Password <SecureString>] [-DeviceLogin] [-Interactive] [-CommonName <String>] [-OutPath <String>] [-Store <StoreLocation>] [-GraphApplicationPermissions <Permission[]>] [-GraphDelegatePermissions <Permission[]>] [-SharePointApplicationPermissions <Permission[]>] [-SharePointDelegatePermissions <Permission[]>] [-Country <String>] [-State <String>] [-Locality <String>] [-Organization <String>] [-OrganizationUnit <String>] [-ValidYears <Int>] [-CertificatePassword <SecureString>] [-NoPopup] Existing Certificate Register-PnPAzureADApp -CertificatePath <String> -ApplicationName <String> -Tenant <String> [-Username <String>] [-Password <SecureString>] [-DeviceLogin] [-Interactive] [-GraphApplicationPermissions <Permission[]>] [-GraphDelegatePermissions <Permission[]>] [-SharePointApplicationPermissions <Permission[]>] [-SharePointDelegatePermissions <Permission[]>] [-CertificatePassword <SecureString>] [-NoPopup] DESCRIPTION Registers an Azure AD App and optionally creates a new self-signed certificate to use with the application registration. You can login either with username/password or you can use the -DeviceLogin option if your tenant has been configured for Multi-Factor Authentication. Note: if you want to use the newly created app to authentication with username/password you will have to make a modification to the app. Navigate to the application registration in your Azure AD, select the Authentication section, and set Allow public client flows to yes . Alternatively, navigate to the Manifest section and set allowPublicClient to true . EXAMPLES ------------------EXAMPLE 1------------------ Register-PnPAzureADApp -ApplicationName TestApp -Tenant yourtenant.onmicrosoft.com -Store CurrentUser -Username \"yourname@domain.com\" -Password (Read-Host -AsSecureString -Prompt \"Enter Password\") Creates a new Azure AD Application registration, creates a new self signed certificate, and adds it to the local certificate store. It will upload the certificate to the azure app registration and it will request the following permissions: Sites.FullControl.All, Group.ReadWrite.All, User.Read.All ------------------EXAMPLE 2------------------ Register-PnPAzureADApp -ApplicationName TestApp -Tenant yourtenant.onmicrosoft.com -CertificatePath c:\\certificate.pfx -CertificatePassword (ConvertTo-SecureString -String \"password\" -AsPlainText -Force) -Username \"yourname@domain.com\" -Password (Read-Host -AsSecureString -Prompt \"Enter password\") Creates a new Azure AD Application registration which will use the existing private key certificate at the provided path to allow access. It will upload the provided private key certificate to the azure app registration and it will request the following permissions: Sites.FullControl.All, Group.ReadWrite.All, User.Read.All ------------------EXAMPLE 3------------------ Register-PnPAzureADApp -ApplicationName TestApp -Tenant yourtenant.onmicrosoft.com -Store CurrentUser -GraphApplicationPermissions \"User.Read.All\" -SharePointApplicationPermissions \"Sites.Read.All\" -Username \"yourname@domain.com\" -Password (Read-Host -AsSecureString -Prompt \"Enter Password\") Creates a new Azure AD Application registration, creates a new self signed certificate, and adds it to the local certificate store. It will upload the certificate to the azure app registration and it will request the following permissions: Sites.Read.All, User.Read.All ------------------EXAMPLE 4------------------ Register-PnPAzureADApp -ApplicationName TestApp -Tenant yourtenant.onmicrosoft.com -OutPath c:\\ -CertificatePassword (ConvertTo-SecureString -String \"password\" -AsPlainText -Force) -Username \"yourname@domain.com\" -Password (Read-Host -AsSecureString -Prompt \"Enter Password\") Creates a new Azure AD Application registration, creates a new self signed certificate, and stores the public and private key certificates in c:. The private key certificate will be locked with the password \"password\". It will upload the certificate to the azure app registration and it will request the following permissions: Sites.FullControl.All, Group.ReadWrite.All, User.Read.All ------------------EXAMPLE 5------------------ Register-PnPAzureADApp -DeviceLogin -ApplicationName TestApp -Tenant yourtenant.onmicrosoft.com -CertificatePath c:\\certificate.pfx -CertificatePassword (ConvertTo-SecureString -String \"password\" -AsPlainText -Force) Creates a new Azure AD Application registration and asks you to authenticate using device login methods, creates a new self signed certificate, and adds it to the local certificate store. It will upload the certificate to the azure app registration and it will request the following permissions: Sites.FullControl.All, Group.ReadWrite.All, User.Read.All ------------------EXAMPLE 6------------------ Register-PnPAzureADApp -Interactive -ApplicationName TestApp -Tenant yourtenant.onmicrosoft.com -CertificatePath c:\\certificate.pfx -CertificatePassword (ConvertTo-SecureString -String \"password\" -AsPlainText -Force) Creates a new Azure AD Application registration and asks you to authenticate using username and password, creates a new self signed certificate, and adds it to the local certificate store. It will upload the certificate to the azure app registration and it will request the following permissions: Sites.FullControl.All, Group.ReadWrite.All, User.Read.All PARAMETERS -Username The username to use when logging into the Microsoft Graph. Notice that this user account needs to have write access to the Azure AD Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -Password The password to use when logging into the Microsoft Graph Type: String Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -DeviceLogin If specified, a device login flow, supporting Multi-Factor Authentication will be used to authenticate towards the Microsoft Graph Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False -ApplicationName The name of the Azure AD Application to create Type: String Parameter Sets: (All) Required: True Position: Named Accept pipeline input: False -CertificatePassword Optional certificate password Type: SecureString Parameter Sets: (All) Required: False Position: 8 Accept pipeline input: False -CertificatePath File path to use an existing certificate Type: String Parameter Sets: Existing Certificate Required: True Position: Named Accept pipeline input: False -CommonName Common Name (e.g. server FQDN or YOUR name). defaults to 'pnp.contoso.com' Type: String Parameter Sets: Generate Certificate Required: False Position: 0 Accept pipeline input: False -Country Country Name (2 letter code) Type: String Parameter Sets: Generate Certificate Required: False Position: 1 Accept pipeline input: False -Locality Locality Name (eg, city) Type: String Parameter Sets: Generate Certificate Required: False Position: 3 Accept pipeline input: False -Organization Organization Name (eg, company) Type: String Parameter Sets: Generate Certificate Required: False Position: 4 Accept pipeline input: False -OrganizationUnit Organizational Unit Name (eg, section) Type: String Parameter Sets: Generate Certificate Required: False Position: 5 Accept pipeline input: False -OutPath Folder to create certificate files in (.CER and .PFX) Type: String Parameter Sets: Generate Certificate Required: False Position: Named Accept pipeline input: False -GraphApplicationPermissions Specify which Microsoft Graph Application permissions to request. Type: Permission[] Parameter Sets: Generate Certificate Required: False Position: 0 Accept pipeline input: False -GraphDelegatePermissions Specify which Microsoft Graph Delegate permissions to request. Type: Permission[] Parameter Sets: Generate Certificate Required: False Position: 0 Accept pipeline input: False -SharePointApplicationPermissions Specify which Microsoft SharePoint Application permissions to request. Type: Permission[] Parameter Sets: Generate Certificate Required: False Position: 0 Accept pipeline input: False -SharePointDelegatePermissions Specify which Microsoft SharePoint Delegate permissions to request. Type: Permission[] Parameter Sets: Generate Certificate Required: False Position: 0 Accept pipeline input: False -State State or Province Name (full name) Type: String Parameter Sets: Generate Certificate Required: False Position: 2 Accept pipeline input: False -Store Local Certificate Store to add the certificate to. Only works on Microsoft Windows. Type: StoreLocation Parameter Sets: Generate Certificate Required: False Position: Named Accept pipeline input: False -Tenant The identifier of your tenant, e.g. mytenant.onmicrosoft.com Type: String Parameter Sets: (All) Required: True Position: Named Accept pipeline input: False -ValidYears Number of years until expiration (default is 10, max is 30) Type: Int Parameter Sets: Generate Certificate Required: False Position: 7 Accept pipeline input: False -NoPopup This switch only applies to Windows and has no effect on Linux and MacOS. If not specified and running on Windows, all authentication and consent steps will be presented in a popup. If you want to open the URLs manually in a browser, specify this switch. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Register-PnPHubSite.html": {
    "href": "cmdlets/Register-PnPHubSite.html",
    "title": "Register-PnPHubSite | PnP PowerShell",
    "keywords": "Register-PnPHubSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Registers a site as a hubsite SYNTAX Register-PnPHubSite -Site <SitePipeBind> [-Principals <String[][]>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Registers a site as a hubsite EXAMPLES EXAMPLE 1 Register-PnPHubSite -Site \"https://tenant.sharepoint.com/sites/myhubsite\" This example registers the specified site as a hubsite EXAMPLE 2 Register-PnPHubSite -Site \"https://tenant.sharepoint.com/sites/myhubsite\" -Principals \"user@contoso.com\" This example registers the specified site as a hubsite and specifies that 'user@contoso.com' be granted rights to the hub site. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site The site to register as a hubsite Type: SitePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Principals Specifies One or more principles (user or group) to be granted rights to the specified HubSite. Can be used to filter who can associate sites to this hub site. Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Register-PnPManagementShellAccess.html": {
    "href": "cmdlets/Register-PnPManagementShellAccess.html",
    "title": "Register-PnPManagementShellAccess | PnP PowerShell",
    "keywords": "Register-PnPManagementShellAccess SYNOPSIS Registers access to the tenant for the PnP Management Shell Multi-Tenant Azure AD Application SYNTAX Main Register-PnPManagementShellAccess [-AzureEnvironment <AzureEnvironment>] [<CommonParameters>] Show Consent Url Register-PnPManagementShellAccess -ShowConsentUrl [-AzureEnvironment] DESCRIPTION This cmdlet grants access to the tenant for the PnP Management Shell Multi-Tenant Azure AD Application which simplifies the use of OAuth based access for PnP PowerShell when using credentials to authenticate. If you are not an administrator that can consent Azure AD Applications, use the -ShowConsentUrl option. It will ask you to log in and provides you with an URL you can share with a person with appropriate access rights to provide consent for the organization. EXAMPLES EXAMPLE 1 Register-PnPManagementShellAccess EXAMPLE 2 Register-PnPManagementShellAccess -ShowConsentUrl Launches the consent flow to grant the PnP Management Shell Azure AD Application delegate access to the tenant and also displays the consent URL which can be shared with Azure AD administrators or Global administrators. EXAMPLE 3 Register-PnPManagementShellAccess -ShowConsentUrl -TenantName yourtenant.onmicrosoft.com Displays the consent URL which can be shared with Azure AD administrators or Global administrators. PARAMETERS -ShowConsentUrl If specified you will be asked to authenticate to acquire the tenant id. An url that can be used to provide consent will be returned. Type: SwitchParameter Parameter Sets: Show Consent Url Required: False Position: Named Accept pipeline input: False Accept wildcard characters: False -AzureEnvironment The Azure environment to use for authentication, the defaults to 'Production' which is the main Azure environment. Type: AzureEnvironment Parameter Sets: (All) Accepted values: Production, PPE, China, Germany, USGovernment Required: False Position: Named Default value: Production Accept pipeline input: False Accept wildcard characters: False -TenantName The name of the tenant. Example - ( yourtenant.onmicrosoft.com) Type: SwitchParameter Parameter Sets: Show Consent Url Required: False Position: Named Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPAdaptiveScopeProperty.html": {
    "href": "cmdlets/Remove-PnPAdaptiveScopeProperty.html",
    "title": "Remove-PnPAdaptiveScopeProperty | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Remove-PnPAdaptiveScopeProperty SYNOPSIS Removes a value from the current web property bag SYNTAX Remove-PnPAdaptiveScopeProperty [-Key] <String> [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This cmdlet is used to remove a property bag value. Executing this cmdlet removes a value from the current web property bag just like Remove-PnPPropertyBagValue would do, but also takes care of toggling the noscript value to allow for this to be possible in one cmdlet. Using this cmdlet does therefore require having the SharePoint Online Admin role or equivallent app permissions. EXAMPLES EXAMPLE 1 Remove-PnPAdaptiveScopeProperty -Key MyKey This will remove the value with key MyKey from the current web property bag EXAMPLE 2 Remove-PnPAdaptiveScopeProperty -Key MyKey -Force This will remove the value with key MyKey from the current web property bag without prompting for confirmation PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Key Key of the property bag value to be removed Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft 365 Information Governance Adaptive policy scopes"
  },
  "cmdlets/Remove-PnPAlert.html": {
    "href": "cmdlets/Remove-PnPAlert.html",
    "title": "Remove-PnPAlert | PnP PowerShell",
    "keywords": "Remove-PnPAlert SYNOPSIS Removes an alert for a user SYNTAX Remove-PnPAlert [-User <UserPipeBind>] -Identity <AlertPipeBind> [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPAlert -Identity 641ac67f-0ce0-4837-874a-743c8f8572a7 Removes the alert with the specified ID for the current user EXAMPLE 2 Remove-PnPAlert -Identity 641ac67f-0ce0-4837-874a-743c8f8572a7 -User \"i:0#.f|membership|Alice@contoso.onmicrosoft.com\" Removes the alert with the specified ID for the user specified PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The alert id, or the actual alert object to remove. Type: AlertPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User User to remove the alert for (User ID, login name or actual User object). Skip this parameter to use the current user. Note: Only site owners can remove alerts for other users. Type: UserPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPApp.html": {
    "href": "cmdlets/Remove-PnPApp.html",
    "title": "Remove-PnPApp | PnP PowerShell",
    "keywords": "Remove-PnPApp SYNOPSIS Removes an app from the app catalog SYNTAX Remove-PnPApp [-Identity] <AppMetadataPipeBind> [-Scope <AppCatalogScope>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe This will remove the specified app from the tenant scoped app catalog EXAMPLE 2 Remove-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Scope Site This will remove the specified app from the site collection scoped app catalog PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the Id of the Addin Instance Type: AppMetadataPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Scope Defines which app catalog to use. Defaults to Tenant Type: AppCatalogScope Parameter Sets: (All) Accepted values: Tenant, Site Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPApplicationCustomizer.html": {
    "href": "cmdlets/Remove-PnPApplicationCustomizer.html",
    "title": "Remove-PnPApplicationCustomizer | PnP PowerShell",
    "keywords": "Remove-PnPApplicationCustomizer SYNOPSIS Removes a SharePoint Framework client side extension application customizer SYNTAX Custom Action Id Remove-PnPApplicationCustomizer [[-Identity] <UserCustomActionPipeBind>] [-Scope <CustomActionScope>] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] Client Side Component Id Remove-PnPApplicationCustomizer -ClientSideComponentId <Guid> [-Scope <CustomActionScope>] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Removes a SharePoint Framework client side extension application customizer by removing a user custom action from a web or sitecollection EXAMPLES EXAMPLE 1 Remove-PnPApplicationCustomizer -Identity aa66f67e-46c0-4474-8a82-42bf467d07f2 Removes the custom action representing the client side extension registration with the id 'aa66f67e-46c0-4474-8a82-42bf467d07f2'. EXAMPLE 2 Remove-PnPApplicationCustomizer -ClientSideComponentId aa66f67e-46c0-4474-8a82-42bf467d07f2 -Scope web Removes the custom action(s) being registered for a SharePoint Framework solution having the id 'aa66f67e-46c0-4474-8a82-42bf467d07f2' in its manifest from the current web. PARAMETERS -ClientSideComponentId The Client Side Component Id of the SharePoint Framework client side extension application customizer found in the manifest for which existing custom action(s) should be removed Type: Guid Parameter Sets: Client Side Component Id Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Use the -Force flag to bypass the confirmation question Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The id or name of the CustomAction representing the client side extension registration that needs to be removed or a CustomAction instance itself Type: UserCustomActionPipeBind Parameter Sets: Custom Action Id Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Scope Define if the CustomAction representing the client side extension registration is to be found at the web or site collection scope. Specify All to allow deletion from either web or site collection (default). Type: CustomActionScope Parameter Sets: (All) Accepted values: Web, Site, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPAzureADApp.html": {
    "href": "cmdlets/Remove-PnPAzureADApp.html",
    "title": "Remove-PnPAzureADAppPermission | PnP PowerShell",
    "keywords": "Remove-PnPAzureADApp SYNOPSIS Required Permissions Microsoft Graph API: Application.ReadWrite.All Removes an Azure AD App registration SYNTAX Remove-PnPAzureADApp [-Identity] <AzureADAppPipeBind> [-Force] DESCRIPTION This cmdlet remove an Azure AD App registration EXAMPLES Example 1 Remove-PnPAzureADApp -Identity MyApp Removes the specified app Example 1 Remove-PnPAzureADApp -Identity 93a9772d-d0af-4ed8-9821-17282b64690e Removes the specified app PARAMETERS -Force If specified the confirmation question will be skipped. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify the name, id or app id for the app to remove. Type: AzureADAppPipeBind Parameter Sets: (All) Aliases: Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPAzureADAppSitePermission.html": {
    "href": "cmdlets/Remove-PnPAzureADAppSitePermission.html",
    "title": "Revoke-PnPAzureADAppSitePermission | PnP PowerShell",
    "keywords": "Revoke-PnPAzureADAppSitePermission SYNOPSIS Required Permissions Microsoft Graph API: Sites.FullControl.All Revokes a permissions for a given app. SYNTAX Revoke-PnPAzureADAppSitePermission -PermissionId <String> [-Site <SitePipeBind>] DESCRIPTION This cmdlets updates permissions for a given app in a site. EXAMPLES EXAMPLE 1 Set-PnPAzureADAppSitePermission -PermissionId ABSDFefsdfef33fsdFSvsadf3e3fsdaffsa -Permissions Read Updates the app with the specific permission id and sets the rights to 'Read' access. PARAMETERS -PermissionId If specified the permission with that id specified will be retrieved Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Permissions Specifies the permissions to set for the app. Type: String Parameter Sets: (All) Required: True Accepted values: Write, Read Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site Optional url to to a site to set the permissions for. Defaults to the current site. Type: SitePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPAzureADGroup.html": {
    "href": "cmdlets/Remove-PnPAzureADGroup.html",
    "title": "Remove-PnPAzureADGroup | PnP PowerShell",
    "keywords": "Remove-PnPAzureADGroup SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Removes one Azure Active Directory group. This can be a security, distribution or Microsoft 365 group. SYNTAX Remove-PnPAzureADGroup -Identity <AzureADGroupPipeBind> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPAzureADGroup -Identity $groupId Removes an Azure Active Directory group based on its ID EXAMPLE 2 Remove-PnPAzureADGroup -Identity $group Removes the provided Azure Active Directory group PARAMETERS -Identity The Identity of the Azure Active Directory group Type: AzureADGroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPAzureADGroupMember.html": {
    "href": "cmdlets/Remove-PnPAzureADGroupMember.html",
    "title": "Remove-PnPAzureADGroupMember | PnP PowerShell",
    "keywords": "Remove-PnPAzureADGroupMember SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.ReadWrite.All, Group.ReadWrite.All, GroupMember.ReadWrite.All Removes members from a particular Azure Active Directory group. This can be a security, distribution or Microsoft 365 group. SYNTAX Remove-PnPAzureADGroupMember -Identity <AzureADGroupPipeBind> -Users <String[]> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPAzureADGroupMember -Identity \"Project Team\" -Users \"john@contoso.onmicrosoft.com\",\"jane@contoso.onmicrosoft.com\" Removes the provided two users as members from the Azure Active Directory group named \"Project Team\" PARAMETERS -Identity The Identity of the Azure Active Directory group to remove members from Type: AzureADGroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Users The UPN(s) of the user(s) to remove as members from the Azure Active Directory group Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Remove-PnPAzureADGroupOwner.html": {
    "href": "cmdlets/Remove-PnPAzureADGroupOwner.html",
    "title": "Remove-PnPAzureADGroupOwner | PnP PowerShell",
    "keywords": "Remove-PnPAzureADGroupOwner SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.ReadWrite.All, Group.ReadWrite.All Removes owners from a particular Azure Active Directory group. This can be a security, distribution or Microsoft 365 group. SYNTAX Remove-PnPAzureADGroupOwner -Identity <AzureADGroupPipeBind> -Users <String[]> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPAzureADGroupOwner -Identity \"Project Team\" -Users \"john@contoso.onmicrosoft.com\",\"jane@contoso.onmicrosoft.com\" Removes the provided two users as owners from the Azure Active Directory group named \"Project Team\" PARAMETERS -Identity The Identity of the zure Active Directory group to remove owners from Type: AzureADGroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Users The UPN(s) of the user(s) to remove as owners from the Azure Active Directory group Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Remove-PnPContentType.html": {
    "href": "cmdlets/Remove-PnPContentType.html",
    "title": "Remove-PnPContentType | PnP PowerShell",
    "keywords": "Remove-PnPContentType SYNOPSIS Removes a content type from a web SYNTAX Remove-PnPContentType [-Identity] <ContentTypePipeBind> [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPContentType -Identity \"Project Document\" This will remove a content type called \"Project Document\" from the current web EXAMPLE 2 Remove-PnPContentType -Identity \"Project Document\" -Force This will remove a content type called \"Project Document\" from the current web with force PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name or ID of the content type to remove Type: ContentTypePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPContentTypeFromDocumentSet.html": {
    "href": "cmdlets/Remove-PnPContentTypeFromDocumentSet.html",
    "title": "Remove-PnPContentTypeFromDocumentSet | PnP PowerShell",
    "keywords": "Remove-PnPContentTypeFromDocumentSet SYNOPSIS Removes a content type from a document set SYNTAX Remove-PnPContentTypeFromDocumentSet -ContentType <ContentTypePipeBind> -DocumentSet <DocumentSetPipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPContentTypeFromDocumentSet -ContentType \"Test CT\" -DocumentSet \"Test Document Set\" This will remove the content type called 'Test CT' from the document set called ''Test Document Set' EXAMPLE 2 Remove-PnPContentTypeFromDocumentSet -ContentType 0x0101001F1CEFF1D4126E4CAD10F00B6137E969 -DocumentSet 0x0120D520005DB65D094035A241BAC9AF083F825F3B This will remove the content type with ID '0x0101001F1CEFF1D4126E4CAD10F00B6137E969' from the document set with ID '0x0120D520005DB65D094035A241BAC9AF083F825F3B' PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType The content type to remove. Either specify name, an id, or a content type object. Type: ContentTypePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DocumentSet The document set to remove the content type from. Either specify a name, a document set template object, an id, or a content type object Type: DocumentSetPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPContentTypeFromList.html": {
    "href": "cmdlets/Remove-PnPContentTypeFromList.html",
    "title": "Remove-PnPContentTypeFromList | PnP PowerShell",
    "keywords": "Remove-PnPContentTypeFromList SYNOPSIS Removes a content type from a list SYNTAX Remove-PnPContentTypeFromList -List <ListPipeBind> -ContentType <ContentTypePipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPContentTypeFromList -List \"Documents\" -ContentType \"Project Document\" This will remove a content type called \"Project Document\" from the \"Documents\" list PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType The name of a content type, its ID or an actual content type object that needs to be removed from the specified list. Type: ContentTypePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The name of the list, its ID or an actual list object from where the content type needs to be removed from Type: ListPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPCustomAction.html": {
    "href": "cmdlets/Remove-PnPCustomAction.html",
    "title": "Remove-PnPCustomAction | PnP PowerShell",
    "keywords": "Remove-PnPCustomAction SYNOPSIS Removes a custom action SYNTAX Remove-PnPCustomAction [[-Identity] <UserCustomActionPipeBind>] [-Scope <CustomActionScope>] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPCustomAction -Identity aa66f67e-46c0-4474-8a82-42bf467d07f2 Removes the custom action with the id 'aa66f67e-46c0-4474-8a82-42bf467d07f2'. EXAMPLE 2 Remove-PnPCustomAction -Identity aa66f67e-46c0-4474-8a82-42bf467d07f2 -Scope web Removes the custom action with the id 'aa66f67e-46c0-4474-8a82-42bf467d07f2' from the current web. EXAMPLE 3 Remove-PnPCustomAction -Identity aa66f67e-46c0-4474-8a82-42bf467d07f2 -Force Removes the custom action with the id 'aa66f67e-46c0-4474-8a82-42bf467d07f2' without asking for confirmation. EXAMPLE 4 Get-PnPCustomAction -Scope All | ? Location -eq ScriptLink | Remove-PnPCustomAction Removes all custom actions that are ScriptLinks PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Use the -Force flag to bypass the confirmation question Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The id or name of the CustomAction that needs to be removed or a CustomAction instance itself Type: UserCustomActionPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Scope Define if the CustomAction is to be found at the web or site collection scope. Specify All to allow deletion from either web or site collection. Type: CustomActionScope Parameter Sets: (All) Accepted values: Web, Site, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPDeletedMicrosoft365Group.html": {
    "href": "cmdlets/Remove-PnPDeletedMicrosoft365Group.html",
    "title": "Remove-PnPDeletedMicrosoft365Group | PnP PowerShell",
    "keywords": "Remove-PnPDeletedMicrosoft365Group SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Permanently removes one deleted Microsoft 365 Group SYNTAX Remove-PnPDeletedMicrosoft365Group -Identity <Microsoft365GroupPipeBind> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPDeletedMicrosoft365Group -Identity 38b32e13-e900-4d95-b860-fb52bc07ca7f Permanently removes a deleted Microsoft 365 Group based on its ID EXAMPLE 2 $group = Get-PnPDeletedMicrosoft365Group -Identity 38b32e13-e900-4d95-b860-fb52bc07ca7f Remove-PnPDeletedMicrosoft365Group -Identity $group Permanently removes the provided deleted Microsoft 365 Group PARAMETERS -Identity The identity of the deleted Microsoft 365 Group to be deleted Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPEventReceiver.html": {
    "href": "cmdlets/Remove-PnPEventReceiver.html",
    "title": "Remove-PnPEventReceiver | PnP PowerShell",
    "keywords": "Remove-PnPEventReceiver SYNOPSIS Remove an eventreceiver SYNTAX Remove-PnPEventReceiver -Identity <EventReceiverPipeBind> [-List <ListPipeBind>] [-Scope <EventReceiverScope>] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Removes/unregisters a specific eventreceiver EXAMPLES EXAMPLE 1 Remove-PnPEventReceiver -Identity fb689d0e-eb99-4f13-beb3-86692fd39f22 This will remove the event receiver with ReceiverId \"fb689d0e-eb99-4f13-beb3-86692fd39f22\" from the current web EXAMPLE 2 Remove-PnPEventReceiver -List ProjectList -Identity fb689d0e-eb99-4f13-beb3-86692fd39f22 This will remove the event receiver with ReceiverId \"fb689d0e-eb99-4f13-beb3-86692fd39f22\" from the \"ProjectList\" list EXAMPLE 3 Remove-PnPEventReceiver -List ProjectList -Identity MyReceiver This will remove the event receiver with ReceiverName \"MyReceiver\" from the \"ProjectList\" list EXAMPLE 4 Remove-PnPEventReceiver -List ProjectList This will remove all event receivers from the \"ProjectList\" list EXAMPLE 5 Remove-PnPEventReceiver This will remove all event receivers from the current site EXAMPLE 6 Get-PnPEventReceiver | ? ReceiverUrl -Like \"*azurewebsites.net*\" | Remove-PnPEventReceiver This will remove all event receivers from the current site which are pointing to a service hosted on Azure Websites EXAMPLE 7 Remove-PnPEventReceiver -Scope Site This will remove all the event receivers defined on the current site collection EXAMPLE 8 Remove-PnPEventReceiver -Scope Web This will remove all the event receivers defined on the current site EXAMPLE 9 Remove-PnPEventReceiver -Scope All This will remove all the event receivers defined on the current site and web PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Guid of the event receiver on the list Type: EventReceiverPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The list object from where to remove the event receiver object Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope The scope of the EventReceivers to remove Type: EventReceiverScope Parameter Sets: Scope Accepted values: Web, Site, All Required: False Position: Named Default value: Web Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPExternalUser.html": {
    "href": "cmdlets/Remove-PnPExternalUser.html",
    "title": "Remove-PnPExternalUser | PnP PowerShell",
    "keywords": "Remove-PnPExternalUser SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes one ore more external users from the tenant. SYNTAX Remove-PnPExternalUser -UniqueIDs <String[]> [-Confirm] [-WhatIf] DESCRIPTION The Remove-PnPExternalUser cmdlet permanently removes a collection of external users from the tenant. Users who are removed lose access to all tenant resources. EXAMPLES EXAMPLE 1 $user = Get-PnPExternalUser -Filter someone@example.com Remove-PnPExternalUser -UniqueIDs @($user.UniqueId) This example removes a specific external user who has the address \"someone@example.com\". Organization members may still see the external user name displayed in the Shared With dialog, but the external user will not be able to sign in and will not be able to access any tenant resources. PARAMETERS -UniqueIDs Specifies an ID that can be used to identify an external user based on their Windows Live ID. Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope Defines which app catalog to use. Defaults to Tenant Type: AppCatalogScope Parameter Sets: (All) Accepted values: Tenant, Site Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPField.html": {
    "href": "cmdlets/Remove-PnPField.html",
    "title": "Remove-PnPField | PnP PowerShell",
    "keywords": "Remove-PnPField SYNOPSIS Removes a field from a list or a site SYNTAX Remove-PnPField [-Identity] <FieldPipeBind> [[-List] <ListPipeBind>] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPField -Identity \"Speakers\" Removes the speakers field from the site columns EXAMPLE 2 Remove-PnPField -List \"Demo list\" -Identity \"Speakers\" Removes the speakers field from the list Demo list PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The field object or name to remove Type: FieldPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The list object or name where to remove the field from Type: ListPipeBind Parameter Sets: (All) Required: False Position: 1 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPFieldFromContentType.html": {
    "href": "cmdlets/Remove-PnPFieldFromContentType.html",
    "title": "Remove-PnPFieldFromContentType | PnP PowerShell",
    "keywords": "Remove-PnPFieldFromContentType SYNOPSIS Removes a site column from a content type SYNTAX Remove-PnPFieldFromContentType -Field <FieldPipeBind> -ContentType <ContentTypePipeBind> [-DoNotUpdateChildren] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPFieldFromContentType -Field \"Project_Name\" -ContentType \"Project Document\" This will remove the site column with an internal name of \"Project_Name\" from a content type called \"Project Document\" EXAMPLE 2 Remove-PnPFieldFromContentType -Field \"Project_Name\" -ContentType \"Project Document\" -DoNotUpdateChildren This will remove the site column with an internal name of \"Project_Name\" from a content type called \"Project Document\". It will not update content types that inherit from the \"Project Document\" content type. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType The content type where the field is to be removed from Type: ContentTypePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DoNotUpdateChildren If specified, inherited content types will not be updated Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Field The field to remove Type: FieldPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPFile.html": {
    "href": "cmdlets/Remove-PnPFile.html",
    "title": "Remove-PnPFile | PnP PowerShell",
    "keywords": "Remove-PnPFile SYNOPSIS Removes a file. SYNTAX Server Relative Remove-PnPFile [-ServerRelativeUrl] <String> [-Recycle] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] Site Relative Remove-PnPFile [-SiteRelativeUrl] <String> [-Recycle] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPFile -ServerRelativeUrl /sites/project/_catalogs/themes/15/company.spcolor Removes the file company.spcolor EXAMPLE 2 Remove-PnPFile -SiteRelativeUrl _catalogs/themes/15/company.spcolor Removes the file company.spcolor EXAMPLE 3 Remove-PnPFile -SiteRelativeUrl _catalogs/themes/15/company.spcolor -Recycle Removes the file company.spcolor and saves it to the Recycle Bin PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be asked to remove the file, but instead it will silently be removed. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Recycle Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativeUrl Server relative URL to the file Type: String Parameter Sets: Server Relative Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -SiteRelativeUrl Site relative URL to the file Type: String Parameter Sets: Site Relative Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPFileFromSiteTemplate.html": {
    "href": "cmdlets/Remove-PnPFileFromSiteTemplate.html",
    "title": "Remove-PnPFileFromSiteTemplate | PnP PowerShell",
    "keywords": "Remove-PnPFileFromSiteTemplate SYNOPSIS Removes a file from a PnP Provisioning Template SYNTAX Remove-PnPFileFromSiteTemplate [-Path] <String> [-FilePath] <String> [[-TemplateProviderExtensions] <ITemplateProviderExtension[]>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPFileFromSiteTemplate -Path template.pnp -FilePath filePath Removes a file from an in-memory PnP Provisioning Template PARAMETERS -FilePath The relative File Path of the file to remove from the in-memory template Type: String Parameter Sets: (All) Required: True Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Filename to read the template from, optionally including full path. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateProviderExtensions Allows you to specify ITemplateProviderExtension to execute while saving the template. Type: ITemplateProviderExtension[] Parameter Sets: (All) Required: False Position: 2 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPFileVersion.html": {
    "href": "cmdlets/Remove-PnPFileVersion.html",
    "title": "Remove-PnPFileVersion | PnP PowerShell",
    "keywords": "Remove-PnPFileVersion SYNOPSIS Removes all or a specific file version. SYNTAX Return as file object (Default) Remove-PnPFileVersion -Url <String> [-Recycle] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] All Remove-PnPFileVersion -Url <String> [-All] [-Recycle] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] By Id Remove-PnPFileVersion -Url <String> [-Identity <FileVersionPipeBind>] [-Recycle] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPFileVersion -Url Documents/MyDocument.docx -Identity 512 Removes the file version with Id 512 EXAMPLE 2 Remove-PnPFileVersion -Url Documents/MyDocument.docx -Identity \"Version 1.0\" Removes the file version with label \"Version 1.0\" EXAMPLE 3 Remove-PnPFileVersion -Url Documents/MyDocument.docx -All Removes all file versions PARAMETERS -All Type: SwitchParameter Parameter Sets: All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be requested and the action will be performed Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Type: FileVersionPipeBind Parameter Sets: By Id Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Recycle Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPFlow.html": {
    "href": "cmdlets/Remove-PnPFlow.html",
    "title": "Remove-PnPFlow | PnP PowerShell",
    "keywords": "Remove-PnPFlow SYNOPSIS Required Permissions Azure: management.azure.com Removes the specified flow SYNTAX Remove-PnPFlow -Environment <PowerAutomateEnvironmentPipeBind> -Identity <PowerAutomateFlowPipeBind> [-AsAdmin] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This cmdlet removes the specified flow EXAMPLES Example 1 $environment = Get-PnPFlowEnvironment Remove-PnPFlow -Environment $environment -Identity fba63225-baf9-4d76-86a1-1b42c917a182 This removes the specified flow. PARAMETERS -AsAdmin If specified removes the flow as an administrator Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Environment The name of the environment which contains the flow. Type: PowerAutomateEnvironmentPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name of, or a flow object to remove. Type: PowerAutomateFlowPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If specified the no confirmation question will be asked. Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPFolder.html": {
    "href": "cmdlets/Remove-PnPFolder.html",
    "title": "Remove-PnPFolder | PnP PowerShell",
    "keywords": "Remove-PnPFolder SYNOPSIS Deletes a folder within a parent folder SYNTAX Remove-PnPFolder -Name <String> -Folder <FolderPipeBind> [-Recycle] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPFolder -Name NewFolder -Folder _catalogs/masterpage Removes the folder 'NewFolder' from '_catalogsmasterpage' EXAMPLE 2 Remove-PnPFolder -Name NewFolder -Folder _catalogs/masterpage -Recycle Removes the folder 'NewFolder' from '_catalogsmasterpage' and is saved in the Recycle Bin PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder The parent folder in the site Type: FolderPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The folder name Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Recycle Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPGraphSubscription.html": {
    "href": "cmdlets/Remove-PnPGraphSubscription.html",
    "title": "Remove-PnPGraphSubscription | PnP PowerShell",
    "keywords": "Remove-PnPGraphSubscription SYNOPSIS Removes an existing Microsoft Graph subscription. Required Azure Active Directory application permission depends on the resource the subscription exists on, see https://docs.microsoft.com/graph/api/subscription-delete#permissions . SYNTAX Remove-PnPGraphSubscription -Identity <GraphSubscriptionPipeBind> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPGraphSubscription -Identity bc204397-1128-4911-9d70-1d8bceee39da Removes the Microsoft Graph subscription with the id 'bc204397-1128-4911-9d70-1d8bceee39da' PARAMETERS -Identity The unique id or an instance of a Microsoft Graph Subscription Type: GraphSubscriptionPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPGroup.html": {
    "href": "cmdlets/Remove-PnPGroup.html",
    "title": "Remove-PnPGroup | PnP PowerShell",
    "keywords": "Remove-PnPGroup SYNOPSIS Removes a group from a web. SYNTAX Remove-PnPGroup [[-Identity] <GroupPipeBind>] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPGroup -Identity \"My Users\" Removes the group \"My Users\" PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity A group object, an ID or a name of a group to remove Type: GroupPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPGroupMember.html": {
    "href": "cmdlets/Remove-PnPGroupMember.html",
    "title": "Remove-PnPGroupMember | PnP PowerShell",
    "keywords": "Remove-PnPGroupMember SYNOPSIS Removes a user from a group SYNTAX Remove-PnPGroupMember -LoginName <String> -Group <GroupPipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPGroupMember -LoginName user@company.com -Group 'Marketing Site Members' Removes the user user@company.com from the Group 'Marketing Site Members' PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group A group object, an ID or a name of a group Type: GroupPipeBind Parameter Sets: (All) Aliases: GroupName Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LoginName A valid login name of a user (user@company.com) Type: String Parameter Sets: (All) Aliases: LogonName Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPHomeSite.html": {
    "href": "cmdlets/Remove-PnPHomeSite.html",
    "title": "Remove-PnPHomeSite | PnP PowerShell",
    "keywords": "Remove-PnPHomeSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes the currently set site as the home site SYNTAX Remove-PnPHomeSite [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPHomeSite Removes the currently set site as the home site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPHubSiteAssociation.html": {
    "href": "cmdlets/Remove-PnPHubSiteAssociation.html",
    "title": "Remove-PnPHubSiteAssociation | PnP PowerShell",
    "keywords": "Remove-PnPHubSiteAssociation SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes a hub site association from a site. SYNTAX Remove-PnPHubSiteAssociation -Site <SitePipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPHubSiteAssociation -Site \"https://tenant.sharepoint.com/sites/mysite\" This example removes the hub site association from the specified site. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site The site to disconnect from its hubsite Type: SitePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPHubToHubAssociation.html": {
    "href": "cmdlets/Remove-PnPHubToHubAssociation.html",
    "title": "Remove-PnPHubToHubAssociation | PnP PowerShell",
    "keywords": "Remove-PnPHubToHubAssociation SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes the selected hub site from its parent hub. SYNTAX By Id Remove-PnPHubToHubAssociation -HubSiteId <Guid> By Url Remove-PnPHubToHubAssociation -HubSiteUrl <string> DESCRIPTION Use this cmdlet to remove the selected hub site from its parent hub. EXAMPLES EXAMPLE 1 Remove-PnPHubToHubAssociation -HubSiteId 6638bd4c-d88d-447c-9eb2-c84f28ba8b15 This example removes the hubsite with id 6638bd4c-d88d-447c-9eb2-c84f28ba8b15 from its parent hub. EXAMPLE 2 Remove-PnPHubToHubAssociation -HubSiteUrl \"https://yourtenant.sharepoint.com/sites/sourcehub\" This example removes the hubsite with id https://yourtenant.sharepoint.com/sites/sourcehub from its parent hub. PARAMETERS -HubSiteId Id of the hubsite to remove from its parent. Type: Guid Parameter Sets: By Id Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HubSiteUrl Url of the hubsite to remove from its parent. Type: String Parameter Sets: By Url Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPIndexedProperty.html": {
    "href": "cmdlets/Remove-PnPIndexedProperty.html",
    "title": "Remove-PnPIndexedProperty | PnP PowerShell",
    "keywords": "Remove-PnPIndexedProperty SYNOPSIS Removes a key from propertybag to be indexed by search. The key and it's value remain in the propertybag, however it will not be indexed anymore. SYNTAX Remove-PnPIndexedProperty [-Key] <String> [-List <ListPipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPIndexedProperty -key \"MyIndexProperty\" Removes the Indexed property \"MyIndexProperty\" from the current web PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Key Key of the property bag value to be removed from indexing Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list object or name from where to remove the indexed properties Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPJavaScriptLink.html": {
    "href": "cmdlets/Remove-PnPJavaScriptLink.html",
    "title": "Remove-PnPJavaScriptLink | PnP PowerShell",
    "keywords": "Remove-PnPJavaScriptLink SYNOPSIS Removes a JavaScript link or block from a web or sitecollection SYNTAX Remove-PnPJavaScriptLink [[-Identity] <UserCustomActionPipeBind>] [-Force] [-Scope <CustomActionScope>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPJavaScriptLink -Identity jQuery Removes the injected JavaScript file with the name jQuery from the current web after confirmation EXAMPLE 2 Remove-PnPJavaScriptLink -Identity jQuery -Scope Site Removes the injected JavaScript file with the name jQuery from the current site collection after confirmation EXAMPLE 3 Remove-PnPJavaScriptLink -Identity jQuery -Scope Site -Confirm:$false Removes the injected JavaScript file with the name jQuery from the current site collection and will not ask for confirmation EXAMPLE 4 Remove-PnPJavaScriptLink -Scope Site Removes all the injected JavaScript files from the current site collection after confirmation for each of them EXAMPLE 5 Remove-PnPJavaScriptLink -Identity faea0ce2-f0c2-4d45-a4dc-73898f3c2f2e -Scope All Removes the injected JavaScript file with id faea0ce2-f0c2-4d45-a4dc-73898f3c2f2e from both the Web and Site scopes EXAMPLE 6 Get-PnPJavaScriptLink -Scope All | ? Sequence -gt 1000 | Remove-PnPJavaScriptLink Removes all the injected JavaScript files from both the Web and Site scope that have a sequence number higher than 1000 PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Use the -Force flag to bypass the confirmation question Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Name or id of the JavaScriptLink to remove. Omit if you want to remove all JavaScript Links. Type: UserCustomActionPipeBind Parameter Sets: (All) Aliases: Key, Name Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Scope Define if the JavaScriptLink is to be found at the web or site collection scope. Specify All to allow deletion from either web or site collection. Type: CustomActionScope Parameter Sets: (All) Accepted values: Web, Site, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPKnowledgeHubSite.html": {
    "href": "cmdlets/Remove-PnPKnowledgeHubSite.html",
    "title": "Remove-PnPKnowledgeHubSite | PnP PowerShell",
    "keywords": "Remove-PnPKnowledgeHubSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes the Knowledge Hub Site setting for your tenant SYNTAX Remove-PnPKnowledgeHubSite [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPKnowledgeHubSite Removes the Knowledge Hub Site setting for your tenant PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPList.html": {
    "href": "cmdlets/Remove-PnPList.html",
    "title": "Remove-PnPList | PnP PowerShell",
    "keywords": "Remove-PnPList SYNOPSIS Deletes a list SYNTAX Remove-PnPList [-Identity] <ListPipeBind> [-Recycle] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPList -Identity Announcements Removes the list named 'Announcements'. Asks for confirmation. EXAMPLE 2 Remove-PnPList -Identity Announcements -Force Removes the list named 'Announcements' without asking for confirmation. EXAMPLE 3 Remove-PnPList -Identity Announcements -Recycle Removes the list named 'Announcements' and saves to the Recycle Bin PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID or Title of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Recycle Defines if the list should be moved to recycle bin or directly deleted. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPListDesign.html": {
    "href": "cmdlets/Remove-PnPListDesign.html",
    "title": "Remove-PnPListDesign | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Remove-PnPListDesign SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes a List Design SYNTAX Remove-PnPListDesign [-Identity] <TenantListDesignPipeBind> [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPListDesign -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd Removes the specified list design PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If specified you will not be asked to confirm removing the specified Site Design Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the list design to remove Type: TenantListDesignPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPListItem.html": {
    "href": "cmdlets/Remove-PnPListItem.html",
    "title": "Remove-PnPListItem | PnP PowerShell",
    "keywords": "Remove-PnPListItem SYNOPSIS Deletes an item from a list SYNTAX Single Remove-PnPListItem [-List] <ListPipeBind> -Identity <ListItemPipeBind> [-Recycle] [-Force] Batched Remove-PnPListItem [-List] <ListPipeBind> -Identity <ListItemPipeBind> -Batch <PnPBatch> [-Recycle] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPListItem -List \"Demo List\" -Identity \"1\" -Force Removes the listitem with id \"1\" from the \"Demo List\" list EXAMPLE 2 Remove-PnPListItem -List \"Demo List\" -Identity \"1\" -Force -Recycle Removes the listitem with id \"1\" from the \"Demo List\" list and saves it in the Recycle Bin EXAMPLE 3 $batch = New-PnPBatch 1..50 | Foreach-Object{Remove-PnPListItem -List \"DemoList\" -Identity $_ -Batch $batch} Invoke-PnPBatch -Batch $batch Removes all the items with Id 1 to Id 50 in the \"Demo List\" list EXAMPLE 4 Remove-PnPListItem -List \"Demo List\" Removes all items from the \"Demlo List\" list after asking for confirmation PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Title or Url of the list Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Recycle When provided, items will be sent to the recycle bin. When omitted, items will permanently be deleted. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Batch Batch object used to add items in a batched manner. See examples on how to use this. Type: PnPBatch Parameter Sets: Batched Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPListItemAttachment.html": {
    "href": "cmdlets/Remove-PnPListItemAttachment.html",
    "title": "Remove-PnPListItemAttachment | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Add-PnPListItemAttachment SYNOPSIS Removes attachment from the specified list item in the SharePoint list SYNTAX Remove attachment from list item Remove-PnPListItemAttachment [-List] <ListPipeBind> [-Identity] <ListItemPipeBind> [-FileName <String>] [-Recycle <SwitchParameter>] [-Force <SwitchParameter>] [-Connection <PnPConnection>] [<CommonParameters>] Removes all attachments file from list item Remove-PnPListItemAttachment [-List] <ListPipeBind> [-Identity] <ListItemPipeBind> [-All <SwitchParameter>] [-Recycle <SwitchParameter>] [-Force <SwitchParameter>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPListItemAttachment -List \"Demo List\" -Identity 1 -FileName test.txt Permanently delete an attachment from the list item with Id \"1\" in the \"Demo List\" SharePoint list with file name as test.txt. EXAMPLE 2 Remove-PnPListItemAttachment -List \"Demo List\" -Identity 1 -FileName test.txt -Recycle Removes an attachment from the list item with Id \"1\" in the \"Demo List\" SharePoint list with file name as test.txt and sends it to recycle bin. EXAMPLE 3 Remove-PnPListItemAttachment -List \"Demo List\" -Identity 1 -FileName test.txt -Recycle -Force Removes an attachment from the list item with Id \"1\" in the \"Demo List\" SharePoint list with file name as test.txt and sends it to recycle bin. It will not ask for confirmation from user. EXAMPLE 4 Remove-PnPListItemAttachment -List \"Demo List\" -Identity 1 -All -Recycle -Force Removes all attachments from the list item with Id \"1\" in the \"Demo List\" SharePoint list and sends them to recycle bin. It will not ask for confirmation from user. EXAMPLE 5 Remove-PnPListItemAttachment -List \"Demo List\" -Identity 1 -All Permanently deletes all attachments from the list item with Id \"1\" in the \"Demo List\" SharePoint list and sends them to recycle bin. PARAMETERS -FileName Specify name of the attachment to delete from list item. The filename is not case sensitive. Type: String Parameter Sets: (Single) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -All Specify if you want to delete or recycle all the list item attachments. Type: SwitchParameter Parameter Sets: (Multiple) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Recycle Specify if you want to send the attachment(s) to the recycle bin. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Title or Url of the list. Note that when providing the name of the list, the list name is case-sensitive. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPListItemComments.html": {
    "href": "cmdlets/Remove-PnPListItemComments.html",
    "title": "Remove-PnPListItemComment | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Remove-PnPListItemComment SYNOPSIS Deletes a comment or all comments from a list item in a SharePoint list. SYNTAX Single Remove-PnPListItemComment [-List] <ListPipeBind> [-Identity] <ListItemPipeBind> [-Text] [-Force] All Remove-PnPListItemComment [-List] <ListPipeBind> [-Identity] <ListItemPipeBind> [-All] [-Force] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPListItemComment -List \"Demo List\" -Identity \"1\" -Text \"test comment\" -Force Removes the comment with text \"test comment\" from list item with id \"1\" from the \"Demo List\" list. The text needs to be case sensitive. It may not work with comments containing mentions. EXAMPLE 2 Remove-PnPListItemComment -List \"Demo List\" -Identity \"1\" -Text \"test comment\" Removes the comment with text \"test comment\" from list item with id \"1\" from the \"Demo List\" list after asking for confirmation. The text needs to be case sensitive. It will may work with comments containing mentions. EXAMPLE 3 Remove-PnPListItemComment -List \"Demo List\" -Identity \"1\" -All -Force Removes all comments from list item with id \"1\" from the \"Demo List\" list. EXAMPLE 4 Remove-PnPListItemComment -List \"Demo List\" -Identity \"1\" -All Removes all comments from list item with id \"1\" from the \"Demo List\" list after asking for confirmation. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Title or Url of the list Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Text When provided, item comments with specified text will be deleted. The text is case sensitive. If the comment contains mentions, it may not work. Type: String Parameter Sets: Single Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -All When specified, it will delete all comments for the specified list item. Type: SwitchParameter Parameter Sets: Multiple Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPMicrosoft365Group.html": {
    "href": "cmdlets/Remove-PnPMicrosoft365Group.html",
    "title": "Remove-PnPMicrosoft365Group | PnP PowerShell",
    "keywords": "Remove-PnPMicrosoft365Group SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Removes one Microsoft 365 Group SYNTAX Remove-PnPMicrosoft365Group -Identity <Microsoft365GroupPipeBind> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPMicrosoft365Group -Identity $groupId Removes an Microsoft 365 Group based on its ID EXAMPLE 2 Remove-PnPMicrosoft365Group -Identity $group Removes the provided Microsoft 365 Group EXAMPLE 3 Get-PnPMicrosoft365Group | ? Visibility -eq \"Public\" | Remove-PnPMicrosoft365Group Removes all the public Microsoft 365 Groups PARAMETERS -Identity The Identity of the Microsoft 365 Group Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPMicrosoft365GroupMember.html": {
    "href": "cmdlets/Remove-PnPMicrosoft365GroupMember.html",
    "title": "Remove-PnPMicrosoft365GroupMember | PnP PowerShell",
    "keywords": "Remove-PnPMicrosoft365GroupMember SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.ReadWrite.All, Group.ReadWrite.All, GroupMember.ReadWrite.All Removes members from a particular Microsoft 365 Group SYNTAX Remove-PnPMicrosoft365GroupMember -Identity <Microsoft365GroupPipeBind> -Users <String[]> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPMicrosoft365GroupMember -Identity \"Project Team\" -Users \"john@contoso.onmicrosoft.com\",\"jane@contoso.onmicrosoft.com\" Removes the provided two users as members from the Microsoft 365 Group named \"Project Team\" PARAMETERS -Identity The Identity of the Microsoft 365 Group to remove members from Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Users The UPN(s) of the user(s) to remove as members from the Microsoft 365 Group Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Remove-PnPMicrosoft365GroupOwner.html": {
    "href": "cmdlets/Remove-PnPMicrosoft365GroupOwner.html",
    "title": "Remove-PnPMicrosoft365GroupOwner | PnP PowerShell",
    "keywords": "Remove-PnPMicrosoft365GroupOwner SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.ReadWrite.All, Group.ReadWrite.All Removes owners from a particular Microsoft 365 Group SYNTAX Remove-PnPMicrosoft365GroupOwner -Identity <Microsoft365GroupPipeBind> -Users <String[]> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPMicrosoft365GroupOwner -Identity \"Project Team\" -Users \"john@contoso.onmicrosoft.com\",\"jane@contoso.onmicrosoft.com\" Removes the provided two users as owners from the Microsoft 365 Group named \"Project Team\" PARAMETERS -Identity The Identity of the Microsoft 365 Group to remove owners from Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Users The UPN(s) of the user(s) to remove as owners from the Microsoft 365 Group Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Remove-PnPMicrosoft365GroupSettings.html": {
    "href": "cmdlets/Remove-PnPMicrosoft365GroupSettings.html",
    "title": "Remove-PnPMicrosoft365GroupSettings | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Remove-PnPMicrosoft365GroupSettings SYNOPSIS Required Permissions Microsoft Graph API: One of Directory.ReadWrite.All , Directory.AccessAsUser.All Removes Microsoft 365 Group settings from the tenant or the specified Microsoft 365 Group. SYNTAX Remove-PnPMicrosoft365GroupSettings -Identity <string> -Group <Microsoft365GroupPipeBind> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPMicrosoft365GroupSettings -Identity \"10f686b9-9deb-4ad8-ba8c-1f9b7a00a22b\" Removes a tenant wide Microsoft 365 Group setting based on its ID. You can get the ID of the setting using Get-PnPMicrosoft365GroupSettings cmdlet. EXAMPLE 2 Remove-PnPMicrosoft365GroupSettings -Identity \"10f686b9-9deb-4ad8-ba8c-1f9b7a00a22b\" -Group $groupId Removes the Microsoft 365 Group setting with Id from the specified group. You can get the ID of the setting using Get-PnPMicrosoft365GroupSettings -Group cmdlet. PARAMETERS -Identity The Identity of the Microsoft 365 Group setting Type: string Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group The Identity of the Microsoft 365 Group Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Remove-PnPNavigationNode.html": {
    "href": "cmdlets/Remove-PnPNavigationNode.html",
    "title": "Remove-PnPNavigationNode | PnP PowerShell",
    "keywords": "Remove-PnPNavigationNode SYNOPSIS Removes a menu item from either the quicklaunch or top navigation SYNTAX Remove a node by ID (Default) Remove-PnPNavigationNode [-Identity] <NavigationNodePipeBind> [-Force] [-Connection <PnPConnection>] [<CommonParameters>] Remove node by Title Remove-PnPNavigationNode [-Location] <NavigationType> -Title <String> [-Header <String>] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] All Nodes Remove-PnPNavigationNode [-All] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPNavigationNode -Identity 1032 Removes the navigation node with the specified id EXAMPLE 2 Get-PnPNavigationNode -Location Footer | Select-Object -First 1 | Remove-PnPNavigationNode -Force Removes the first node of the footer navigation without asking for confirmation EXAMPLE 3 Remove-PnPNavigationNode -Title Recent -Location QuickLaunch Will remove the recent navigation node from the quick launch in the current web after confirmation has been given that it should be deleted EXAMPLE 4 Remove-PnPNavigationNode -Title Home -Location TopNavigationBar -Force Will remove the home navigation node from the top navigation bar without prompting for a confirmation in the current web EXAMPLE 5 Get-PnPNavigationNode -Location QuickLaunch | Remove-PnPNavigationNode -Force Will remove all the navigation nodes from the quick launch bar without prompting for a confirmation in the current web PARAMETERS -All Specifying the All parameter will remove all the nodes from specified Location. Type: SwitchParameter Parameter Sets: All Nodes Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Header {{ Fill Header Description }} Type: String Parameter Sets: Remove node by Title Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Id or node object to delete Type: NavigationNodePipeBind Parameter Sets: Remove a node by ID Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Location {{ Fill Location Description }} Type: NavigationType Parameter Sets: Remove node by Title Accepted values: TopNavigationBar, QuickLaunch, SearchNav, Footer Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Title {{ Fill Title Description }} Type: String Parameter Sets: Remove node by Title Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPOrgAssetsLibrary.html": {
    "href": "cmdlets/Remove-PnPOrgAssetsLibrary.html",
    "title": "Remove-PnPOrgAssetsLibrary | PnP PowerShell",
    "keywords": "Remove-PnPOrgAssetsLibrary SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes a given document library as a organizational asset source SYNTAX Remove-PnPOrgAssetsLibrary -LibraryUrl <String> [-ShouldRemoveFromCdn <Boolean>] [-CdnType <SPOTenantCdnType>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Removes a given document library as a organizational asset source based on its server relative URL in your SharePoint Online Tenant. It will not remove the document library itself. It may take some time before this change will be reflected in the webinterface. EXAMPLES EXAMPLE 1 Remove-PnPOrgAssetsLibrary -LibraryUrl \"sites/branding/logos\" This example removes the document library with the url \"logos\" residing in the sitecollection with the url \"sites/branding/logos\" from the list with organizational assets keeping it as an Office 365 CDN source EXAMPLE 2 Remove-PnPOrgAssetsLibrary -LibraryUrl \"sites/branding/logos\" -ShouldRemoveFromCdn $true This example removes the document library with the url \"logos\" residing in the sitecollection with the url \"sites/branding/logos\" from the list with organizational assets also removing it as a Public Office 365 CDN source EXAMPLE 3 Remove-PnPOrgAssetsLibrary -LibraryUrl \"sites/branding/logos\" -ShouldRemoveFromCdn $true -CdnType Private This example removes the document library with the url \"logos\" residing in the sitecollection with the url \"sites/branding/logos\" from the list with organizational assets also removing it as a Private Office 365 CDN source PARAMETERS -CdnType Indicates what type of Office 365 CDN source the document library that will no longer be flagged as an organizational asset was of Type: SPOTenantCdnType Parameter Sets: (All) Accepted values: Public, Private Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LibraryUrl The server relative url of the document library flagged as organizational asset which you want to remove, i.e. \"sites/branding/logos\" Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShouldRemoveFromCdn Boolean indicating if the document library that will no longer be flagged as an organizational asset also needs to be removed as an Office 365 CDN source Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPOrgNewsSite.html": {
    "href": "cmdlets/Remove-PnPOrgNewsSite.html",
    "title": "Remove-PnPOrgNewsSite | PnP PowerShell",
    "keywords": "Remove-PnPOrgNewsSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes a given site from the list of organizational news sites. SYNTAX Remove-PnPOrgNewsSite -OrgNewsSiteUrl <SitePipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Removes a given site from the list of organizational news sites based on its URL in your SharePoint Online Tenant. EXAMPLES EXAMPLE 1 Remove-PnPOrgNewsSite -OrgNewsSiteUrl \"https://tenant.sharepoint.com/sites/mysite\" This example removes the specified site from list of organization's news sites. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OrgNewsSiteUrl The site to be removed from list of organization's news sites Type: SitePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPPage.html": {
    "href": "cmdlets/Remove-PnPPage.html",
    "title": "Remove-PnPPage | PnP PowerShell",
    "keywords": "Remove-PnPPage SYNOPSIS Removes a page SYNTAX Remove-PnPPage [-Identity] <PagePipeBind> [-Force] [-Recycle] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPPage -Identity \"MyPage\" Removes the page named 'MyPage.aspx' EXAMPLE 2 Remove-PnPPage -Identity \"Templates/MyPageTemplate\" Removes the specified page which is located in the Templates folder of the Site Pages library. EXAMPLE 3 Remove-PnPPage $page Removes the specified page which is contained in the $page variable. EXAMPLE 4 Remove-PnPPage -Identity \"MyPage\" -Recycle Removes the page named 'MyPage.aspx' and sends it to the recycle bin. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name of the page Type: PagePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Recycle Specifying the Recycle parameter will delete the page and send it to recycle bin. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPPageComponent.html": {
    "href": "cmdlets/Remove-PnPPageComponent.html",
    "title": "Remove-PnPPageComponent | PnP PowerShell",
    "keywords": "Remove-PnPPageComponent SYNOPSIS Removes a page component from a page SYNTAX Remove-PnPPageComponent [-Page] <PagePipeBind> -InstanceId <Guid> [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPPageComponent -Page Home -InstanceId a2875399-d6ff-43a0-96da-be6ae5875f82 Removes the control specified from the page. EXAMPLE 2 $webpart = Get-PnPPageComponent -Page \"Home\" | Where-Object { $_.Title -eq \"Site activity\" } Remove-PnPPageComponent -Page \"Home\" -InstanceId $webpart.InstanceId -Force Finds a web part with the Title \"Site activity\" on the Home.aspx page, then removes it from the page PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If specified you will not receive the confirmation question Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InstanceId The instance id of the component Type: Guid Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Page The name of the page Type: PagePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPPlannerBucket.html": {
    "href": "cmdlets/Remove-PnPPlannerBucket.html",
    "title": "Remove-PnPPlannerBucket | PnP PowerShell",
    "keywords": "Remove-PnPPlannerBucket SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Removes a planner bucket SYNTAX By Name Remove-PnPPlannerBucket -Group <PlannerGroupPipeBind> -Plan <PlannerPlanPipeBind> -Identity <PlannerBucketPipeBind> [-WhatIf] [-Confirm] [<CommonParameters>] By Bucket Id Remove-PnPPlannerBucket -BucketId <String> -Identity <PlannerBucketPipeBind> [-WhatIf] [-Confirm] [<CommonParameters>] DESCRIPTION This cmdlet removes a Planner bucket. EXAMPLES Example 1 Remove-PnPPlannerBucket -Group \"Marketing\" -Plan \"Conference\" -Identity \"Preconference Todos\" This removes the \"Preconference Todos\" bucket from the specified plan. PARAMETERS -BucketId The id of a bucket to remove Type: String Parameter Sets: By Bucket Id Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group Specify the group id or name of the group owning the plan. Type: PlannerGroupPipeBind Parameter Sets: By Name Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify the id or name of the bucket. Type: PlannerBucketPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Plan Specify the id or name of the plan owning the bucket. Type: PlannerPlanPipeBind Parameter Sets: By Name Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPPlannerPlan.html": {
    "href": "cmdlets/Remove-PnPPlannerPlan.html",
    "title": "Remove-PnPPlannerPlan | PnP PowerShell",
    "keywords": "Remove-PnPPlannerPlan SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Removes a planner plan SYNTAX Remove-PnPPlannerPlan -Group <PlannerGroupPipeBind> -Identity <PlannerPlanPipeBind> [-WhatIf] [-Confirm] [<CommonParameters>] DESCRIPTION This cmdlet removes a planner plan EXAMPLES Example 1 Remove-PnPPlannerPlan -Group \"Marketing\" -Identity \"Conferenc Planning\" This removes the plan identified. PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group Specify the id or name of the group owning the plan. Type: PlannerGroupPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify the name or id of the plan Type: PlannerPlanPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPPlannerRoster.html": {
    "href": "cmdlets/Remove-PnPPlannerRoster.html",
    "title": "Remove-PnPPlannerRoster | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Remove-PnPPlannerRoster SYNOPSIS Removes a Microsoft Planner Roster SYNTAX Remove-PnPPlannerRoster -Identity <PlannerRosterPipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Removes a Microsoft Planner Roster EXAMPLES EXAMPLE 1 Remove-PnPPlannerRoster -Identity \"6519868f-868f-6519-8f86-19658f861965\" Removes the Microsoft Planner Roster with the provided identifier PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name or ID of the Microsoft Planner Roster to remove Type: PlannerRosterPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPPlannerRosterMember.html": {
    "href": "cmdlets/Remove-PnPPlannerRosterMember.html",
    "title": "Remove-PnPPlannerRosterMember | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Remove-PnPPlannerRosterMember SYNOPSIS Removes a member from a Microsoft Planner Roster SYNTAX Remove-PnPPlannerRosterMember -Identity <PlannerRosterPipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Removes a member from a Microsoft Planner Roster EXAMPLES EXAMPLE 1 Remove-PnPPlannerRosterMember -Identity \"6519868f-868f-6519-8f86-19658f861965\" -User \"johndoe@contoso.onmicrosoft.com\" Removes the provided user from the Microsoft Planner Roster with the provided identifier PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. -Identity Identity of the Microsoft Planner Roster to remove the member from Type: PlannerRosterPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User User principal name of the user to remove from being a member Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPPlannerTask.html": {
    "href": "cmdlets/Remove-PnPPlannerTask.html",
    "title": "Remove-PnPPlannerTask | PnP PowerShell",
    "keywords": "Remove-PnPPlannerTask SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Removes a Planner task SYNTAX Remove-PnPPlannerTask -Task <PlannerTaskPipeBind> [<CommonParameters>] DESCRIPTION This cmdlet removes a specific Planner task. EXAMPLES Example 1 Remove-PnPPlannerTask -Task _LIqnL4lZUqurT71i2-iY5YALFLk Removes the task with the specified id. PARAMETERS -Task Specify the id or Task object to delete. Type: PlannerTaskPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPPropertyBagValue.html": {
    "href": "cmdlets/Remove-PnPPropertyBagValue.html",
    "title": "Remove-PnPPropertyBagValue | PnP PowerShell",
    "keywords": "Remove-PnPPropertyBagValue SYNOPSIS Removes a value from the property bag SYNTAX Remove-PnPPropertyBagValue [-Key] <String> [-Folder <String>] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Removes a value from the property bag. If working with a modern SharePoint Online site or having noscript enabled, you will have to disable this yourself temporarily using Set-PnPTenantSite -Url <url> -NoScriptSite:$false to be able to make the change. EXAMPLES EXAMPLE 1 Remove-PnPPropertyBagValue -Key MyKey This will remove the value with key MyKey from the current web property bag EXAMPLE 2 Remove-PnPPropertyBagValue -Key MyKey -Folder /MyFolder This will remove the value with key MyKey from the folder MyFolder which is located in the root folder of the current web EXAMPLE 3 Remove-PnPPropertyBagValue -Key MyKey -Folder / This will remove the value with key MyKey from the root folder of the current web PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder Site relative url of the folder. See examples for use. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Key Key of the property bag value to be removed Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPPublishingImageRendition.html": {
    "href": "cmdlets/Remove-PnPPublishingImageRendition.html",
    "title": "Remove-PnPPublishingImageRendition | PnP PowerShell",
    "keywords": "Remove-PnPPublishingImageRendition SYNOPSIS Removes an existing image rendition SYNTAX Remove-PnPPublishingImageRendition [-Identity] <ImageRenditionPipeBind> [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPPublishingImageRendition -Name \"MyImageRendition\" -Width 800 -Height 600 PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be asked to remove the Image Rendition. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The display name or id of the Image Rendition. Type: ImageRenditionPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPRoleDefinition.html": {
    "href": "cmdlets/Remove-PnPRoleDefinition.html",
    "title": "Remove-PnPRoleDefinition | PnP PowerShell",
    "keywords": "Remove-PnPRoleDefinition SYNOPSIS Remove a Role Definition from a site SYNTAX Remove-PnPRoleDefinition [-Identity] <RoleDefinitionPipeBind> [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPRoleDefinition -Identity MyRoleDefinition Removes the specified Role Definition (Permission Level) from the current site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Do not ask for confirmation to delete the role definition Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The identity of the role definition, either a RoleDefinition object or a the name of roledefinition Type: RoleDefinitionPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPSdnProvider.html": {
    "href": "cmdlets/Remove-PnPSdnProvider.html",
    "title": "Remove-PnPSdnProvider | PnP PowerShell",
    "keywords": "Remove-PnPSdnProvider SYNOPSIS Removes Software-Defined Networking (SDN) Support in your SharePoint Online tenant. SYNTAX Remove-PnPSdnProviderr [-Confirm] [-WhatIf] DESCRIPTION Removes SDN Support in your SharePoint Online tenant. EXAMPLES EXAMPLE 1 Remove-PnPSdnProvider -Confirm:false This command removes the SDN support for your Online Tenant without confirmation. PARAMETERS -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPSearchConfiguration.html": {
    "href": "cmdlets/Remove-PnPSearchConfiguration.html",
    "title": "Remove-PnPSearchConfiguration | PnP PowerShell",
    "keywords": "Remove-PnPSearchConfiguration SYNOPSIS Remove the search configuration SYNTAX Config Remove-PnPSearchConfiguration -Configuration <String> [-Scope <SearchConfigurationScope>] [-Connection <PnPConnection>] [<CommonParameters>] Path Remove-PnPSearchConfiguration -Path <String> [-Scope <SearchConfigurationScope>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPSearchConfiguration -Configuration $config Remove the search configuration for the current web (does not remove managed property mappings) EXAMPLE 2 Remove-PnPSearchConfiguration -Configuration $config -Scope Site Remove the search configuration for the current site collection (does not remove managed property mappings) EXAMPLE 3 Remove-PnPSearchConfiguration -Configuration $config -Scope Subscription Remove the search configuration for the current tenant (does not remove managed property mappings) EXAMPLE 4 Remove-PnPSearchConfiguration -Path searchconfig.xml -Scope Subscription Reads the search configuration from the specified XML file and remove it for the current tenant (does not remove managed property mappings) PARAMETERS -Configuration Search configuration string Type: String Parameter Sets: Config Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Path to a search configuration Type: String Parameter Sets: Path Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope Type: SearchConfigurationScope Parameter Sets: (All) Accepted values: Web, Site, Subscription Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPSiteClassification.html": {
    "href": "cmdlets/Remove-PnPSiteClassification.html",
    "title": "Remove-PnPSiteClassification | PnP PowerShell",
    "keywords": "Remove-PnPSiteClassification SYNOPSIS Required Permissions Microsoft Graph API: Directory.ReadWrite.All Removes one or more existing site classification values from the list of available values SYNTAX Remove-PnPSiteClassification -Classifications <System.Collections.Generic.List`1[System.String]> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPSiteClassification -Classifications \"HBI\" Removes the \"HBI\" site classification from the list of available values. EXAMPLE 2 Remove-PnPSiteClassification -Classifications \"HBI\", \"Top Secret\" Removes the \"HBI\" and \"Top Secret\" site classification from the list of available values. PARAMETERS -Classifications Type: System.Collections.Generic.List`1[System.String] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Confirm Specifying the Confirm parameter will allow the confirmation question to be skipped Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPSiteCollectionAdmin.html": {
    "href": "cmdlets/Remove-PnPSiteCollectionAdmin.html",
    "title": "Remove-PnPSiteCollectionAdmin | PnP PowerShell",
    "keywords": "Remove-PnPSiteCollectionAdmin SYNOPSIS Removes one or more users as site collection administrators from the site collection in the current context SYNTAX Remove-PnPSiteCollectionAdmin -Owners <System.Collections.Generic.List`1[PnP.PowerShell.Commands.Base.PipeBinds.UserPipeBind]> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This command allows removing one to many users as site collection administrators from the site collection in the current context. All existing site collection administrators not included in this command will remain site collection administrator. EXAMPLES EXAMPLE 1 Remove-PnPSiteCollectionAdmin -Owners \"user@contoso.onmicrosoft.com\" This will remove user@contoso.onmicrosoft.com as a site collection owner from the site collection in the current context EXAMPLE 2 Remove-PnPSiteCollectionAdmin -Owners @(\"user1@contoso.onmicrosoft.com\", \"user2@contoso.onmicrosoft.com\") This will remove user1@contoso.onmicrosoft.com and user2@contoso.onmicrosoft.com as site collection owners from the site collection in the current context EXAMPLE 3 Get-PnPUser | ? Title -Like \"*Doe\" | Remove-PnPSiteCollectionAdmin This will remove all users with their title ending with \"Doe\" as site collection owners from the site collection in the current context EXAMPLE 4 Get-PnPSiteCollectionAdmin | Remove-PnPSiteCollectionAdmin This will remove all existing site collection administrators from the site collection in the current context PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owners Specifies owner(s) to remove as site collection administrators. Can be both users and groups. Type: System.Collections.Generic.List`1[PnP.PowerShell.Commands.Base.PipeBinds.UserPipeBind] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPSiteCollectionAppCatalog.html": {
    "href": "cmdlets/Remove-PnPSiteCollectionAppCatalog.html",
    "title": "Remove-PnPSiteCollectionAppCatalog | PnP PowerShell",
    "keywords": "Remove-PnPSiteCollectionAppCatalog SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes a Site Collection scoped App Catalog from a site SYNTAX Remove-PnPSiteCollectionAppCatalog -Site <SitePipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Notice that this will not remove the App Catalog list and its contents from the site. EXAMPLES EXAMPLE 1 Remove-PnPSiteCollectionAppCatalog -Site \"https://contoso.sharepoint.com/sites/FinanceTeamsite\" This will remove a SiteCollection app catalog from the specified site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site Url of the site to remove the app catalog from. Type: SitePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPSiteCollectionTermStore.html": {
    "href": "cmdlets/Remove-PnPSiteCollectionTermStore.html",
    "title": "Remove-PnPSiteCollectionTermStore | PnP PowerShell",
    "keywords": "Remove-PnPSiteCollectionTermStore SYNOPSIS Removes the site collection term store if it exists or else nothing will happen SYNTAX Remove-PnPSiteCollectionTermStore [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Removes the site collection scoped term store for the currently connected to site collection. If it does not exist yet, it will not do anything. EXAMPLES EXAMPLE 1 Remove-PnPSiteCollectionTermStore Removes the site collection term store. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPSiteDesign.html": {
    "href": "cmdlets/Remove-PnPSiteDesign.html",
    "title": "Remove-PnPSiteDesign | PnP PowerShell",
    "keywords": "Remove-PnPSiteDesign SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes a Site Design SYNTAX Remove-PnPSiteDesign [-Identity] <TenantSiteDesignPipeBind> [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPSiteDesign -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd Removes the specified site design PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If specified you will not be asked to confirm removing the specified Site Design Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the site design to remove Type: TenantSiteDesignPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPSiteDesignTask.html": {
    "href": "cmdlets/Remove-PnPSiteDesignTask.html",
    "title": "Remove-PnPSiteDesignTask | PnP PowerShell",
    "keywords": "Remove-PnPSiteDesignTask SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes a Site Design Task. If the execution of the associated site script has already started the execution will not be terminated. SYNTAX Remove-PnPSiteDesignTask [-Identity] <TenantSiteDesignTaskPipeBind> [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPSiteDesignTask -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd Removes the specified site design task PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If specified you will not be asked to confirm removing the specified Site Design Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the site design to remove Type: TenantSiteDesignTaskPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPSiteGroup.html": {
    "href": "cmdlets/Remove-PnPSiteGroup.html",
    "title": "Remove-PnPSiteGroup | PnP PowerShell",
    "keywords": "Remove-PnPSiteGroup SYNOPSIS Removes a group from a web. SYNTAX Remove-PnPSiteGroup -Identity <String> [-Site <SitePipeBind>] [-WhatIf] [-Confirm] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPSiteGroup -Identity GroupToRemove -Site \"https://contoso.sharepoint.com/sites/marketing\" This example removes a group named GroupToRemove from the site collection https://contoso.sharepoint.com/sites/marketing . EXAMPLE 2 Remove-PnPSiteGroup -Identity GroupToRemove This example removes a group named GroupToRemove from the current site collection that has been connected to with Connect-PnPOnline. PARAMETERS -Identity Specifies the name of the group to remove. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site Specifies the site collection to remove the group from. Type: SitePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPSiteScript.html": {
    "href": "cmdlets/Remove-PnPSiteScript.html",
    "title": "Remove-PnPSiteScript | PnP PowerShell",
    "keywords": "Remove-PnPSiteScript SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes a Site Script SYNTAX Remove-PnPSiteScript [-Identity] <TenantSiteScriptPipeBind> [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPSiteScript -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd Removes the specified site script PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If specified you will not be asked to confirm removing the specified Site Script Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the Site Script to remove Type: TenantSiteScriptPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPSiteUserInvitations.html": {
    "href": "cmdlets/Remove-PnPSiteUserInvitations.html",
    "title": "Remove-PnPSiteUserInvitations | PnP PowerShell",
    "keywords": "Remove-PnPSiteUserInvitations SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Searches against all stored sharing links and removes an email invite. SYNTAX Remove-PnPSiteUserInvitations [[-Site] <SitePipeBind>] [-EmailAddress] <string> [<CommonParameters>] DESCRIPTION Searches against all stored sharing links on a Site and removes an email invits. If the site parameter is omitted the current site will be searched. EXAMPLES EXAMPLE 1 Remove-PnPiteUserInvitations -Site \"https://contoso.sharepoint.com/sites/ContosoWeb1/\" -EmailAddress someone@example.com This example removes the email invite stored in the ContosoWeb1 site for the user with email address someone@example.com. PARAMETERS -Site Specifies the URL of the site collection. Type: SitePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EmailAddress Email Address of the user. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPStorageEntity.html": {
    "href": "cmdlets/Remove-PnPStorageEntity.html",
    "title": "Remove-PnPStorageEntity | PnP PowerShell",
    "keywords": "Remove-PnPStorageEntity SYNOPSIS Remove Storage Entities / Farm Properties from either the tenant scoped app catalog or the current site collection if the site has a site collection scoped app catalog SYNTAX Remove-PnPStorageEntity -Key <String> [-Scope <StorageEntityScope>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPStorageEntity -Key MyKey Removes an existing storage entity / farm property EXAMPLE 2 Remove-PnPStorageEntity -Key MyKey -Scope Site Removes an existing storage entity from the current site collection PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Key The key of the value to remove. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope Defines the scope of the storage entity. Defaults to Tenant. Type: StorageEntityScope Parameter Sets: (All) Accepted values: Site, Tenant Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPStoredCredential.html": {
    "href": "cmdlets/Remove-PnPStoredCredential.html",
    "title": "Remove-PnPStoredCredential | PnP PowerShell",
    "keywords": "Remove-PnPStoredCredential SYNOPSIS Removes a credential from the Credential Manager SYNTAX Remove-PnPStoredCredential -Name <String> [-Force] [<CommonParameters>] DESCRIPTION Removes a stored credential from the Credential Manager EXAMPLES EXAMPLE 1 Remove-PnPStoredCredential -Name \"https://tenant.sharepoint.com\" Removes the specified credential from the Credential Manager PARAMETERS -Force If specified you will not be asked for confirmation Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The credential to remove Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTaxonomyItem.html": {
    "href": "cmdlets/Remove-PnPTaxonomyItem.html",
    "title": "Remove-PnPTaxonomyItem | PnP PowerShell",
    "keywords": "Remove-PnPTaxonomyItem SYNOPSIS Removes a taxonomy item SYNTAX Remove-PnPTaxonomyItem [-TermPath] <String> [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermPath The path, delimited by | of the taxonomy item to remove, alike GROUPLABEL|TERMSETLABEL|TERMLABEL Type: String Parameter Sets: (All) Aliases: Term Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTeamsApp.html": {
    "href": "cmdlets/Remove-PnPTeamsApp.html",
    "title": "Remove-PnPTeamsApp | PnP PowerShell",
    "keywords": "Remove-PnPTeamsApp SYNOPSIS Required Permissions Microsoft Graph API: AppCatalog.ReadWrite.All Removes an app from the Teams AppCatalog. SYNTAX Remove-PnPTeamsApp -Identity <TeamsAppPipeBind> [-Force] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPTeamsApp -Identity ac139d8b-fa2b-4ffe-88b3-f0b30158b58b Removes an app from the Teams AppCatalog by using the id. EXAMPLE 2 Remove-PnPTeamsApp -Identity \"My Teams App\" Removes the app \"My teams App\" from the Teams AppCatalog by using display name. PARAMETERS -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The id, externalid or display name of the app. Type: TeamsAppPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTeamsChannel.html": {
    "href": "cmdlets/Remove-PnPTeamsChannel.html",
    "title": "Remove-PnPTeamsChannel | PnP PowerShell",
    "keywords": "Remove-PnPTeamsChannel SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Removes a channel from a Microsoft Teams instance. SYNTAX Remove-PnPTeamsChannel -Team <TeamsTeamPipeBind> -Identity <TeamsChannelPipeBind> [-Force] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPTeamsChannel -Team 4efdf392-8225-4763-9e7f-4edeb7f721aa -DisplayName \"My Channel\" Removes the channel specified from the team specified PARAMETERS -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify the channel id or display name of the channel to delete. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTeamsChannelUser.html": {
    "href": "cmdlets/Remove-PnPTeamsChannelUser.html",
    "title": "Remove-PnPTeamsChannelUser | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Remove-PnPTeamsChannelUser SYNOPSIS Required Permissions Microsoft Graph API: ChannelMember.ReadWrite.All Removes a specified user of a specified Microsoft Teams private Channel. SYNTAX Remove-PnPTeamsChannelUser -Team <TeamsTeamPipeBind> -Channel <TeamsChannelPipeBind> -Identity <TeamsChannelMemberPipeBind> [-Force] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPTeamsChannelUser -Team \"My Team\" -Channel \"My Channel\" -Identity MCMjMiMjMDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwIyMxOTowMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMEB0aHJlYWQuc2t5cGUjIzAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMA== Removes the user with specific membership ID from the specified Teams channel. EXAMPLE 2 Remove-PnPTeamsChannelUser -Team \"My Team\" -Channel \"My Channel\" -Identity 00000000-0000-0000-0000-000000000000 Removes the user with ID \"00000000-0000-0000-0000-000000000000\" from the specified Teams channel. EXAMPLE 3 Remove-PnPTeamsChannelUser -Team \"My Team\" -Channel \"My Channel\" -Identity john.doe@contoso.com -Force Removes the user \"john.doe@contoso.com\" from the specified Teams channel without confirmation prompt. PARAMETERS -Identity Specify membership id, UPN or user ID of the channel member. Type: TeamsChannelMemberPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Channel Specify id or name of the channel to use. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTeamsTab.html": {
    "href": "cmdlets/Remove-PnPTeamsTab.html",
    "title": "Remove-PnPTeamsTab | PnP PowerShell",
    "keywords": "Remove-PnPTeamsTab SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Removes a Microsoft Teams tab in a channel. SYNTAX Remove-PnPTeamsTab -Team <TeamsTeamPipeBind> -Channel <TeamsChannelPipeBind> -Identity <TeamsTabPipeBind> [-Force] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPTeamsTab -Team 5beb63c5-0571-499e-94d5-3279fdd9b6b5 -Channel \"General\" -Identity Wiki Removes the tab with the display name 'Wiki' from the General channel using diaply name. EXAMPLE 2 Remove-PnPTeamsTab -Team 5beb63c5-0571-499e-94d5-3279fdd9b6b5 -Channel 19:796d063b63e34497aeaf092c8fb9b44e@thread.skype -Identity Wiki Removes the tab with the display name 'Wiki' from the channel using id. EXAMPLE 3 Remove-PnPTeamsTab -Team 5beb63c5-0571-499e-94d5-3279fdd9b6b5 -Channel 19:796d063b63e34497aeaf092c8fb9b44e@thread.skype -Identity fcef815d-2e8e-47a5-b06b-9bebba5c7852 Removes a tab with the specified id from the channel PARAMETERS -Channel Specify the channel id or display name of the channel to use. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify the id of the tab Type: TeamsTabPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTeamsTeam.html": {
    "href": "cmdlets/Remove-PnPTeamsTeam.html",
    "title": "Remove-PnPTeamsTeam | PnP PowerShell",
    "keywords": "Remove-PnPTeamsTeam SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Removes a Microsoft Teams Team instance and its corresponding Microsoft 365 Group SYNTAX Remove-PnPTeamsTeam -Identity <TeamsTeamPipeBind> [-Force] [<CommonParameters>] DESCRIPTION Removes a Microsoft Teams Team. This also removes the associated Microsoft 365 Group, and is functionally identical to Remove-PnPMicrosoft365Group EXAMPLES EXAMPLE 1 Remove-PnPTeamsTeam -Identity 5beb63c5-0571-499e-94d5-3279fdd9b6b5 Removes the specified Team EXAMPLE 2 Remove-PnPTeamsTeam -Identity testteam Removes the specified Team. If there are multiple teams with the same display name it will not proceed deleting the team. PARAMETERS -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify the group id, mailNickname or display name of the team to remove. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTeamsUser.html": {
    "href": "cmdlets/Remove-PnPTeamsUser.html",
    "title": "Remove-PnPTeamsUser | PnP PowerShell",
    "keywords": "Remove-PnPTeamsUser SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Removes a user from a team. SYNTAX Remove-PnPTeamsUser -Team <TeamsTeamPipeBind> -User <String> [-Role <String>] [-Force] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPTeamsUser -Team MyTeam -User john@doe.com Removes the user specified from both owners and members of the team. EXAMPLE 2 Remove-PnPTeamsUser -Team MyTeam -User john@doe.com -Role Owner Removes the user john@doe.com from the owners of the team, but retains the user as a member. PARAMETERS -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Role Specify the role of the user you are removing from the team. Accepts \"Owner\" and \"Member\" as possible values. If specified as \"Member\" then the specified user is removed from the Team completely even if they were the owner of the Team. If \"Owner\" is specified in the -Role parameter then the specified user is removed as an owner of the team but stays as a team member. Defaults to \"Member\". Note: The last owner cannot be removed from the team. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User Specify the UPN (e.g. john@doe.com) Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTenantCdnOrigin.html": {
    "href": "cmdlets/Remove-PnPTenantCdnOrigin.html",
    "title": "Remove-PnPTenantCdnOrigin | PnP PowerShell",
    "keywords": "Remove-PnPTenantCdnOrigin SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes an origin from the Public or Private content delivery network (CDN). SYNTAX Remove-PnPTenantCdnOrigin -OriginUrl <String> -CdnType <SPOTenantCdnType> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Removes an origin from the Public or Private content delivery network (CDN). You must be a SharePoint Online global administrator to run the cmdlet. EXAMPLES EXAMPLE 1 Remove-PnPTenantCdnOrigin -OriginUrl /sites/site/subfolder -CdnType Public This example removes the specified origin from the public CDN PARAMETERS -CdnType The cdn type to remove the origin from. Type: SPOTenantCdnType Parameter Sets: (All) Accepted values: Public, Private Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OriginUrl The origin to remove. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTenantDeletedSite.html": {
    "href": "cmdlets/Remove-PnPTenantDeletedSite.html",
    "title": "Remove-PnPTenantDeletedSite | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Remove-PnPTenantDeletedSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes a site collection from the Tenant recycle bin. SYNTAX Remove-PnPTenantDeletedSite [-Url] <String> [-Force] [-NoWait] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Removes a site collection which is listed in your tenant administration site from the tenant's recycle bin. EXAMPLES EXAMPLE 1 Remove-PnPTenantDeletedSite -Identity \"https://tenant.sharepoint.com/sites/contoso\" This will remove the site collection with the url 'https://tenant.sharepoint.com/sites/contoso' from the recycle bin. EXAMPLE 2 Remove-PnPTenantDeletedSite -Identity \"https://tenant.sharepoint.com/sites/contoso\" -Force This will remove the site collection with the url 'https://tenant.sharepoint.com/sites/contoso' with force from the recycle bin. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Do not ask for confirmation. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NoWait If specified the task will return immediately after creating the delete site job. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the full URL of the site collection that needs to be deleted. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTenantSite.html": {
    "href": "cmdlets/Remove-PnPTenantSite.html",
    "title": "Remove-PnPTenantSite | PnP PowerShell",
    "keywords": "Remove-PnPTenantSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes a site collection SYNTAX Remove-PnPTenantSite [-Url] <String> [-SkipRecycleBin] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Removes a site collection which is listed in your tenant administration site. EXAMPLES EXAMPLE 1 Remove-PnPTenantSite -Url \"https://tenant.sharepoint.com/sites/contoso\" This will remove the site collection with the url 'https://tenant.sharepoint.com/sites/contoso' and put it in the recycle bin. EXAMPLE 2 Remove-PnPTenantSite -Url \"https://tenant.sharepoint.com/sites/contoso\" -Force -SkipRecycleBin This will remove the site collection with the url 'https://tenant.sharepoint.com/sites/contoso' with force and it will skip the recycle bin. EXAMPLE 3 Remove-PnPTenantSite -Url \"https://tenant.sharepoint.com/sites/contoso\" -FromRecycleBin This will remove the site collection with the url 'https://tenant.sharepoint.com/sites/contoso' from the recycle bin. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Do not ask for confirmation. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SkipRecycleBin Do not add to the tenant scoped recycle bin when selected. Type: SwitchParameter Parameter Sets: (All) Aliases: SkipTrash Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Specifies the full URL of the site collection that needs to be deleted Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTenantSyncClientRestriction.html": {
    "href": "cmdlets/Remove-PnPTenantSyncClientRestriction.html",
    "title": "Remove-PnPTenantSyncClientRestriction | PnP PowerShell",
    "keywords": "Remove-PnPTenantSyncClientRestriction SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes organization-level OneDrive synchronization restrictions SYNTAX Remove-PnPTenantSyncClientRestriction DESCRIPTION The Remove-PnPTenantSyncClientRestriction cmdlet disables the feature for the tenant, but does not remove any present domain GUID entries from the safe sender recipient list. After the Remove-PnPTenantSyncClientRestriction cmdlet is run it can take up to 24 hours for change to take effect. This parameter will also remove any values set from the GrooveBlockOption parameter for syncing. EXAMPLES EXAMPLE 1 Remove-PnPTenantSyncClientRestriction This example disables this feature for the tenant. RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTenantTheme.html": {
    "href": "cmdlets/Remove-PnPTenantTheme.html",
    "title": "Remove-PnPTenantTheme | PnP PowerShell",
    "keywords": "Remove-PnPTenantTheme SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes a theme SYNTAX Remove-PnPTenantTheme [-Identity] <ThemePipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Removes the specified theme from the tenant configuration EXAMPLES EXAMPLE 1 Remove-PnPTenantTheme -Name \"MyCompanyTheme\" Removes the specified theme. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name of the theme to retrieve Type: ThemePipeBind Parameter Sets: (All) Aliases: Name Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTerm.html": {
    "href": "cmdlets/Remove-PnPTerm.html",
    "title": "Remove-PnPTerm | PnP PowerShell",
    "keywords": "Remove-PnPTerm SYNOPSIS Removes a taxonomy term from the term store. SYNTAX By Term Id Remove-PnPTerm -Identity <Guid> [-TermStore <TaxonomyTermStorePipeBind>] [-WhatIf] [-Confirm] [<CommonParameters>] By Term Name Remove-PnPTerm -Identity <String> -TermSet <TaxonomyTermSetPipeBind> -TermGroup <TaxonomyTermGroupPipeBind> [-TermStore <TaxonomyTermStorePipeBind>] [-Connection <PnPConnection>] [-WhatIf] [-Confirm] [<CommonParameters>] DESCRIPTION This cmdlet removes a term from the term store. EXAMPLES Example 1 Remove-PnPTerm -Identity 3d9e60e8-d89c-4cd4-af61-a010cf93b380 Removes a term by id. Example 2 Remove-PnPTerm -Identity \"Marketing\" -TermSet \"Departments\" -TermGroup \"Corporate\" Removes a term by name. PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies which term to remove. Type: TaxonomyTermPipeBind Parameter Sets: (All) Aliases: Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermGroup Specifies which termgroup to find the termset in. Type: TaxonomyTermGroupPipeBind Parameter Sets: By Term Name Aliases: Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermSet Specifies which termset to find the term in if the identity of the term is specified as a string. Type: TaxonomyTermSetPipeBind Parameter Sets: By Term Name Aliases: Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermStore Term store to use; if not specified the default term store is used. Type: TaxonomyTermStorePipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTermGroup.html": {
    "href": "cmdlets/Remove-PnPTermGroup.html",
    "title": "Remove-PnPTermGroup | PnP PowerShell",
    "keywords": "Remove-PnPTermGroup SYNOPSIS Removes a taxonomy term group and all its containing termsets SYNTAX Remove-PnPTermGroup -Identity <TaxonomyTermGroupPipeBind> [-TermStore <TaxonomyTermStorePipeBind>] [-Force] [-WhatIf] [-Confirm] [<CommonParameters>] DESCRIPTION This cmdlet removes a term group and all the containing termsets. EXAMPLES Example 1 Remove-PnPTermGroup -Identity 3d9e60e8-d89c-4cd4-af61-a010cf93b380 Removes the specified termgroup. Example 2 Remove-PnPTermGroup -Identity \"Corporate\" Example 3 Remove-PnPTermGroup -Identity \"HR\" -Force Removes the specified termgroup without prompting for confirmation. PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name of GUID of the group to remove. Type: TaxonomyTermGroupPipeBind Parameter Sets: (All) Aliases: GroupName Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermStore Term store to use; if not specified the default term store is used. Type: TaxonomyTermStorePipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPTermLabel.html": {
    "href": "cmdlets/Remove-PnPTermLabel.html",
    "title": "Remove-PnPTermLabel | PnP PowerShell",
    "keywords": "Remove-PnPTermLabel SYNOPSIS Removes a single label/translation from a term. SYNTAX By Term Id Remove-PnPTermLabel -Label <String> -Term <Guid> -Lcid <Int32> [-TermStore <Guid>] [-Connection <PnPConnection>] [-WhatIf] [-Confirm] [<CommonParameters>] By Name Remove-PnPTermLabel -Label <String> -Term <String> -Lcid <Int32> -TermSet <Name|Guid> -TermGroup <Name|Guid> [-TermStore <Guid>] [-Connection <PnPConnection>] [-WhatIf] [-Confirm] [<CommonParameters>] DESCRIPTION This cmdlet removes a label/translation from a term. EXAMPLES Example 1 Remove-PnPTermLabel -Label \"Marknadsföring\" -Lcid 1053 -Term 2d1f298b-804a-4a05-96dc-29b667adec62 Removes the Swedish label from the specified term Example 2 Remove-PnPTermLabel -Label \"Marknadsföring\" -Lcid 1053 -Term \"Marketing\" -TermSet \"Departments\" -TermGroup \"Corporate\" Removes the Swedish label from the specified term PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Label The label to remove. Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Lcid {{ Fill Lcid Description }} Type: Int32 Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Term {{ Fill Term Description }} Type: Guid Parameter Sets: By Term Id Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False Type: String Parameter Sets: By Name Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermGroup The Term Group containing the Term Set. Type: Guid or String Parameter Sets: By Name Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermSet The Term Set containing the Term Type: Guid or String Parameter Sets: By Name Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermStore The Term Store containing the Term Group. Type: Guid Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS"
  },
  "cmdlets/Remove-PnPUser.html": {
    "href": "cmdlets/Remove-PnPUser.html",
    "title": "Remove-PnPUser | PnP PowerShell",
    "keywords": "Remove-PnPUser SYNOPSIS Removes a specific user from the site collection User Information List SYNTAX Remove-PnPUser [-Identity] <UserPipeBind> [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This command will allow the removal of a specific user from the User Information List EXAMPLES EXAMPLE 1 Remove-PnPUser -Identity 23 Remove the user with Id 23 from the User Information List of the current site collection EXAMPLE 2 Remove-PnPUser -Identity i:0#.f|membership|user@tenant.onmicrosoft.com Remove the user with LoginName i:0#.f|membership|user@tenant.onmicrosoft.com from the User Information List of the current site collection EXAMPLE 3 Get-PnPUser | ? Email -eq \"user@tenant.onmicrosoft.com\" | Remove-PnPUser Remove the user with e-mail address user@tenant.onmicrosoft.com from the User Information List of the current site collection EXAMPLE 4 Remove-PnPUser -Identity i:0#.f|membership|user@tenant.onmicrosoft.com -Confirm:$false Remove the user with LoginName i:0#.f|membership|user@tenant.onmicrosoft.com from the User Information List of the current site collection without asking to confirm the removal first PARAMETERS -Confirm Specifying the Confirm parameter will allow the confirmation question to be skipped Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity User ID or login name Type: UserPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPUserInfo.html": {
    "href": "cmdlets/Remove-PnPUserInfo.html",
    "title": "Remove-PnPUserInfo | PnP PowerShell",
    "keywords": "Remove-PnPUserInfo SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Removes a user from the user information list of a specific site collection. SYNTAX Remove-PnPUserInfo -LoginName <String> [-Site <String>] DESCRIPTION Export user information from the site user information list. EXAMPLES EXAMPLE 1 Remove-PnPUserInfo -LoginName user@domain.com -Site \"https://yoursite.sharepoint.com/sites/team\" This removes a user who has the e-mail address user@domain.com from the user information list of https://contoso.sharepoint.com/sites/team site collection. PARAMETERS -LoginName Specifies the login name of the user to remove. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site Specifies the URL of the site collection. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPUserProfile.html": {
    "href": "cmdlets/Remove-PnPUserProfile.html",
    "title": "Remove-PnPUserProfile | PnP PowerShell",
    "keywords": "Remove-PnPUserProfile SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Export user profile data. SYNTAX Remove-PnPUserProfile -LoginName <String> [<CommonParameters>] DESCRIPTION Removes a SharePoint User Profile from the tenant. Note The User must be first be deleted from AAD before the user profile can be deleted. You can use the Azure AD cmdlet Remove-AzureADUser for this action EXAMPLES EXAMPLE 1 Remove-PnPUserProfile -LoginName user@domain.com This removes user profile data with the email address user@domain.com. PARAMETERS -LoginName Specifies the login name of the user to export. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPView.html": {
    "href": "cmdlets/Remove-PnPView.html",
    "title": "Remove-PnPView | PnP PowerShell",
    "keywords": "Remove-PnPView SYNOPSIS Deletes a view from a list SYNTAX Remove-PnPView [-Identity] <ViewPipeBind> [-List] <ListPipeBind> [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPView -List \"Demo List\" -Identity \"All Items\" Removes the view with title \"All Items\" from the \"Demo List\" list. PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID or Title of the view. Type: ViewPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The ID or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 1 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPVivaConnectionsDashboardACE.html": {
    "href": "cmdlets/Remove-PnPVivaConnectionsDashboardACE.html",
    "title": "Remove-PnPVivaConnectionsDashboardACE | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Remove-PnPVivaConnectionsDashboardACE SYNOPSIS Removes the Adaptive card extensions from the Viva connections dashboard page. This requires that you connect to a SharePoint Home site and have configured the Viva connections page. SYNTAX Remove-PnPVivaConnectionsDashboardACE [-Identity <GUID>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPVivaConnectionsDashboardACE -Identity \"58108715-185e-4214-8786-01218e7ab9ef\" Removes the adaptive card extensions with Instance Id 58108715-185e-4214-8786-01218e7ab9ef from the Viva connections dashboard page PARAMETERS -Identity The instance Id of the Adaptive Card extension present on the Viva connections dashboard page. You can retrieve the value for this parameter by executing Get-PnPVivaConnectionsDashboardACE cmdlet Type: GUID Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPWeb.html": {
    "href": "cmdlets/Remove-PnPWeb.html",
    "title": "Remove-PnPWeb | PnP PowerShell",
    "keywords": "Remove-PnPWeb SYNOPSIS Removes a subsite SYNTAX Remove-PnPWeb -Identity <WebPipeBind> [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 2 Remove-PnPWeb -Identity projectA Removes the subsite called projectA and will ask for confirmation before doing so EXAMPLE 1 Remove-PnPWeb -Identity 5fecaf67-6b9e-4691-a0ff-518fc9839aa0 Remove the subsite with the provided Id and will ask for confirmaton before doing so EXAMPLE 2 Get-PnPSubWeb | Remove-PnPWeb -Force Removes all subsites while not asking for confirmation to do so PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Do not ask for confirmation to delete the subweb Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The identifier of a subsite, the subsite instance or name of the subsite Type: WebPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPWebhookSubscription.html": {
    "href": "cmdlets/Remove-PnPWebhookSubscription.html",
    "title": "Remove-PnPWebhookSubscription | PnP PowerShell",
    "keywords": "Remove-PnPWebhookSubscription SYNOPSIS Removes a Webhook subscription from the resource SYNTAX Remove-PnPWebhookSubscription [-Identity] <WebhookSubscriptionPipeBind> [-List <ListPipeBind>] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPWebhookSubscription -List MyList -Identity ea1533a8-ff03-415b-a7b6-517ee50db8b6 Removes the Webhook subscription with the specified id from the list MyList EXAMPLE 2 $subscriptions = Get-PnPWebhookSubscriptions -List MyList Remove-PnPWebhookSubscription -Identity $subscriptions[0] -List MyList Removes the first Webhook subscription from the list MyList EXAMPLE 3 $subscriptions = Get-PnPWebhookSubscriptions -List MyList $subscriptions[0] | Remove-PnPWebhookSubscription -List MyList Removes the first Webhook subscription from the list MyList PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The identity of the Webhook subscription to remove Type: WebhookSubscriptionPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The list object or name which the Webhook subscription will be removed from Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPWebPart.html": {
    "href": "cmdlets/Remove-PnPWebPart.html",
    "title": "Remove-PnPWebPart | PnP PowerShell",
    "keywords": "Remove-PnPWebPart SYNOPSIS Removes a web part from a page SYNTAX ID Remove-PnPWebPart -Identity <Guid> -ServerRelativePageUrl <String> [-Connection <PnPConnection>] [<CommonParameters>] NAME Remove-PnPWebPart -Title <String> -ServerRelativePageUrl <String> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPWebPart -ServerRelativePageUrl \"/sites/demo/sitepages/home.aspx\" -Identity a2875399-d6ff-43a0-96da-be6ae5875f82 This will remove the web part specified by ID to the specified page in the first row and the first column of the HTML table present on the page EXAMPLE 2 Remove-PnPWebPart -ServerRelativePageUrl \"/sites/demo/sitepages/home.aspx\" -Title MyWebpart This will remove the web part specified by title to the specified page in the first row and the first column of the HTML table present on the page PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Guid of the web part Type: Guid Parameter Sets: ID Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativePageUrl Server relative url of the web part page, e.g. /sites/demo/sitepages/home.aspx Type: String Parameter Sets: (All) Aliases: PageUrl Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The name of the web part Type: String Parameter Sets: NAME Aliases: Name Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Remove-PnPWikiPage.html": {
    "href": "cmdlets/Remove-PnPWikiPage.html",
    "title": "Remove-PnPWikiPage | PnP PowerShell",
    "keywords": "Remove-PnPWikiPage SYNOPSIS Removes a wiki page SYNTAX SERVER Remove-PnPWikiPage [-ServerRelativePageUrl] <String> [-Connection <PnPConnection>] [<CommonParameters>] SITE Remove-PnPWikiPage [-SiteRelativePageUrl] <String> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Remove-PnPWikiPage -PageUrl '/pages/wikipage.aspx' Removes the page '/pages/wikipage.aspx' PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativePageUrl Type: String Parameter Sets: SERVER Aliases: PageUrl Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -SiteRelativePageUrl Type: String Parameter Sets: SITE Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Rename-PnPFile.html": {
    "href": "cmdlets/Rename-PnPFile.html",
    "title": "Rename-PnPFile | PnP PowerShell",
    "keywords": "Rename-PnPFile SYNOPSIS Renames a file in its current location SYNTAX SERVER Rename-PnPFile [-ServerRelativeUrl] <String> [-TargetFileName] <String> [-OverwriteIfAlreadyExists] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] SITE Rename-PnPFile [-SiteRelativeUrl] <String> [-TargetFileName] <String> [-OverwriteIfAlreadyExists] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Rename-PnPFile -ServerRelativeUrl /sites/project/Documents/company.docx -TargetFileName mycompany.docx Renames a file named company.docx located in the document library called Documents located in the projects sitecollection under the managed path sites to mycompany.docx. If a file named mycompany.aspx already exists, it won't perform the rename. EXAMPLE 2 Rename-PnPFile -SiteRelativeUrl Documents/company.aspx -TargetFileName mycompany.docx Renames a file named company.docx located in the document library called Documents located in the current site to mycompany.aspx. If a file named mycompany.aspx already exists, it won't perform the rename. EXAMPLE 3 Rename-PnPFile -ServerRelativeUrl /sites/project/Documents/company.docx -TargetFileName mycompany.docx -OverwriteIfAlreadyExists Renames a file named company.docx located in the document library called Documents located in the projects sitecollection under the managed path sites to mycompany.aspx. If a file named mycompany.aspx already exists, it will still perform the rename and replace the original mycompany.aspx file. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be requested and the action will be performed Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OverwriteIfAlreadyExists If provided, if a file already exist with the provided TargetFileName, it will be overwritten. If omitted, the rename operation will be canceled if a file already exists with the TargetFileName file name. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativeUrl Server relative Url specifying the file to rename. Must include the file name. Type: String Parameter Sets: SERVER Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -SiteRelativeUrl Site relative Url specifying the file to rename. Must include the file name. Type: String Parameter Sets: SITE Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TargetFileName File name to rename the file to. Should only be the file name and not include the path to its location. Use Move-PnPFile to move the file to another location. Type: String Parameter Sets: (All) Required: True Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Rename-PnPFolder.html": {
    "href": "cmdlets/Rename-PnPFolder.html",
    "title": "Rename-PnPFolder | PnP PowerShell",
    "keywords": "Rename-PnPFolder SYNOPSIS Renames a folder SYNTAX Rename-PnPFolder -Folder <FolderPipeBind> -TargetFolderName <String> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Rename-PnPFolder -Folder Documents/Reports -TargetFolderName 'Archived Reports' This will rename the folder Reports in the Documents library to 'Archived Reports' PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder The folder to rename Type: FolderPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TargetFolderName The new folder name Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Rename-PnPTenantSite.html": {
    "href": "cmdlets/Rename-PnPTenantSite.html",
    "title": "Rename-PnPTenantSite | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Rename-PnPTenantSite SYNOPSIS This command starts a rename of a site on a SharePoint Online site. You can change the URL, and optionally the site title along with changing the URL. This will not work between Multi-geo environments. SYNTAX Rename-PnPTenantSite [[-Identity] <SPOSitePipeBind>] [[-NewSiteUrl] <String>] [[-NewSiteTitle] <string>] [[-SuppressMarketplaceAppCheck] [<SwitchParameter>]] [[-SuppressWorkflow2013Check] [<SwitchParameter>]] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 $currentSiteUrl = \"https://<tenant>.sharepoint.com/site/samplesite\" $updatedSiteUrl = \"https://<tenant>.sharepoint.com/site/renamed\" Rename-PnPTenantSite -Identity $currentSiteUrl -NewSiteUrl $updatedSiteUrl Starts the rename of the SharePoint Online site with name \"samplesite\" to \"renamed\" without modifying the title. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the full URL of the SharePoint Online site collection that needs to be renamed. Type: SPOSitePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False -NewSiteUrl Specifies the full URL of the SharePoint Online site collection to which it needs to be renamed. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NewSiteTitle Specifies the new title of of the SharePoint Site. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SuppressMarketplaceAppCheck Suppress checking compatibility of marketplace SharePoint Add-ins deployed to the associated site. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SuppressWorkflow2013Check Suppress checking compatibility of SharePoint 2013 Workflows deployed to the associated site. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SuppressBcsCheck Suppress checking compatibility of BCS connections deployed to the associated site. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False -Wait Wait till the renaming of the new site collection is successfull. If not specified, a job will be created which you can use to check for its status. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Repair-PnPSite.html": {
    "href": "cmdlets/Repair-PnPSite.html",
    "title": "Repair-PnPSite | PnP PowerShell",
    "keywords": "Repair-PnPSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Checks and repairs the site collection and its contents. SYNTAX Repair-PnPSite -Identity <SitePipeBind> [-RuleId <Guid>] DESCRIPTION The Repair-PnPSite cmdlet runs one or all site collection health checks on the site collection and its contents. This cmdlet will make changes if issues are found and automatically repairable. The cmdlet reports the health check rules with a summary of the results. The rules might not support automatic repair. Tests without repair mode can be initiated by running the Test-PnPSite cmdlet. EXAMPLES EXAMPLE 1 Repair-PnPSite -Identity \"https://contoso.sharepoint.com/sites/marketing\" This example runs all the site collection health checks in repair mode on the https://contoso.sharepoint.com/sites/marketing site collection. EXAMPLE 2 Repair-PnPSite -Identity \"https://contoso.sharepoint.com/sites/marketing\" -RuleID \"ee967197-ccbe-4c00-88e4-e6fab81145e1\" This example runs the Missing Galleries Check rule in repair mode on the https://contoso.sharepoint.com/sites/marketing site collection. PARAMETERS -Identity Specifies the SharePoint Online site collection on which to run the repairs. Type: SitePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RuleId Specifies a health check rule to run. For example: \"ee967197-ccbe-4c00-88e4-e6fab81145e1\" for Missing Galeries. \"befe203b-a8c0-48c2-b5f0-27c10f9e1622\" for Conflicting Content Types. \"a9a6769f-7289-4b9f-ae7f-5db4b997d284\" for Missing Parent Content Types. \"5258ccf5-e7d6-4df7-b8ae-12fcc0513ebd\" for Missing Site Templates. \"99c946f7-5751-417c-89d3-b9c8bb2d1f66\" for Unsupported Language Pack References. \"6da06aab-c539-4e0d-b111-b1da4408859a\" for Unsupported MUI References. Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Request-PnPAccessToken.html": {
    "href": "cmdlets/Request-PnPAccessToken.html",
    "title": "Request-PnPAccessToken | PnP PowerShell",
    "keywords": "Request-PnPAccessToken SYNOPSIS Requests an OAuth Access token SYNTAX Request-PnPAccessToken [-ClientId <String>] [-Resource <String>] [-Scopes <String[]]>] [-Decoded] [-Credentials <PSCredential>] [-TenantUrl <String>] DESCRIPTION Returns an access token using the password grant, using the PnP O365 Management Shell client id by default and the AllSites.FullControl scope by default. EXAMPLES EXAMPLE 1 Request-PnPAccessToken Returns the access token using the default client id and scope EXAMPLE 2 Request-PnPAccessToken -ClientId 26e29fec-aa10-4f99-8381-d96cddc650c2 Returns the access token using the specified client id and the default scope of AllSites.FullControl EXAMPLE 3 Request-PnPAccessToken -ClientId 26e29fec-aa10-4f99-8381-d96cddc650c2 -Scopes Group.ReadWrite.All Returns the access token using the specified client id and the specified scope EXAMPLE 4 Request-PnPAccessToken -ClientId 26e29fec-aa10-4f99-8381-d96cddc650c2 -Scopes Group.ReadWrite.All, AllSites.FullControl Returns the access token using the specified client id and the specified scopes PARAMETERS -ClientId The Azure Application Client Id to use to retrieve the token. Defaults to the PnP Office 365 Management Shell Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Credentials Optional credentials to use when retrieving the access token. If not present you need to connect first with Connect-PnPOnline. Type: PSCredential Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Decoded Returns the token in a decoded / human readible manner Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Resource The scopes to retrieve the token for. Defaults to AllSites.FullControl Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scopes The scopes to retrieve the token for. Defaults to AllSites.FullControl Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TenantUrl Optional tenant URL to use when retrieving the access token. The Url should be in the shape of https://yourtenant.sharepoint.com . See examples for more info. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Request-PnPPersonalSite.html": {
    "href": "cmdlets/Request-PnPPersonalSite.html",
    "title": "Request-PnPPersonalSite | PnP PowerShell",
    "keywords": "Request-PnPPersonalSite SYNOPSIS Requests that one or more users be enqueued for a OneDrive for Business site to be created for them. SYNTAX Request-PnPPersonalSite -UserEmails <String[]> [-NoWait] DESCRIPTION The Request-PnPPersonalSite cmdlet requests that the users specified be enqueued so that a Personal Site be created for each. The actual OneDrive for Business site is created by a Timer Job later. Note • You must specify a string array of user logins that contains one or more valid user email (logins) and cannot contain any empty fields. The command will stop if it encounters any empty strings in the array. A maximum of 200 users can be specified. • The actor executing this cmdlet must be at least assigned the SharePoint Online administrator role and have been assigned a SharePoint Online license to be able to provision the OneDrive for Business sites. The users who the sites will be provisioned for must also have a SharePoint license assigned. • This cmdlet is NOT OneDrive Multi-Geo aware. If you need to request Personal Sites for Multi-Geo enabled tenants, you must run this cmdlet for users in the region their data is to be hosted in. To retrieve users with a specific PDL, use the following sample: Get-MSOLUser | Where {$_.PreferredDataLocation -eq \"EUR\"} • If you want to use this cmdlet in an automated script not requiring manual authentication, you must assign the following permisson to your application registration from either Azure Active Directory or done through https://tenant-admin.sharepoint.com/_layouts/appregnew.aspx with the following permission through https://tenant-admin.sharepoint.com/_layouts/appinv.aspx : <AppPermissionRequests AllowAppOnlyPolicy=\"true\"> <AppPermissionRequest Scope=\"http://sharepoint/social/tenant\" Right=\"FullControl\" /> </AppPermissionRequests> You then must connect using Connect-PnPOnline -Url https://tenant-admin.sharepoint.com -ClientId <clientid> -ClientSecret <clientsecret> Authenticating using a certificate is not possible and will throw an unauthorized exception. It does not require assigning any permissions in Azure Active Directory. If you want to run this cmdlet using an interactive login, you must connect using: Connect-PnPOnline -Url https://tenant-admin.sharepoint.com -UseWebLogin EXAMPLES EXAMPLE 1 Request-PnPPersonalSite -UserEmails @(\"user1@contoso.com\", \"user2@contoso.com\") This example requests that two users to be enqueued for the creation of a OneDrive for Business Site EXAMPLE 2 Request-PnPPersonalSite -UserEmails \"user1@contoso.com\" This example requests that for the provided user a OneDrive for Business site will be created PARAMETERS -UserEmails Specifies one or more user logins to be enqueued for the creation of a Personal Site. The Personal site is created by a Timer Job later. You can specify between 1 and 200 users. Note If you are Pre-Provisioning OneDrive for many users, it might take up to 24 hours for the OneDrive locations to be created. If a user's OneDrive isn't ready after 24 hours, please contact Support. Type: String[] Parameter Sets: (All) Aliases: Applicable: SharePoint Online Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -NoWait Continues without the status being polled. Polling the action can slow its progress if lots of user emails are specified. Type: SwitchParameter Parameter Sets: (All) Aliases: Applicable: SharePoint Online Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Request-PnPReIndexList.html": {
    "href": "cmdlets/Request-PnPReIndexList.html",
    "title": "Request-PnPReIndexList | PnP PowerShell",
    "keywords": "Request-PnPReIndexList SYNOPSIS Marks the list for full indexing during the next incremental crawl SYNTAX Request-PnPReIndexList [-Identity] <ListPipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Request-PnPReIndexList -Identity \"Demo List\" PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Request-PnPReIndexWeb.html": {
    "href": "cmdlets/Request-PnPReIndexWeb.html",
    "title": "Request-PnPReIndexWeb | PnP PowerShell",
    "keywords": "Request-PnPReIndexWeb SYNOPSIS Marks the web for full indexing during the next incremental crawl SYNTAX Request-PnPReIndexWeb [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Request-PnPSyntexClassifyAndExtract.html": {
    "href": "cmdlets/Request-PnPSyntexClassifyAndExtract.html",
    "title": "Request-PnPSyntexClassifyAndExtract | PnP PowerShell",
    "keywords": "Request-PnPSyntexClassifyAndExtract SYNOPSIS Requests for a file, folder or all files in a library to be classified and extracted via the published SharePoint Syntex models on the libraries hosting the files. SYNTAX File Request-PnPSyntexClassifyAndExtract -FileUrl <string> [-Batch <PnPBatch>] [-Connection <PnPConnection>] [<CommonParameters>] Folder Request-PnPSyntexClassifyAndExtract -Folder <FolderPipeBind> [-Connection <PnPConnection>] [<CommonParameters>] List Request-PnPSyntexClassifyAndExtract -List <ListPipeBind> [-OffPeak <SwitchParameter>] [-Force <SwitchParameter>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This command requests for all files in a library, folder or individual files to be classified and extracted via the published SharePoint Syntex models on the libraries hosting the files. When using with the OffPeak switch then the files are send to the off peak Syntex content processing queue, this way there's no need to enumerate all files in the library and submit them to the regular queue. When using the Force switch without setting OffPeak then all files are enumerated and sent to the regular queue, regardless of whether they were processed in the past. When the list contains more than 5000 files or when using the folder parameter the cmdlet will use the off peak SharePoint Syntex queue. EXAMPLES EXAMPLE 1 Request-PnPSyntexClassifyAndExtract -FileUrl \"/sites/finance/invoices/invoice1.docx\" Requests the classification and extraction of invoice1.docx in library \"Invoices\". EXAMPLE 2 Request-PnPSyntexClassifyAndExtract -List \"Invoices\" Requests the classification and extraction of all files in library \"Invoices\" that never were classified and extracted before. EXAMPLE 3 Request-PnPSyntexClassifyAndExtract -Folder (Get-PnPFolder -Url \"invoices/Q1/jan\") Requests the classification and extraction of all files in the folder \"jan\" in library \"invoices\" that never were classified and extracted before. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The name or list holding the files to classify and extract Type: ListPipeBind Parameter Sets: List Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Force If set, then all files (even if classified and extracted before) are classified and extracted. If the list contains more than 5000 items this option will not apply and off-peak processing is used. Type: SwitchParameter Parameter Sets: List Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OffPeak If set, then the files to classify are sent to the off peak queue without enumerating them. If the list contains more than 5000 items then off-peak processing is always used. Type: SwitchParameter Parameter Sets: List Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder The folder holding the files to classify and extract. When using this parameter, files will be send to the off peak queue. Type: FolderPipeBind Parameter Sets: Folder Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -FileUrl The server relative URL of the file to be classified and extracted. Type: String Parameter Sets: File Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Batch The batch to add this file classification and extraction request to. Type: PnPBatch Parameter Sets: File Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Reset-PnPFileVersion.html": {
    "href": "cmdlets/Reset-PnPFileVersion.html",
    "title": "Reset-PnPFileVersion | PnP PowerShell",
    "keywords": "Reset-PnPFileVersion SYNOPSIS Resets a file to its previous version SYNTAX Reset-PnPFileVersion -ServerRelativeUrl <String> [-CheckinType <CheckinType>] [-CheckInComment <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Reset-PnPFileVersion -ServerRelativeUrl \"/sites/test/office365.png\" EXAMPLE 2 Reset-PnPFileVersion -ServerRelativeUrl \"/sites/test/office365.png\" -CheckinType MajorCheckin -Comment \"Restored to previous version\" PARAMETERS -CheckInComment The comment added to the checkin. Defaults to 'Restored to previous version'. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CheckinType The check in type to use. Defaults to Major. Type: CheckinType Parameter Sets: (All) Accepted values: MinorCheckIn, MajorCheckIn, OverwriteCheckIn Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativeUrl The server relative URL of the file. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Reset-PnPLabel.html": {
    "href": "cmdlets/Reset-PnPLabel.html",
    "title": "Reset-PnPLabel | PnP PowerShell",
    "keywords": "Reset-PnPLabel SYNOPSIS Resets a retention label on the specified list or library to None SYNTAX Reset-PnPLabel [-List] <ListPipeBind> [-SyncToItems <Boolean>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Removes the retention label on a list or library and its items. Does not work for sensitivity labels. EXAMPLES EXAMPLE 1 Reset-PnPLabel -List \"Demo List\" This resets an O365 label on the specified list or library to None EXAMPLE 2 Reset-PnPLabel -List \"Demo List\" -SyncToItems $true This resets an O365 label on the specified list or library to None and resets the label on all the items in the list and library except Folders and where the label has been manually or previously automatically assigned PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID or Url of the list Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -SyncToItems Reset label on existing items in the library Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Reset-PnPMicrosoft365GroupExpiration.html": {
    "href": "cmdlets/Reset-PnPMicrosoft365GroupExpiration.html",
    "title": "Reset-PnPMicrosoft365GroupExpiration | PnP PowerShell",
    "keywords": "Reset-PnPMicrosoft365GroupExpiration SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.ReadWrite.All, Group.ReadWrite.All Renews the Microsoft 365 Group by extending its expiration with the number of days defined in the group expiration policy set on the Azure Active Directory SYNTAX Reset-PnPMicrosoft365GroupExpiration -Identity <Microsoft365GroupPipeBind> DESCRIPTION EXAMPLES ------------------EXAMPLE 1------------------ Reset-PnPMicrosoft365GroupExpiration Renews the Microsoft 365 Group by extending its expiration with the number of days defined in the group expiration policy set on the Azure Active Directory PARAMETERS -Identity The Identity of the Microsoft 365 Group Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Accept pipeline input: True RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Reset-PnPUserOneDriveQuotaToDefault.html": {
    "href": "cmdlets/Reset-PnPUserOneDriveQuotaToDefault.html",
    "title": "Reset-PnPUserOneDriveQuotaToDefault | PnP PowerShell",
    "keywords": "Reset-PnPUserOneDriveQuotaToDefault SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Resets the current quota set on the OneDrive for Business site for a specific user to the tenant default SYNTAX Reset-PnPUserOneDriveQuotaToDefault [-Account] <String> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This command allows you to reset the quota set on the OneDrive for Business site of a specific user to the default as set on the tenant. You must connect to the tenant admin website (https://: -admin.sharepoint.com) with Connect-PnPOnline in order to use this cmdlet. EXAMPLES EXAMPLE 1 Reset-PnPUserOneDriveQuotaToDefault -Account 'user@domain.com' Resets the quota set on the OneDrive for Business site for the specified user to the tenant default PARAMETERS -Account The account of the user, formatted either as a login name, or as a claims identity, e.g. i:0#.f|membership|user@domain.com Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Resolve-PnPFolder.html": {
    "href": "cmdlets/Resolve-PnPFolder.html",
    "title": "Resolve-PnPFolder | PnP PowerShell",
    "keywords": "Resolve-PnPFolder SYNOPSIS Returns a folder from a given site relative path, and will create it if it does not exist. SYNTAX Resolve-PnPFolder [-SiteRelativePath] <String> [-Connection <PnPConnection>] [-Includes <String[]>] [<CommonParameters>] DESCRIPTION Returns a folder from a given site relative path, and will create it if it does not exist. If you do not want the folder to be created, for instance just to test if a folder exists, use Get-PnPFolder EXAMPLES EXAMPLE 1 Resolve-PnPFolder -SiteRelativePath \"demofolder/subfolder\" Creates a folder called subfolder in a folder called demofolder located in the root folder of the site. If the folder hierarchy does not exist, it will be created. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteRelativePath Site Relative Folder Path Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Get-PnPFolder"
  },
  "cmdlets/Restart-PnPFlowRun.html": {
    "href": "cmdlets/Restart-PnPFlowRun.html",
    "title": "Restart-PnPFlowRun | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Restart-PnPFlowRun SYNOPSIS Required Permissions Azure: management.azure.com Restarts/resubmits a specific flow run for the specified Microsoft Power Automate flow. SYNTAX Restart-PnPFlowRun -Environment <PowerAutomateEnvironmentPipeBind> -Flow <PowerAutomateFlowPipeBind> -Identity <PowerAutomateFlowRunPipeBind> [-Force] [<CommonParameters>] DESCRIPTION This cmdlet restarts/resubmits a specific Power Automate flow run. EXAMPLES Example 1 $environment = Get-PnPPowerPlatformEnvironment Restart-PnPFlowRun -Environment $environment -Flow fba63225-baf9-4d76-86a1-1b42c917a182 -Identity 08585531682024670884771461819CU230 This restarts the specified flow run of the specified flow Example 2 $environment = Get-PnPPowerPlatformEnvironment Restart-PnPFlowRun -Environment $environment -Flow fba63225-baf9-4d76-86a1-1b42c917a182 -Identity 08585531682024670884771461819CU230 -Force This restarts the specified flow run of the specified flow without confirmation PARAMETERS -Environment The name of the Power Platform environment or an Environment object to retrieve the available flows for. Type: PowerAutomateEnvironmentPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Flow The Name/Id of the flow to retrieve the available flow runs for. Type: PowerAutomateFlowPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Name/Id of the flow run to restart. Type: PowerAutomateFlowRunPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Restore-PnPDeletedMicrosoft365Group.html": {
    "href": "cmdlets/Restore-PnPDeletedMicrosoft365Group.html",
    "title": "Restore-PnPDeletedMicrosoft365Group | PnP PowerShell",
    "keywords": "Restore-PnPDeletedMicrosoft365Group SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Restores one deleted Microsoft 365 Group SYNTAX Restore-PnPDeletedMicrosoft365Group -Identity <Microsoft365GroupPipeBind> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Restore-PnPDeletedMicrosoft365Group -Identity 38b32e13-e900-4d95-b860-fb52bc07ca7f Restores a deleted Microsoft 365 Group based on its ID EXAMPLE 2 $group = Get-PnPDeletedMicrosoft365Group -Identity 38b32e13-e900-4d95-b860-fb52bc07ca7f Restore-PnPDeletedMicrosoft365Group -Identity $group Restores the provided deleted Microsoft 365 Group PARAMETERS -Identity The Identity of the deleted Microsoft 365 Group Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Restore-PnPFileVersion.html": {
    "href": "cmdlets/Restore-PnPFileVersion.html",
    "title": "Restore-PnPFileVersion | PnP PowerShell",
    "keywords": "Restore-PnPFileVersion SYNOPSIS Restores a specific file version. SYNTAX Restore-PnPFileVersion -Url <String> [-Identity <FileVersionPipeBind>] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Restore-PnPFileVersion -Url Documents/MyDocument.docx -Identity 512 Restores the file version with Id 512 EXAMPLE 2 Restore-PnPFileVersion -Url Documents/MyDocument.docx -Identity \"Version 1.0\" Restores the file version with label \"Version 1.0\" PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be requested and the action will be performed Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Type: FileVersionPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Restore-PnPRecycleBinItem.html": {
    "href": "cmdlets/Restore-PnPRecycleBinItem.html",
    "title": "Restore-PnPRecycleBinItem | PnP PowerShell",
    "keywords": "Restore-PnPRecycleBinItem SYNOPSIS Restores the provided recycle bin item to its original location SYNTAX Restore-PnPRecycleBinItem -Identity <RecycleBinItemPipeBind> [-Force] [-RowLimit <Int32>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Restore-PnpRecycleBinItem -Identity 72e4d749-d750-4989-b727-523d6726e442 Restores the recycle bin item with Id 72e4d749-d750-4989-b727-523d6726e442 to its original location EXAMPLE 2 Get-PnPRecycleBinItem | ? -Property LeafName -like \"*.docx\" | Restore-PnpRecycleBinItem Restores all the items in the first and second stage recycle bins to their original location of which the filename ends with the .docx extension EXAMPLE 3 Get-PnPRecycleBinItem -RowLimit 10000 | Restore-PnPRecycleBinItem -Force Permanently restores up to 10,000 items in the recycle bin without asking for confirmation. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be asked to restore the recycle bin item Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Id of the recycle bin item or the recycle bin item object itself to restore Type: RecycleBinItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -RowLimit Limits restoration to specified number of items Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Restore-PnPTenantDeletedSite.html": {
    "href": "cmdlets/Restore-PnPTenantDeletedSite.html",
    "title": "Restore-PnPTenantSite | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Restore-PnPTenantSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Restores a site collection from the Tenant recycle bin. SYNTAX Restore-PnPTenantSite [-Identity] <String> [-Force] [-NoWait] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Restores a site collection which is listed in your tenant administration site from the tenant's recycle bin. EXAMPLES EXAMPLE 1 Restore-PnPTenantSite -Identity \"https://tenant.sharepoint.com/sites/contoso\" This will restore the site collection with the url 'https://tenant.sharepoint.com/sites/contoso' from the recycle bin. EXAMPLE 2 Restore-PnPTenantSite -Identity \"https://tenant.sharepoint.com/sites/contoso\" -Force This will restore the site collection with the url 'https://tenant.sharepoint.com/sites/contoso' with force from the recycle bin. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Do not ask for confirmation. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NoWait If specified the task will return immediately after creating the restore site job. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the full URL of the site collection that needs to be restored. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Restore-PnPTenantRecycleBinItem.html": {
    "href": "cmdlets/Restore-PnPTenantRecycleBinItem.html",
    "title": "Restore-PnPTenantRecycleBinItem | PnP PowerShell",
    "keywords": "Restore-PnPTenantRecycleBinItem SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Restores a site collection from the tenant scoped recycle bin SYNTAX Restore-PnPTenantRecycleBinItem -Url <String> [-Wait] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION The Restore-PnPTenantRecycleBinItem cmdlet allows a site collection that has been deleted and still exists in the tenant recycle bin to be restored to its original location. EXAMPLES EXAMPLE 1 Restore-PnPTenantRecycleBinItem -Url \"https://tenant.sharepoint.com/sites/contoso\" This will restore the deleted site collection with the url 'https://tenant.sharepoint.com/sites/contoso' to its original location EXAMPLE 2 Restore-PnPTenantRecycleBinItem -Url \"https://tenant.sharepoint.com/sites/contoso\" -Wait This will restore the deleted site collection with the url 'https://tenant.sharepoint.com/sites/contoso' to its original location and will wait with executing further PowerShell commands until the site collection restore has completed PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be asked to restore the site collection from the tenant recycle bin Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url Url of the site collection to restore from the tenant recycle bin Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Wait If provided, the PowerShell execution will halt until the site restore process has completed Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Revoke-PnPHubSiteRights.html": {
    "href": "cmdlets/Revoke-PnPHubSiteRights.html",
    "title": "Revoke-PnPHubSiteRights | PnP PowerShell",
    "keywords": "Revoke-PnPHubSiteRights SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Revoke permissions to the permissions already in place to associate sites to Hub Sites for one or more specific users SYNTAX Revoke-PnPHubSiteRights [-Identity] <HubSitePipeBind> -Principals <String[]> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Revoke-PnPHubSiteRights -Identity \"https://contoso.sharepoint.com/sites/hubsite\" -Principals \"myuser@mydomain.com\",\"myotheruser@mydomain.com\" This example shows how to revoke the rights of myuser and myotheruser to associate their sites with the provided Hub Site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify hub site url to revoke rights from Type: HubSitePipeBind Parameter Sets: (All) Aliases: HubSite Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Principals Specify user(s) login name i.e user@company.com to revoke rights for Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Revoke-PnPSiteDesignRights.html": {
    "href": "cmdlets/Revoke-PnPSiteDesignRights.html",
    "title": "Revoke-PnPSiteDesignRights | PnP PowerShell",
    "keywords": "Revoke-PnPSiteDesignRights SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Revokes the specified principals rights to use the site design. SYNTAX Revoke-PnPSiteDesignRights [-Identity] <TenantSiteDesignPipeBind> -Principals <String[]> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Revoke-PnPSiteDesignRights -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd -Principals \"myuser@mydomain.com\",\"myotheruser@mydomain.com\" Revokes rights to the specified principals on the site design specified EXAMPLE 2 Get-PnPSiteDesign -Identity 5c73382d-9643-4aa0-9160-d0cba35e40fd | Revoke-PnPSiteDesignRights -Principals \"myuser@mydomain.com\",\"myotheruser@mydomain.com\" Revokes rights to the specified principals on the site design specified PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The site design to use. Type: TenantSiteDesignPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Principals One or more principals to revoke. Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Revoke-PnPTenantServicePrincipalPermission.html": {
    "href": "cmdlets/Revoke-PnPTenantServicePrincipalPermission.html",
    "title": "Revoke-PnPTenantServicePrincipalPermission | PnP PowerShell",
    "keywords": "Revoke-PnPTenantServicePrincipalPermission SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Microsoft Graph API : Directory.ReadWrite.All Revokes a permission that was previously granted to the \"SharePoint Online Client Extensibility Web Application Service Principal\" service principal. SYNTAX Revoke-PnPTenantServicePrincipalPermission -Scope <String> [-Resource <String>] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Revokes a permission that was previously granted to the \"SharePoint Online Client Extensibility Web Application Service Principal\" service principal. EXAMPLES EXAMPLE 1 Revoke-PnPTenantServicePrincipalPermission -Scope \"Group.Read.All\" Removes the Group.Read.All permission scope from the service principal. PARAMETERS -Scope The scope to grant the permission for Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Resource The resource to grant the permission for. Defaults to \"Microsoft Graph\" Type: String Parameter Sets: (All) Required: True Position: Named Default value: Microsoft Graph Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Revoke-PnPUserSession.html": {
    "href": "cmdlets/Revoke-PnPUserSession.html",
    "title": "Revoke-PnPUserSession | PnP PowerShell",
    "keywords": "Revoke-PnPUserSession SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Provides IT administrators the ability to logout a user's O365 sessions across all their devices. SYNTAX Revoke-PnPUserSession -User <String> [-WhatIf] [-Confirm] DESCRIPTION User will be signed out of browser, desktop and mobile applications accessing Office 365 resources across all devices. It is not applicable to guest users. EXAMPLES EXAMPLE 1 Revoke-PnPUserSession -User user1@contoso.com This example signs out user1 in the contoso tenancy from all devices. PARAMETERS -User Specifies a user name. For example, user1@contoso.com Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Save-PnPPageConversionLog.html": {
    "href": "cmdlets/Save-PnPPageConversionLog.html",
    "title": "Save-PnPPageConversionLog | PnP PowerShell",
    "keywords": "Save-PnPPageConversionLog SYNOPSIS Persists the current client side page conversion log data to the loggers linked to the last used page transformation run. Needs to be used in conjunction with the -LogSkipFlush flag on the ConvertTo-PnPPage cmdlet SYNTAX Save-PnPPageConversionLog [-Connection <PnPConnection>] EXAMPLES ------------------EXAMPLE 1------------------ Save-PnPPageConversionLog Persists the current client side page conversion log data to the loggers linked to the last used page transformation run. Needs to be used in conjunction with the -LogSkipFlush flag on the ConvertTo-PnPPage cmdlet PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Accept pipeline input: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Save-PnPSiteTemplate.html": {
    "href": "cmdlets/Save-PnPSiteTemplate.html",
    "title": "Save-PnPSiteTemplate | PnP PowerShell",
    "keywords": "Save-PnPSiteTemplate SYNOPSIS Saves a PnP site template to the file system SYNTAX Save-PnPSiteTemplate -Template <SiteTemplatePipeBind> [-Out] <String> [-Schema <XMLPnPSchemaVersion>] [-Force] [-TemplateProviderExtensions <ITemplateProviderExtension[]>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Save-PnPSiteTemplate -Template .\\template.xml -Out .\\template.pnp Saves a PnP provisioning template to the file system as a PnP file. EXAMPLE 2 $template = Read-PnPSiteTemplate -Path template.xml Save-PnPSiteTemplate -Template $template -Out .\\template.pnp Saves a PnP site template to the file system as a PnP file. The schema used will the latest released schema when creating the PnP file regardless of the original schema EXAMPLE 3 $template = Read-PnPSiteTemplate -Path template.xml Save-PnPSiteTemplate -Template $template -Out .\\template.pnp -Schema V202002 Saves a PnP site template to the file system as a PnP file and converts the template in the PnP file to the specified schema. EXAMPLE 4 Read-PnPSiteTemplate -Path template.xml | Save-PnPSiteTemplate -Out .\\template.pnp Saves a PnP site template to the file system as a PnP file. PARAMETERS -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Out Filename to write to, optionally including full path. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Schema The optional schema to use when creating the PnP file. Always defaults to the latest schema. Type: XMLPnPSchemaVersion Parameter Sets: (All) Accepted values: LATEST, V201503, V201505, V201508, V201512, V201605, V201705, V201801, V201805, V201807, V201903, V201909, V202002 Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Template Allows you to provide an in-memory instance of the SiteTemplate type of the PnP Core Component. When using this parameter, the -Out parameter refers to the path for saving the template and storing any supporting file for the template. Type: SiteTemplatePipeBind Parameter Sets: (All) Aliases: InputInstance Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TemplateProviderExtensions Allows you to specify the ITemplateProviderExtension to execute while saving a template. Type: ITemplateProviderExtension[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Save-PnPTenantTemplate.html": {
    "href": "cmdlets/Save-PnPTenantTemplate.html",
    "title": "Save-PnPTenantTemplate | PnP PowerShell",
    "keywords": "Save-PnPTenantTemplate SYNOPSIS Saves a PnP provisioning hierarchy to the file system SYNTAX Save-PnPTenantTemplate -Template <ProvisioningHierarchyPipeBind> [-Out] <String> [-Schema <XMLPnPSchemaVersion>] [-Force] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Save-PnPTenantTemplate -Template template.xml -Out .\\tenanttemplate.pnp Saves a PnP tenant template to the file system EXAMPLE 2 $template = Read-PnPTenantTemplate -Path template.xml Save-PnPTenantTemplate -Template $template -Out .\\template.pnp Saves a PnP tenant template to the file system as a PnP file. The schema used will the latest released schema when creating the PnP file regardless of the original schema EXAMPLE 3 $template = Read-PnPTenantTemplate -Path template.xml Save-PnPTenantTemplate -Template $template -Out .\\template.pnp -Schema V202002 Saves a PnP tenant template to the file system as a PnP file and converts the template in the PnP file to the specified schema. EXAMPLE 4 Read-PnPTenantTemplate -Path template.xml | Save-PnPTenantTemplate -Out .\\template.pnp Saves a PnP tenant template to the file system as a PnP file. PARAMETERS -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Out Filename to write to, optionally including full path. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Schema The optional schema to use when creating the PnP file. Always defaults to the latest schema. Type: XMLPnPSchemaVersion Parameter Sets: (All) Accepted values: LATEST, V201503, V201505, V201508, V201512, V201605, V201705, V201801, V201805, V201807, V201903, V201909, V202002 Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Template Allows you to provide an in-memory instance of a Tenant Template or a filename of a template file in XML format. When using this parameter, the -Out parameter refers to the path for saving the template and storing any supporting file for the template. Type: ProvisioningHierarchyPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Send-PnPMail.html": {
    "href": "cmdlets/Send-PnPMail.html",
    "title": "Send-PnPMail | PnP PowerShell",
    "keywords": "Send-PnPMail SYNOPSIS Sends an email using the Office 365 SMTP Service or SharePoint, depending on the parameters specified. See detailed help for more information. SYNTAX Send-PnPMail [-Server <String>] [-From <String>] [-Password <String>] -To <String[]> [-Cc <String[]>] -Subject <String> -Body <String> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Send-PnPMail -To address@tenant.sharepointonline.com -Subject test -Body test Sends an e-mail using the SharePoint SendEmail method using the current context. E-mail is sent from the system account and can only be sent to accounts in the same tenant EXAMPLE 2 Send-PnPMail -To address@contoso.com -Subject test -Body test -From me@tenant.onmicrosoft.com -Password xyz Sends an e-mail via Office 365 SMTP and requires a from address and password. E-mail is sent from the from user and can be sent to both internal and external addresses. EXAMPLE 3 Send-PnPMail -To address@contoso.com -Subject test -Body test -From me@server.net -Password xyz -Server yoursmtp.server.net Sends an e-mail via a custom SMTP server and requires a from address and password. E-mail is sent from the from user. PARAMETERS -Body Body of the email. Accepts simple HTML as &lt;h1&gt;&lt;/h1&gt; , &lt;br/&gt; etc. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Cc List of recipients on CC Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -From If using from address, you also have to provide a password Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Password If using a password, you also have to provide the associated from address Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Server Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Subject Subject of the email Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -To List of recipients Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPAdaptiveScopeProperty.html": {
    "href": "cmdlets/Set-PnPAdaptiveScopeProperty.html",
    "title": "Set-PnPAdaptiveScopeProperty | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Set-PnPAdaptiveScopeProperty SYNOPSIS Sets an indexed value to the current web property bag SYNTAX Web Set-PnPAdaptiveScopeProperty -Key <String> -Value <String> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This cmdlet is used to set or create an indexed property bag value for use in SharePoint site scopes with adaptive policy scopes . Executing this cmdlet is similar to setting or adding an indexed value to the current web property bag using Set-PnPPropertyBagValue with the -Indexed parameter with the addition that it will also ensure the noscript is temporarily disabled to allow for this to happen. It will revert its state back to what it was after adding or updating the property bag value. Using this cmdlet does therefore require having the SharePoint Online Admin role or equivallent app permissions. EXAMPLES EXAMPLE 1 Set-PnPAdaptiveScopeProperty -Key MyKey -Value MyValue This sets or adds an indexed value to the current web property bag PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Key Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Value Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft 365 Information Governance Adaptive policy scopes"
  },
  "cmdlets/Set-PnPApplicationCustomizer.html": {
    "href": "cmdlets/Set-PnPApplicationCustomizer.html",
    "title": "Set-PnPApplicationCustomizer | PnP PowerShell",
    "keywords": "Set-PnPApplicationCustomizer SYNOPSIS Updates a SharePoint Framework client side extension application customizer SYNTAX Custom Action Id Set-PnPApplicationCustomizer [[-Identity] <UserCustomActionPipeBind>] [-Scope <CustomActionScope>] [-Title <String>] [-Description <String>] [-Sequence <Int32>] [-ClientSideComponentProperties <String>] [-ClientSideHostProperties> <String>] [-Connection <PnPConnection>] [<CommonParameters>] Client Side Component Id Set-PnPApplicationCustomizer [-ClientSideComponentId <Guid>] [-Scope <CustomActionScope>] [-Title <String>] [-Description <String>] [-Sequence <Int32>] [-ClientSideComponentProperties <String>] [-ClientSideHostProperties> <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Updates a SharePoint Framework client side extension application customizer by updating its custom action. Only the properties that will be provided will be updated. Others will remain as they are. EXAMPLES EXAMPLE 1 Set-PnPApplicationCustomizer -Identity aa66f67e-46c0-4474-8a82-42bf467d07f2 Updates the custom action representing the client side extension registration with the id 'aa66f67e-46c0-4474-8a82-42bf467d07f2'. EXAMPLE 2 Set-PnPApplicationCustomizer -ClientSideComponentId aa66f67e-46c0-4474-8a82-42bf467d07f2 -Scope web -ClientSideComponentProperties \"{`\"sourceTermSet`\":`\"PnP-CollabFooter-SharedLinks`\",`\"personalItemsStorageProperty`\":`\"PnP-CollabFooter-MyLinks`\"} Updates the custom action(s) properties being registered for a SharePoint Framework solution having the id 'aa66f67e-46c0-4474-8a82-42bf467d07f2' in its manifest from the current web. PARAMETERS -ClientSideComponentId The Client Side Component Id of the SharePoint Framework client side extension application customizer found in the manifest for which existing custom action(s) should be updated Type: Guid Parameter Sets: Client Side Component Id Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClientSideComponentProperties The Client Side Component Properties of the application customizer to update. Specify values as a json string : \"{Property1 : 'Value1', Property2: 'Value2'}\". Omit to not update this property. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClientSideHostProperties The Client Side Host Properties of the application customizer to update. Omit to not update this property. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the application customizer. Omit to not update this property. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The id or name of the CustomAction representing the client side extension registration that needs to be updated or a CustomAction instance itself Type: UserCustomActionPipeBind Parameter Sets: Custom Action Id Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Scope Define if the CustomAction representing the client side extension registration is to be found at the web or site collection scope. Specify All to update the component on both web and site collection level. Type: CustomActionScope Parameter Sets: (All) Accepted values: Web, Site, All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Sequence Sequence of this application customizer being injected. Use when you have a specific sequence with which to have multiple application customizers being added to the page. Omit to not update this property. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the application customizer. Omit to not update this property. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPAppSideLoading.html": {
    "href": "cmdlets/Set-PnPAppSideLoading.html",
    "title": "Set-PnPAppSideLoading | PnP PowerShell",
    "keywords": "Set-PnPAppSideLoading SYNOPSIS Enables the App SideLoading Feature on a site SYNTAX On Set-PnPAppSideLoading [-On] [-Connection <PnPConnection>] [<CommonParameters>] Off Set-PnPAppSideLoading [-Off] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPAppSideLoading -On This will turn on App side loading EXAMPLE 2 Set-PnPAppSideLoading -Off This will turn off App side loading PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Off Type: SwitchParameter Parameter Sets: Off Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -On Type: SwitchParameter Parameter Sets: On Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPAuditing.html": {
    "href": "cmdlets/Set-PnPAuditing.html",
    "title": "Set-PnPAuditing | PnP PowerShell",
    "keywords": "Set-PnPAuditing SYNOPSIS Set Auditing setting for a site SYNTAX Enable all Set-PnPAuditing [-EnableAll] [-RetentionTime <Int32>] [-TrimAuditLog] [-Connection <PnPConnection>] [<CommonParameters>] Disable All Set-PnPAuditing [-DisableAll] [-Connection <PnPConnection>] [<CommonParameters>] Specific flags Set-PnPAuditing [-RetentionTime <Int32>] [-TrimAuditLog] [-EditItems] [-CheckOutCheckInItems] [-MoveCopyItems] [-DeleteRestoreItems] [-EditContentTypesColumns] [-SearchContent] [-EditUsersPermissions] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPAuditing -EnableAll Enables all auditing settings for the current site EXAMPLE 2 Set-PnPAuditing -DisableAll Disables all auditing settings for the current site EXAMPLE 3 Set-PnPAuditing -RetentionTime 7 Sets the audit log trimming to 7 days, this also enables the automatic trimming of the audit log EXAMPLE 4 Set-PnPAuditing -TrimAuditLog Enables the automatic trimming of the audit log EXAMPLE 5 Set-PnPAuditing -RetentionTime 7 -CheckOutCheckInItems -MoveCopyItems -SearchContent Sets the audit log trimming to 7 days, this also enables the automatic trimming of the audit log. Do auditing for: Checking out or checking in items Moving or copying items to another location in the site Searching site content PARAMETERS -CheckOutCheckInItems Audit checking out or checking in items Type: SwitchParameter Parameter Sets: Specific flags Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DeleteRestoreItems Audit deleting or restoring items Type: SwitchParameter Parameter Sets: Specific flags Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableAll Disable all audit flags Type: SwitchParameter Parameter Sets: Disable All Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EditContentTypesColumns Audit editing content types and columns Type: SwitchParameter Parameter Sets: Specific flags Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EditItems Audit editing items Type: SwitchParameter Parameter Sets: Specific flags Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EditUsersPermissions Audit editing users and permissions Type: SwitchParameter Parameter Sets: Specific flags Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableAll Enable all audit flags Type: SwitchParameter Parameter Sets: Enable all Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MoveCopyItems Audit moving or copying items to another location in the site. Type: SwitchParameter Parameter Sets: Specific flags Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RetentionTime Set the retention time Type: Int32 Parameter Sets: Enable all, Specific flags Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SearchContent Audit searching site content Type: SwitchParameter Parameter Sets: Specific flags Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TrimAuditLog Trim the audit log Type: SwitchParameter Parameter Sets: Enable all, Specific flags Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPAvailablePageLayouts.html": {
    "href": "cmdlets/Set-PnPAvailablePageLayouts.html",
    "title": "Set-PnPAvailablePageLayouts | PnP PowerShell",
    "keywords": "Set-PnPAvailablePageLayouts SYNOPSIS Sets the available page layouts for the current site SYNTAX SPECIFIC Set-PnPAvailablePageLayouts -PageLayouts <String[]> [-Connection <PnPConnection>] [<CommonParameters>] ALL Set-PnPAvailablePageLayouts [-AllowAllPageLayouts] [-Connection <PnPConnection>] [<CommonParameters>] INHERIT Set-PnPAvailablePageLayouts [-InheritPageLayouts] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES PARAMETERS -AllowAllPageLayouts An array of page layout files to set as available page layouts for the site. Type: SwitchParameter Parameter Sets: ALL Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InheritPageLayouts Set the available page layouts to inherit from the parent site. Type: SwitchParameter Parameter Sets: INHERIT Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PageLayouts An array of page layout files to set as available page layouts for the site. Type: String[] Parameter Sets: SPECIFIC Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPAzureADAppSitePermission.html": {
    "href": "cmdlets/Set-PnPAzureADAppSitePermission.html",
    "title": "Set-PnPAzureADAppSitePermission | PnP PowerShell",
    "keywords": "Set-PnPAzureADAppSitePermission SYNOPSIS Required Permissions Microsoft Graph API: Sites.FullControl.All Updates permissions for a given Azure Active Directory application registration SYNTAX Set-PnPAzureADAppSitePermission -PermissionId <String> -Permissions <Read|Write|Manage|FullControl> [-Site <SitePipeBind>] DESCRIPTION This cmdlet updates permissions for a given Azure Active Directory application registration in a site collection. It is used in conjunction with the Azure Active Directory SharePoint application permission Sites.Selected. Notice that this cmdlet allows for more permissions compared for when initially setting rights through Grant-PnPAzureADAppSitePermission . EXAMPLES EXAMPLE 1 Set-PnPAzureADAppSitePermission -PermissionId ABSDFefsdfef33fsdFSvsadf3e3fsdaffsa -Permissions Read Updates the Azure Active Directory application registration with the specific permission id and sets the rights to 'Read' access for the currently connected to site collection EXAMPLE 2 Set-PnPAzureADAppSitePermission -PermissionId ABSDFefsdfef33fsdFSvsadf3e3fsdaffsa -Permissions FullControl -Site https://contoso.microsoft.com/sites/projects Updates the Azure Active Directory application registration with the specific permission id and sets the rights to 'FullControl' access for the site collection at the provided URL PARAMETERS -PermissionId The permission with the id specified will be updated. Use Get-PnPAzureADAppSitePermission to discover currently set permissions which can be updated. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Permissions Specifies the permissions to set for the Azure Active Directory application registration which can either be Read, Write, Manage or FullControl. Type: String Parameter Sets: (All) Required: True Accepted values: Read, Write, Manage, FullControl Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site Optional url to to a site to set the permissions for. Defaults to the current site if not provided. Type: SitePipeBind Parameter Sets: (All) Required: False Position: Named Default value: Currently connected to site Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPAzureADGroup.html": {
    "href": "cmdlets/Set-PnPAzureADGroup.html",
    "title": "Set-PnPAzureADGroup | PnP PowerShell",
    "keywords": "Set-PnPAzureADGroup SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Sets the properties of a specicic Azure Active Directory group. This can be a security, distribution or Microsoft 365 group. SYNTAX Set-PnPAzureADGroup -Identity <AzureADGroupPipeBind> [-DisplayName <String>] [-Description <String>] [-Owners <String[]>] [-Members <String[]>] [-SecurityEnabled] [-MailEnabled] [-HideFromAddressLists <Boolean>] [-HideFromOutlookClients <Boolean>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPAzureADGroup -Identity $group -DisplayName \"My Displayname\" Sets the display name of the group where $group is a Group entity EXAMPLE 2 Set-PnPAzureADGroup -Identity $groupId -Descriptions \"My Description\" -DisplayName \"My DisplayName\" Sets the display name and description of a group based upon its ID EXAMPLE 3 Set-PnPAzureADGroup -Identity $group -Owners demo@contoso.com Sets demo@contoso.com as owner of the group PARAMETERS -SecurityEnabled Sets the Azure Active Directory group to be allowed to be used for setting permissions Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MailEnabled Sets the Azure Active Directory group to be allowed to be used for sreceiving e-mail Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The Description of the group to set Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName The DisplayName of the group to set Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HideFromAddressLists Controls whether the group is hidden or shown in the Global Address List (GAL). Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HideFromOutlookClients Controls whether the group shows in the Outlook left-hand navigation. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Identity of the Azure Active Directory group Type: AzureADGroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Members The array UPN values of members to set to the group. Note: Will replace members. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owners The array UPN values of owners to set to the group. Note: Will replace owners. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Set-PnPBrowserIdleSignout.html": {
    "href": "cmdlets/Set-PnPBrowserIdleSignout.html",
    "title": "Set-PnPBrowserIdleSignout | PnP PowerShell",
    "keywords": "Set-PnPBrowserIdleSignout SYNOPSIS Sets the current configuration values for Idle session sign-out policy. SYNTAX Set-PnPBrowserIdleSignOut [-Enabled] <Boolean> [[-WarnAfter] <TimeSpan>] [[-SignOutAfter] <TimeSpan>] DESCRIPTION Use this cmdlet to set the current configuration values for Idle session sign-out, the time at which users are warned and subsequently signed out of Microsoft 365 after a period of browser inactivity in SharePoint and OneDrive EXAMPLES EXAMPLE 1 Set-PnPBrowserIdleSignOut -Enabled:$true -WarnAfter \"0.00:45:00\" -SignOutAfter \"0.01:00:00\" This example enables the browser idle sign-out policy, sets a warning at 45 minutes and signs out users after a period of 60 minutes of browser inactivity. EXAMPLE 2 Set-PnPBrowserIdleSignOut -Enabled:$true -WarnAfter (New-TimeSpan -Minutes 45) -SignOutAfter (New-TimeSpan -Hours 1) This example enables the browser idle sign-out policy, sets a warning at 45 minutes and signs out users after a period of 60 minutes of browser inactivity. PARAMETERS -Enabled Enables the browser idle sign-out policy Type: Boolean Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SignOutAfter Specifies a time interval. This parameter is used to specify a time value for Get-PnPBrowserIdleSignOut parameters such as SignOutAfter . Specify the time interval in the following format: [-]D.H:M:S.F where: D = Days (0 to 10675199) H = Hours (0 to 23) M = Minutes (0 to 59) S = Seconds (0 to 59) F = Fractions of a second (0 to 9999999) Type: TimeSpan Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WarnAfter Specifies a time interval. This parameter is used to specify a time value for Get-PnPBrowserIdleSignOut parameters such as WarnAfter . Specify the time interval in the following format: [-]D.H:M:S.F where: D = Days (0 to 10675199) H = Hours (0 to 23) M = Minutes (0 to 59) S = Seconds (0 to 59) F = Fractions of a second (0 to 9999999) Type: TimeSpan Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPBuiltInDesignPackageVisibility.html": {
    "href": "cmdlets/Set-PnPBuiltInDesignPackageVisibility.html",
    "title": "Set-PnPBuiltInDesignPackageVisibility | PnP PowerShell",
    "keywords": "Get-PnPBuiltInDesignPackageVisibility SYNOPSIS Sets the visibility of the available built-in Design Packages at moment of site creation. SYNTAX Set-PnPBuiltInDesignPackageVisibility [-IsVisible] <Boolean> [-DesignPackage] <DesignPackageType> [<CommonParameters>] DESCRIPTION Sets the visibility of the available built-in Design Packages. EXAMPLES EXAMPLE 1 Set-PnPBuiltInDesignPackageVisibility -DesignPackage Showcase -IsVisible:$false This example sets the visibility state of Showcase built-in design package to false. EXAMPLE 2 Set-PnPBuiltInDesignPackageVisibility -DesignPackage TeamSite -IsVisible:$true This example sets the visibility state of TeamSite design package to true. PARAMETERS -DesignPackage Name of the design package, available names are Topic Showcase Blank TeamSite Type: DesignPackageType Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsVisbible Name of the design package, available names are Type: Boolean Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPBuiltInSiteTemplateSettings.html": {
    "href": "cmdlets/Set-PnPBuiltInSiteTemplateSettings.html",
    "title": "Set-PnPBuiltInSiteTemplateSettings | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Set-PnPBuiltInSiteTemplateSettings SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Allows configuration of the built-in SharePoint Online site templates. SYNTAX Configure through the site template identifier Set-PnPBuiltInSiteTemplateSettings -Identity <BuiltInSiteTemplateSettingsPipeBind> -IsHidden <Boolean>] [-Connection <PnPConnection>] [<CommonParameters>] Configure through the site template name Set-PnPBuiltInSiteTemplateSettings -Template <BuiltInSiteTemplates> -IsHidden <Boolean>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPBuiltInSiteTemplateSettings -Identity 9522236e-6802-4972-a10d-e98dc74b3344 -IsHidden $false Makes the Event Planning template visible EXAMPLE 2 Set-PnPBuiltInSiteTemplateSettings -Identity 00000000-0000-0000-0000-000000000000 -IsHidden $true Hides all the default built-in SharePoint Online site templates, except those specifically configured to be visible again EXAMPLE 3 Set-PnPBuiltInSiteTemplateSettings -Template CrisisManagement -IsHidden $true Hides the Crisis Management template EXAMPLE 4 Set-PnPBuiltInSiteTemplateSettings -Template All -IsHidden $false Shows by the default all the built-in SharePoint Online site templates, except those specifically configured to be hidden PARAMETERS -Identity Id of the built-in site template to configure. See https://docs.microsoft.com/powershell/module/sharepoint-online/set-spobuiltinsitetemplatesettings?view=sharepoint-ps#description for the full list of available types. Type: Guid Parameter Sets: ByIdentity Required: True Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False -Template Internal name of the template Type: BuiltInSiteTemplates Parameter Sets: ByTemplate Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsHidden Defines if the built in site template should be hidden ($true) or visible ($false) Type: Boolean Parameter Sets: (All) Aliases: cf Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. No changes will be made. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPContentType.html": {
    "href": "cmdlets/Set-PnPContentType.html",
    "title": "Set-PnPContentType | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Set-PnPContentType SYNOPSIS Updates a content type in a web or a list SYNTAX Set-PnPContentType [-Identity] <ContentTypePipeBind> [-List] <ListPipeBind> [-InSiteHierarchy] <SwitchParameter> [-UpdateChildren] <SwitchParameter> [-Name] <String> [-Description] <String> [-Group] <String> [-Hidden] <String> [-ReadOnly] <String> [-Sealed] <String> [-Connection <PnPConnection>] [-Verbose] [<CommonParameters>] DESCRIPTION Allows modification of the settings of a content type in a list or site. EXAMPLES EXAMPLE 1 Set-PnPContentType -Identity \"Project Document\" -UpdateChildren -Name \"Project Documentation\" -Description \"Documentation for projects\" This will update a content type called \"Project Document\" in the current web and rename it to \"Project Documentation\" and change its description to \"Documentation for projects\" EXAMPLE 2 Set-PnPContentType -Identity \"Project Document\" -UpdateChildren -Group \"Custom Content Types\" -Hidden This will update a content type called \"Project Document\" in the current web, make it hidden and change its group to \"Custom Content Types\". EXAMPLE 3 Set-PnPContentType -Identity \"Project Document\" -List \"Projects\" -Name \"Project Documentation\" -Description \"Documentation for projects\" This will update a content type called \"Project Document\" in the list called \"Projects\" in the current web and rename it to \"Project Documentation\" and change its description to \"Documentation for projects\". PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name or ID of the content type to update Type: ContentTypePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The list in which the content type to be updated resides. Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InSiteHierarchy Search site hierarchy for content types Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UpdateChildren Specify if you want to update the child content types Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The updated name of the content type. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The updated description of the content type. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group The updated group to which the content type belongs. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Hidden Specify if you want to hide the content type. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ReadOnly Specify if you want to set the content type as read only. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Sealed Specify if you want to seal the content type. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while updating the content type. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPContext.html": {
    "href": "cmdlets/Set-PnPContext.html",
    "title": "Set-PnPContext | PnP PowerShell",
    "keywords": "Set-PnPContext SYNOPSIS Set the ClientContext SYNTAX Set-PnPContext -Context <ClientContext> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Sets the Client Context to be used by the cmdlets, which allows easy context switching. See examples for details. EXAMPLES EXAMPLE 1 Connect-PnPOnline -Url $siteAurl -Credentials $credentials $ctx = Get-PnPContext Get-PnPList # returns the lists from site specified with $siteAurl Connect-PnPOnline -Url $siteBurl -Credentials $credentials Get-PnPList # returns the lists from the site specified with $siteBurl Set-PnPContext -Context $ctx # switch back to site A Get-PnPList # returns the lists from site A PARAMETERS -Context The ClientContext to set Type: ClientContext Parameter Sets: (All) Required: True Position: 1 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by specifying -ReturnConnection on Connect-PnPOnline. If not provided, the connection will be retrieved from the current context. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPDefaultColumnValues.html": {
    "href": "cmdlets/Set-PnPDefaultColumnValues.html",
    "title": "Set-PnPDefaultColumnValues | PnP PowerShell",
    "keywords": "Set-PnPDefaultColumnValues SYNOPSIS Sets default column values for a document library SYNTAX Set-PnPDefaultColumnValues [-List] <ListPipeBind> -Field <FieldPipeBind> -Value <String[]> [-Folder <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Sets default column values for a document library, per folder, or for the root folder if the folder parameter has not been specified. Supports both text and taxonomy fields. EXAMPLES EXAMPLE 1 Set-PnPDefaultColumnValues -List Documents -Field TaxKeyword -Value \"Company|Locations|Stockholm\" Sets a default value for the enterprise keywords field on a library to a term called \"Stockholm\", located in the \"Locations\" term set, which is part of the \"Company\" term group EXAMPLE 2 Set-PnPDefaultColumnValues -List Documents -Field TaxKeyword -Value \"15c4c4e4-4b67-4894-a1d8-de5ff811c791\" Sets a default value for the enterprise keywords field on a library to a term with the id \"15c4c4e4-4b67-4894-a1d8-de5ff811c791\". You need to ensure the term is valid for the field. EXAMPLE 3 Set-PnPDefaultColumnValues -List Documents -Field MyTextField -Value \"DefaultValue\" -Folder \"My folder\" Sets a default value for the MyTextField text field on the folder \"My folder\" in a library to a value of \"DefaultValue\" EXAMPLE 4 Set-PnPDefaultColumnValues -List Documents -Field MyPeopleField -Value \"1;#Foo Bar\" Sets a default value for the MyPeopleField people field on a library to a value of \"Foo Bar\" using the id from the user information list. EXAMPLE 5 $user = New-PnPUser -LoginName foobar@contoso.com Set-PnPDefaultColumnValues -List Documents -Field MyPeopleField -Value \"$($user.Id);#$($user.LoginName)\" Sets a default value for the MyPeopleField people field on a library to a value of \"Foo Bar\" using the id from the user information list. EXAMPLE 6 $user1 = New-PnPUser -LoginName user1@contoso.com $user2 = New-PnPUser -LoginName user2@contoso.com Set-PnPDefaultColumnValues -List Documents -Field MyMultiPeopleField -Value \"$($user1.Id);#$($user1.LoginName)\",\"$($user2.Id);#$($user2.LoginName)\" Sets a default value for the MyMultiPeopleField people field on a library to a value of \"User 1\" and \"User 2\" using the id from the user information list. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Field The internal name, id or a reference to a field Type: FieldPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder A library relative folder path, if not specified it will set the default column values on the root folder of the library ('/') Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Name or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Value A list of values. In case of a text field the values will be concatenated, separated by a semi-colon. In case of a taxonomy field multiple values will added. In case of people field multiple values will be added. Type: String[] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPDefaultContentTypeToList.html": {
    "href": "cmdlets/Set-PnPDefaultContentTypeToList.html",
    "title": "Set-PnPDefaultContentTypeToList | PnP PowerShell",
    "keywords": "Set-PnPDefaultContentTypeToList SYNOPSIS Sets the default content type for a list SYNTAX Set-PnPDefaultContentTypeToList -List <ListPipeBind> -ContentType <ContentTypePipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPDefaultContentTypeToList -List \"Project Documents\" -ContentType \"Project\" This will set the Project content type (which has already been added to a list) as the default content type PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType The content type object that needs to be set as the default content type on the list. Content Type needs to be present on the list. Type: ContentTypePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The name of a list, an ID or the actual list object to update Type: ListPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPDefaultPageLayout.html": {
    "href": "cmdlets/Set-PnPDefaultPageLayout.html",
    "title": "Set-PnPDefaultPageLayout | PnP PowerShell",
    "keywords": "Set-PnPDefaultPageLayout SYNOPSIS Sets a specific page layout to be the default page layout for a publishing site SYNTAX TITLE Set-PnPDefaultPageLayout -Title <String> [-Connection <PnPConnection>] [<CommonParameters>] INHERIT Set-PnPDefaultPageLayout [-InheritFromParentSite] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPDefaultPageLayout -Title projectpage.aspx Sets projectpage.aspx to be the default page layout for the current web EXAMPLE 2 Set-PnPDefaultPageLayout -Title test/testpage.aspx Sets a page layout in a folder in the Master Page & Page Layout gallery, such as _catalog/masterpage/test/testpage.aspx, to be the default page layout for the current web EXAMPLE 3 Set-PnPDefaultPageLayout -InheritFromParentSite Sets the default page layout to be inherited from the parent site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InheritFromParentSite Set the default page layout to be inherited from the parent site. Type: SwitchParameter Parameter Sets: INHERIT Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Title of the page layout Type: String Parameter Sets: TITLE Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPDisableSpacesActivation.html": {
    "href": "cmdlets/Set-PnPDisableSpacesActivation.html",
    "title": "Set-PnPDisableSpacesActivation | PnP PowerShell",
    "keywords": "Set-PnPDisableSpacesActivation SYNOPSIS Sets if SharePoint Spaces should be disabled SYNTAX Set-PnPDisableSpacesActivation -Disable <SwitchParameter> [-Scope <String>] [-Identity <SitePipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPDisableSpacesActivation -Disable $true -Scope Tenant Disables SharePoint Spaces on the entire tenant EXAMPLE 2 Set-PnPDisableSpacesActivation -Disable $true -Scope Site -Identity \"https://contoso.sharepoint.com\" Disables SharePoint Spaces on https://contoso.sharepoint.com PARAMETERS -Disable Sets if SharePoint Spaces should be enabled or disabled Type: SwitchParameter Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the URL of the SharePoint Site on which SharePoint Spaces should be disabled. Must be provided if Scope is set to Tenant. Type: SPOSitePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False -Scope Defines if SharePoint Spaces should be disabled for the entire tenant or for a specific site collection Type: DisableSpacesScope Parameter Sets: (All) Accepted values: Tenant, Site Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPDocumentSetField.html": {
    "href": "cmdlets/Set-PnPDocumentSetField.html",
    "title": "Set-PnPDocumentSetField | PnP PowerShell",
    "keywords": "Set-PnPDocumentSetField SYNOPSIS Sets a site column from the available content types to a document set SYNTAX Set-PnPDocumentSetField -DocumentSet <DocumentSetPipeBind> -Field <FieldPipeBind> [-SetSharedField] [-SetWelcomePageField] [-RemoveSharedField] [-RemoveWelcomePageField] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPDocumentSetField -Field \"Test Field\" -DocumentSet \"Test Document Set\" -SetSharedField -SetWelcomePageField This will set the field, available in one of the available content types, as a Shared Field and as a Welcome Page Field. EXAMPLE 2 Set-PnPDocumentSetField -Field \"Test Field\" -DocumentSet \"Test Document Set\" -RemoveSharedField -RemoveWelcomePageField This will remove the field, available in one of the available content types, as a Shared Field and as a Welcome Page Field. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DocumentSet The document set in which to set the field. Either specify a name, a document set template object, an id, or a content type object Type: DocumentSetPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Field The field to set. The field needs to be available in one of the available content types. Either specify a name, an id or a field object Type: FieldPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveSharedField Removes the field as a Shared Field Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveWelcomePageField Removes the field as a Welcome Page Field Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SetSharedField Set the field as a Shared Field Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SetWelcomePageField Set the field as a Welcome Page field Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPField.html": {
    "href": "cmdlets/Set-PnPField.html",
    "title": "Set-PnPField | PnP PowerShell",
    "keywords": "Set-PnPField SYNOPSIS Changes one or more properties of a field in a specific list or for the whole web SYNTAX Set-PnPField [-List <ListPipeBind>] [-Identity] <FieldPipeBind> -Values <Hashtable> [-UpdateExistingLists] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPField -Identity AssignedTo -Values @{JSLink=\"customrendering.js\";Group=\"My fields\"} Updates the AssignedTo field on the current web to use customrendering.js for the JSLink and sets the group name the field is categorized in to \"My Fields\". Lists that are already using the AssignedTo field will not be updated. EXAMPLE 2 Set-PnPField -Identity AssignedTo -Values @{JSLink=\"customrendering.js\";Group=\"My fields\"} -UpdateExistingLists Updates the AssignedTo field on the current web to use customrendering.js for the JSLink and sets the group name the field is categorized in to \"My Fields\". Lists that are already using the AssignedTo field will also be updated. EXAMPLE 3 Set-PnPField -List \"Tasks\" -Identity \"AssignedTo\" -Values @{JSLink=\"customrendering.js\"} Updates the AssignedTo field on the Tasks list to use customrendering.js for the JSLink PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The field object, internal field name (case sensitive) or field id to update Type: FieldPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The list object, name or id where to update the field. If omitted the field will be updated on the web. Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -UpdateExistingLists If provided, the field will be updated on existing lists that use it as well. If not provided or set to $false, existing lists using the field will remain unchanged but new lists will get the updated field. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Values Hashtable of properties to update on the field. Use the syntax @{property1=\"value\";property2=\"value\"}. Type: Hashtable Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPFileCheckedIn.html": {
    "href": "cmdlets/Set-PnPFileCheckedIn.html",
    "title": "Set-PnPFileCheckedIn | PnP PowerShell",
    "keywords": "Set-PnPFileCheckedIn SYNOPSIS Checks in a file SYNTAX Set-PnPFileCheckedIn [-Url] <String> [-CheckinType <CheckinType>] [-Comment <String>] [-Approve] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPFileCheckedIn -Url \"/Documents/Contract.docx\" Checks in the file \"Contract.docx\" in the \"Documents\" library EXAMPLE 2 Set-PnPFileCheckedIn -Url \"/Documents/Contract.docx\" -CheckinType MinorCheckin -Comment \"Smaller changes\" Checks in the file \"Contract.docx\" in the \"Documents\" library as a minor version and adds the check in comment \"Smaller changes\" PARAMETERS -Approve Approve file Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CheckinType The check in type to use. Defaults to Major Type: CheckinType Parameter Sets: (All) Accepted values: MinorCheckIn, MajorCheckIn, OverwriteCheckIn Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Comment The check in comment Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url The server relative url of the file to check in Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPFileCheckedOut.html": {
    "href": "cmdlets/Set-PnPFileCheckedOut.html",
    "title": "Set-PnPFileCheckedOut | PnP PowerShell",
    "keywords": "Set-PnPFileCheckedOut SYNOPSIS Checks out a file SYNTAX Set-PnPFileCheckedOut [-Url] <String> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPFileCheckedOut -Url \"/sites/testsite/subsite/Documents/Contract.docx\" Checks out the file \"Contract.docx\" in the \"Documents\" library. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url The server relative url of the file to check out Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPFolderPermission.html": {
    "href": "cmdlets/Set-PnPFolderPermission.html",
    "title": "Set-PnPFolderPermission | PnP PowerShell",
    "keywords": "Set-PnPFolderPermission SYNOPSIS Sets or clears permissions on folders within SharePoint Online SYNTAX User (Default) Set-PnPFolderPermission [-List] <ListPipeBind> -Identity <FolderPipeBind> -User <String> [-AddRole <String>] [-RemoveRole <String>] [-ClearExisting] [-SystemUpdate] [-Connection <PnPConnection>] [<CommonParameters>] Group Set-PnPFolderPermission [-List] <ListPipeBind> -Identity <FolderPipeBind> -Group <GroupPipeBind> [-AddRole <String>] [-RemoveRole <String>] [-ClearExisting] [-SystemUpdate] [-Connection <PnPConnection>] [<CommonParameters>] Inherit Set-PnPFolderPermission [-List] <ListPipeBind> -Identity <FolderPipeBind> [-InheritPermissions] [-SystemUpdate] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Sets or clears permissions on folders within SharePoint Online. Use Get-PnPRoleDefinition to retrieve all available roles you can add or remove using this cmdlet. EXAMPLES EXAMPLE 1 Set-PnPFolderPermission -List 'Shared Documents' -Identity 'Shared Documents\\Folder' -User 'user@contoso.com' -AddRole 'Contribute' Adds the 'Contribute' permission to the user 'user@contoso.com' for the folder named 'Folder' located in the root of the library 'Shared Documents' EXAMPLE 2 Set-PnPFolderPermission -List 'AnotherDocumentLibrary' -Identity 'AnotherDocumentLibrary\\Folder\\Subfolder' -User 'user@contoso.com' -RemoveRole 'Contribute' Removes the 'Contribute' permission from the user 'user@contoso.com' for the folder named 'Subfolder' located in the folder 'Folder' which is located in the root of the library 'AnotherDocumentLibrary' EXAMPLE 3 Set-PnPFolderPermission -List 'Shared Documents' -Identity 'Shared Documents\\Folder' -User 'user@contoso.com' -AddRole 'Contribute' -ClearExisting Adds the 'Contribute' permission to the user 'user@contoso.com' for the folder named 'Folder' located in the root of the library 'Shared Documents' and removes all other permissions EXAMPLE 4 Get-PnPFolder -Url 'Shared Documents\\Folder' | Set-PnPFolderPermission -List 'Shared Documents' -InheritPermissions Resets permissions for the folder named 'Folder' located in the root of the library 'Shared Documents' to inherit permissions from the library 'Shared Documents' PARAMETERS -AddRole The role that must be assigned to the group or user Type: String Parameter Sets: User, Group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClearExisting Clears all existing permissions Type: SwitchParameter Parameter Sets: User, Group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group The ID, name or instance of a SharePoint Group to add or remove permissions to/from Type: GroupPipeBind Parameter Sets: Group Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the folder, the server relative URL to the folder or actual Folder object Type: FolderPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -InheritPermissions Inherit permissions from the parent, removing unique permissions Type: SwitchParameter Parameter Sets: Inherit Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Title or Url of the list the folder is part of Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveRole The role that must be removed from the group or user Type: String Parameter Sets: User, Group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SystemUpdate Update the folder permissions without creating a new version or triggering Microsoft Power Automate Flow Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User Type: String Parameter Sets: User Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPFooter.html": {
    "href": "cmdlets/Set-PnPFooter.html",
    "title": "Set-PnPFooter | PnP PowerShell",
    "keywords": "Set-PnPFooter SYNOPSIS Configures the footer of the current web SYNTAX Set-PnPFooter [-Enabled] [-Layout <FooterLayoutType>] [-BackgroundTheme <FooterVariantThemeType>] [-Title <String>] [-LogoUrl <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Allows the footer to be enabled or disabled and fine tuned in the current web. For modifying the navigation links shown in the footer, use Add-PnPNavigationNode -Location Footer. EXAMPLES EXAMPLE 1 Set-PnPFooter -Enabled:$true Enables the footer to be shown on the current web EXAMPLE 2 Set-PnPFooter -Enabled:$true -Layout Extended -BackgroundTheme Neutral Enables the footer to be shown on the current web with the extended layout using a neutral background EXAMPLE 3 Set-PnPFooter -Title \"Contoso Inc.\" -LogoUrl \"/sites/communication/Shared Documents/logo.png\" Sets the title and logo shown in the footer EXAMPLE 4 Set-PnPFooter -LogoUrl \"\" Removes the current logo shown in the footer PARAMETERS -BackgroundTheme Defines the background emphasis of the content in the footer Type: FooterVariantThemeType Parameter Sets: (All) Accepted values: Strong, Neutral, Soft, None Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Enabled Indicates if the footer should be shown on the current web ($true) or if it should be hidden ($false) Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Layout Defines how the footer should look like Type: FooterLayoutType Parameter Sets: (All) Accepted values: Simple, Extended, Stacked Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LogoUrl Defines the server relative URL to the logo to be displayed in the footer. Provide an empty string to remove the current logo. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Defines the title displayed in the footer Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPGraphSubscription.html": {
    "href": "cmdlets/Set-PnPGraphSubscription.html",
    "title": "Set-PnPGraphSubscription | PnP PowerShell",
    "keywords": "Set-PnPGraphSubscription SYNOPSIS Updates an existing Microsoft Graph subscription. Required Azure Active Directory application permission depends on the resource the subscription exists on, see https://docs.microsoft.com/graph/api/subscription-delete#permissions . SYNTAX Set-PnPGraphSubscription -Identity <GraphSubscriptionPipeBind> -ExpirationDate <DateTime> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPGraphSubscription -Identity bc204397-1128-4911-9d70-1d8bceee39da -ExpirationDate \"2020-11-22T18:23:45.9356913Z\" Updates the Microsoft Graph subscription with the id 'bc204397-1128-4911-9d70-1d8bceee39da' to expire at the mentioned date PARAMETERS -ExpirationDate Date and time to set the expiration to. Take notice of the maximum allowed lifetime of the subscription endponts as documented at https://docs.microsoft.com/graph/api/resources/subscription#maximum-length-of-subscription-per-resource-type Type: DateTime Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The unique id or an instance of a Microsoft Graph Subscription Type: GraphSubscriptionPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPGroup.html": {
    "href": "cmdlets/Set-PnPGroup.html",
    "title": "Set-PnPGroup | PnP PowerShell",
    "keywords": "Set-PnPGroup SYNOPSIS Updates a group SYNTAX Set-PnPGroup -Identity <GroupPipeBind> [-SetAssociatedGroup <AssociatedGroupType>] [-AddRole <String>] [-RemoveRole <String>] [-Title <String>] [-Owner <String>] [-Description <String>] [-AllowRequestToJoinLeave <Boolean>] [-AutoAcceptRequestToJoinLeave <Boolean>] [-AllowMembersEditMembership <Boolean>] [-OnlyAllowMembersViewMembership <Boolean>] [-RequestToJoinEmail <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPGroup -Identity 'My Site Members' -SetAssociatedGroup Members Sets the SharePoint group with the name 'My Site Members' as the associated members group EXAMPLE 2 Set-PnPGroup -Identity 'My Site Members' -Owner 'site owners' Sets the SharePoint group with the name 'site owners' as the owner of the SharePoint group with the name 'My Site Members' PARAMETERS -AddRole Name of the permission set to add to this SharePoint group Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowMembersEditMembership A switch parameter that specifies whether group members can modify membership in the group Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowRequestToJoinLeave A switch parameter that specifies whether to allow users to request membership in the group and to allow users to request to leave the group Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AutoAcceptRequestToJoinLeave A switch parameter that specifies whether users are automatically added or removed when they make a request Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description for the group Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity A group object, an ID or a name of a group Type: GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OnlyAllowMembersViewMembership A switch parameter that specifies whether only group members are allowed to view the list of members in the group Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owner The owner for the group, which can be a user or another group Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveRole Name of the permission set to remove from this SharePoint group Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RequestToJoinEmail The e-mail address to which membership requests are sent Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SetAssociatedGroup One of the associated group types (Visitors, Members, Owners) Type: AssociatedGroupType Parameter Sets: (All) Accepted values: None, Visitors, Members, Owners Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title for the group Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPGroupPermissions.html": {
    "href": "cmdlets/Set-PnPGroupPermissions.html",
    "title": "Set-PnPGroupPermissions | PnP PowerShell",
    "keywords": "Set-PnPGroupPermissions SYNOPSIS Adds and/or removes permissions of a specific SharePoint group SYNTAX Set-PnPGroupPermissions [-Identity] <GroupPipeBind> [-List <ListPipeBind>] [-AddRole <String[]>] [-RemoveRole <String[]>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPGroupPermissions -Identity 'My Site Members' -AddRole Contribute Adds the 'Contribute' permission to the SharePoint group with the name 'My Site Members' EXAMPLE 2 Set-PnPGroupPermissions -Identity 'My Site Members' -RemoveRole 'Full Control' -AddRole 'Read' Removes the 'Full Control' from and adds the 'Contribute' permissions to the SharePoint group with the name 'My Site Members' EXAMPLE 3 Set-PnPGroupPermissions -Identity 'My Site Members' -AddRole @('Contribute', 'Design') Adds the 'Contribute' and 'Design' permissions to the SharePoint group with the name 'My Site Members' EXAMPLE 4 Set-PnPGroupPermissions -Identity 'My Site Members' -RemoveRole @('Contribute', 'Design') Removes the 'Contribute' and 'Design' permissions from the SharePoint group with the name 'My Site Members' EXAMPLE 5 Set-PnPGroupPermissions -Identity 'My Site Members' -List 'MyList' -RemoveRole @('Contribute') Removes the 'Contribute' permissions from the list 'MyList' for the group with the name 'My Site Members' PARAMETERS -AddRole Name of the permission set to add to this SharePoint group Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Get the permissions of a specific group by name Type: GroupPipeBind Parameter Sets: (All) Aliases: Name Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The list to apply the command to. Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveRole Name of the permission set to remove from this SharePoint group Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPHideDefaultThemes.html": {
    "href": "cmdlets/Set-PnPHideDefaultThemes.html",
    "title": "Set-PnPHideDefaultThemes | PnP PowerShell",
    "keywords": "Set-PnPHideDefaultThemes SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Defines if the default out of the box themes should be visible to users or not. SYNTAX Set-PnPHideDefaultThemes -HideDefaultThemes <Boolean> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Use this cmdlet to hide or show the default themes to users as an option to change the look to of their site You must be a SharePoint Online global administrator to run the cmdlet. EXAMPLES EXAMPLE 1 Set-PnPHideDefaultThemes -HideDefaultThemes $true The out of the box themes will be hidden EXAMPLE 2 Set-PnPHideDefaultThemes -HideDefaultThemes $false The out of the box themes will be shown PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HideDefaultThemes Defines if the default themes should be visible or hidden Type: Boolean Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPHomePage.html": {
    "href": "cmdlets/Set-PnPHomePage.html",
    "title": "Set-PnPHomePage | PnP PowerShell",
    "keywords": "Set-PnPHomePage SYNOPSIS Sets the home page of the current web. SYNTAX Set-PnPHomePage [-RootFolderRelativeUrl] <String> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPHomePage -RootFolderRelativeUrl SitePages/Home.aspx Sets the home page to the home.aspx file which resides in the SitePages library EXAMPLE 2 Set-PnPHomePage -RootFolderRelativeUrl Lists/Sample/AllItems.aspx Sets the home page to be the Sample list PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RootFolderRelativeUrl The root folder relative url of the homepage, e.g. 'sitepages/home.aspx' Type: String Parameter Sets: (All) Aliases: Path Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPHomeSite.html": {
    "href": "cmdlets/Set-PnPHomeSite.html",
    "title": "Set-PnPHomeSite | PnP PowerShell",
    "keywords": "Set-PnPHomeSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Sets the home site for your tenant. The home site needs to be a communication site. SYNTAX Set-PnPHomeSite -HomeSiteUrl <String> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPHomeSite -HomeSiteUrl \"https://yourtenant.sharepoint.com/sites/myhome\" Sets the home site to the provided site collection url PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HomeSiteUrl The url of the site to set as the home site Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Set up a home site for your organization"
  },
  "cmdlets/Set-PnPHubSite.html": {
    "href": "cmdlets/Set-PnPHubSite.html",
    "title": "Set-PnPHubSite | PnP PowerShell",
    "keywords": "Set-PnPHubSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Sets hub site properties SYNTAX Set-PnPHubSite [-Identity] <HubSitePipeBind> [-Title <String>] [-LogoUrl <String>] [-Description <String>] [-SiteDesignId <Guid>] [-HideNameInNavigation] [-RequiresJoinApproval] [-EnablePermissionsSync] [-ParentHubSiteId <Guid>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Allows configuring a hub site EXAMPLES EXAMPLE 1 Set-PnPHubSite -Identity \"https://tenant.sharepoint.com/sites/myhubsite\" -Title \"My New Title\" Sets the title of the hub site EXAMPLE 2 Set-PnPHubSite -Identity \"https://tenant.sharepoint.com/sites/myhubsite\" -Description \"My updated description\" Sets the description of the hub site EXAMPLE 3 Set-PnPHubSite -Identity \"https://tenant.sharepoint.com/sites/myhubsite\" -SiteDesignId df8a3ef1-9603-44c4-abd9-541aea2fa745 Sets the site design which should be applied to sites joining the the hub site EXAMPLE 4 Set-PnPHubSite -Identity \"https://tenant.sharepoint.com/sites/myhubsite\" -LogoUrl \"https://tenant.sharepoint.com/SiteAssets/Logo.png\" Sets the logo of the hub site EXAMPLE 5 Set-PnPHubSite -Identity \"https://tenant.sharepoint.com/sites/myhubsite\" -EnablePermissionsSync Sync hub permissions to associated sites PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Description of the hub site collection. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HideNameInNavigation Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The URL of the hub site collection. Type: HubSitePipeBind Parameter Sets: (All) Aliases: HubSite Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -LogoUrl The logoUrl of the Hub site. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RequiresJoinApproval Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteDesignId GUID of the SharePoint Site Design which should be applied when a site joins the hub site Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the hub site collection. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnablePermissionsSync Sync hub permissions to associated sites Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ParentHubSiteId The ID of the parent hub site. Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPIndexedProperties.html": {
    "href": "cmdlets/Set-PnPIndexedProperties.html",
    "title": "Set-PnPIndexedProperties | PnP PowerShell",
    "keywords": "Set-PnPIndexedProperties SYNOPSIS Marks values of the propertybag to be indexed by search. Notice that this will overwrite the existing flags, i.e. only the properties you define with the cmdlet will be indexed. SYNTAX Set-PnPIndexedProperties -Keys <System.Collections.Generic.List`1[System.String]> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Keys Type: System.Collections.Generic.List`1[System.String] Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPInPlaceRecordsManagement.html": {
    "href": "cmdlets/Set-PnPInPlaceRecordsManagement.html",
    "title": "Set-PnPInPlaceRecordsManagement | PnP PowerShell",
    "keywords": "Set-PnPInPlaceRecordsManagement SYNOPSIS Activates or deactivates in the place records management feature. SYNTAX Set-PnPInPlaceRecordsManagement -Enabled <Boolean> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPInPlaceRecordsManagement -Enabled $true Activates In Place Records Management EXAMPLE 2 Set-PnPInPlaceRecordsManagement -Enabled $false Deactivates In Place Records Management PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Enabled Type: Boolean Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPKnowledgeHubSite.html": {
    "href": "cmdlets/Set-PnPKnowledgeHubSite.html",
    "title": "Set-PnPKnowledgeHubSite | PnP PowerShell",
    "keywords": "Set-PnPKnowledgeHubSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Sets the Knowledge Hub Site for your tenant SYNTAX Set-PnPKnowledgeHubSite -KnowledgeHubSiteUrl <String> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPKnowledgeHubSite -KnowledgeHubSiteUrl \"https://yoursite.sharepoint.com/sites/knowledge\" Sets the Knowledge Hub Site for your tenant PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -KnowledgeHubSiteUrl Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPLabel.html": {
    "href": "cmdlets/Set-PnPLabel.html",
    "title": "Set-PnPLabel | PnP PowerShell",
    "keywords": "Set-PnPLabel SYNOPSIS Sets a retention label on the specified list or library. Use Reset-PnPLabel to remove the label again. SYNTAX Set-PnPLabel [-List] <ListPipeBind> -Label <String> [-SyncToItems <Boolean>] [-BlockDeletion <Boolean>] [-BlockEdit <Boolean>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Allows setting a retention label on a list or library and its items. Does not work for sensitivity labels. EXAMPLES EXAMPLE 1 Set-PnPLabel -List \"Demo List\" -Label \"Project Documentation\" This sets an O365 label on the specified list or library. EXAMPLE 2 Set-PnPLabel -List \"Demo List\" -Label \"Project Documentation\" -SyncToItems $true This sets an O365 label on the specified list or library and sets the label to all the items in the list and library as well. EXAMPLE 3 Set-PnPLabel -List \"Demo List\" -Label \"Project Documentation\" -BlockDelete $true -BlockEdit $true This sets an O365 label on the specified list or library. Next, it also blocks the ability to either edit or delete the item. PARAMETERS -BlockDeletion Block deletion of items in the library Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -BlockEdit Block editing of items in the library Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Label The name of the retention label Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -SyncToItems Apply label to existing items in the library Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPList.html": {
    "href": "cmdlets/Set-PnPList.html",
    "title": "Set-PnPList | PnP PowerShell",
    "keywords": "Set-PnPList SYNOPSIS Updates list settings SYNTAX Set-PnPList -Identity <ListPipeBind> [-EnableContentTypes <Boolean>] [-BreakRoleInheritance] [-ResetRoleInheritance] [-CopyRoleAssignments] [-ClearSubscopes] [-Title <String>] [-Description <String>] [-Hidden <Boolean>] [-ForceCheckout <Boolean>] [-ListExperience <ListExperience>] [-EnableAttachments <Boolean>] [-EnableFolderCreation <Boolean>] [-EnableVersioning <Boolean>] [-EnableMinorVersions <Boolean>] [-MajorVersions <UInt32>] [-MinorVersions <UInt32>] [-EnableModeration <Boolean>] [-ReadSecurity <ListReadSecurity>] [-WriteSecurity <ListWriteSecurity>] [-NoCrawl] [-ExemptFromBlockDownloadOfNonViewableFiles <Boolean>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Allows the configuration of a specific SharePoint Online list to be set. EXAMPLES EXAMPLE 1 Set-PnPList -Identity \"Demo List\" -EnableContentTypes $true Switches the Enable Content Type switch on the list EXAMPLE 2 Set-PnPList -Identity \"Demo List\" -Hidden $true Hides the list from the SharePoint UI. EXAMPLE 3 Set-PnPList -Identity \"Demo List\" -EnableVersioning $true Turns on major versions on a list EXAMPLE 4 Set-PnPList -Identity \"Demo List\" -EnableVersioning $true -MajorVersions 20 Turns on major versions on a list and sets the maximum number of Major Versions to keep to 20. EXAMPLE 5 Set-PnPList -Identity \"Demo Library\" -EnableVersioning $true -EnableMinorVersions $true -MajorVersions 20 -MinorVersions 5 Turns on major versions on a document library and sets the maximum number of Major versions to keep to 20 and sets the maximum of Minor versions to 5. EXAMPLE 6 Set-PnPList -Identity \"Demo List\" -EnableAttachments $true Turns on attachments on a list PARAMETERS -BreakRoleInheritance If used the security inheritance is broken for this list from its parent, the web in which it resides. Permissions can be added using Set-PnPListPermission . Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ResetRoleInheritance If used the security inheritance is reset for this list meaning it will not copy the permissions from its parent, but will start with an empty list of permissions. Permissions can be added using Set-PnPListPermission . Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClearSubscopes If used the unique permissions are cleared from child objects and they can inherit role assignments from this object Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CopyRoleAssignments If used the roles are copied from the parent web Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the list Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableAttachments Enable or disable attachments. Set to $true to enable, $false to disable. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableContentTypes Set to $true to enable content types, set to $false to disable content types Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableFolderCreation Enable or disable folder creation. Set to $true to enable, $false to disable. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableMinorVersions Enable or disable minor versions versioning. Set to $true to enable, $false to disable. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableModeration Enable or disable whether content approval is enabled for the list. Set to $true to enable, $false to disable. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableVersioning Enable or disable versioning. Set to $true to enable, $false to disable. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ForceCheckout Enable or disable force checkout. Set to $true to enable, $false to disable. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Hidden Hide the list from the SharePoint UI. Set to $true to hide, $false to show. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ListExperience Set the list experience: Auto, NewExperience or ClassicExperience Type: ListExperience Parameter Sets: (All) Accepted values: Auto, NewExperience, ClassicExperience Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MajorVersions Maximum major versions to keep Type: UInt32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MinorVersions Maximum minor versions to keep Type: UInt32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ReadSecurity Sets the read security for the list Type: ListReadSecurity Parameter Sets: (All) Accepted values: AllUsersReadAccess, AllUsersReadAccessOnItemsTheyCreate Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WriteSecurity Sets the write security for the list Type: ListWriteSecurity Parameter Sets: (All) Accepted values: WriteAllItems, WriteOnlyMyItems, WriteNoItems Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the list Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NoCrawl Switch parameter if this list should be indexed in search. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExemptFromBlockDownloadOfNonViewableFiles Allows to configure access capabilities for unmanaged devices for the list. If set to $true, the list will be accessible by unmanaged devices as well. For more information, see SharePoint and OneDrive unmanaged device access controls for administrators . Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPListInformationRightsManagement.html": {
    "href": "cmdlets/Set-PnPListInformationRightsManagement.html",
    "title": "Set-PnPListInformationRightsManagement | PnP PowerShell",
    "keywords": "Set-PnPListInformationRightsManagement SYNOPSIS Get the site closure status of the site which has a site policy applied SYNTAX Set-PnPListInformationRightsManagement -List <ListPipeBind> [-Enable <Boolean>] [-EnableExpiration <Boolean>] [-EnableRejection <Boolean>] [-AllowPrint <Boolean>] [-AllowScript <Boolean>] [-AllowWriteCopy <Boolean>] [-DisableDocumentBrowserView <Boolean>] [-DocumentAccessExpireDays <Int32>] [-DocumentLibraryProtectionExpireDate <DateTime>] [-EnableDocumentAccessExpire <Boolean>] [-EnableDocumentBrowserPublishingView <Boolean>] [-EnableGroupProtection <Boolean>] [-EnableLicenseCacheExpire <Boolean>] [-LicenseCacheExpireDays <Int32>] [-GroupName <String>] [-PolicyDescription <String>] [-PolicyTitle <String>] [-TemplateId <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPListInformationRightsManagement -List \"Documents\" -Enabled $true Enables Information Rights Management (IRM) on the list. PARAMETERS -AllowPrint Sets a value indicating whether the viewer can print the downloaded document. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowScript Sets a value indicating whether the viewer can run a script on the downloaded document. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowWriteCopy Sets a value indicating whether the viewer can write on a copy of the downloaded document. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableDocumentBrowserView Sets a value indicating whether to block Office Web Application Companion applications (WACs) from showing this document. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DocumentAccessExpireDays Sets the number of days after which the downloaded document will expire. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DocumentLibraryProtectionExpireDate Sets the date after which the Information Rights Management (IRM) protection of this document library will stop. Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Enable Specifies whether Information Rights Management (IRM) is enabled for the list. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableDocumentAccessExpire Sets a value indicating whether the downloaded document will expire. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableDocumentBrowserPublishingView Sets a value indicating whether to enable Office Web Application Companion applications (WACs) to publishing view. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableExpiration Specifies whether Information Rights Management (IRM) expiration is enabled for the list. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableGroupProtection Sets a value indicating whether the permission of the downloaded document is applicable to a group. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableLicenseCacheExpire Sets whether a user must verify their credentials after some interval. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableRejection Specifies whether Information Rights Management (IRM) rejection is enabled for the list. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -GroupName Sets the group name (email address) that the permission is also applicable to. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LicenseCacheExpireDays Sets the number of days that the application that opens the document caches the IRM license. When these elapse, the application will connect to the IRM server to validate the license. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list to set Information Rights Management (IRM) settings for. Type: ListPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PolicyDescription Sets the permission policy description. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PolicyTitle Sets the permission policy title. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateId Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPListItem.html": {
    "href": "cmdlets/Set-PnPListItem.html",
    "title": "Set-PnPListItem | PnP PowerShell",
    "keywords": "Set-PnPListItem SYNOPSIS Updates a list item SYNTAX Single Set-PnPListItem [-List] <ListPipeBind> -Identity <ListItemPipeBind> [-ContentType <ContentTypePipeBind>] [-Values <Hashtable>] [-UpdateType <UpdateType>] [-Label <String>] [-ClearLabel] [-Connection <PnPConnection>] Batched Set-PnPListItem [-List] <ListPipeBind> -Identity <ListItemPipeBind> -Batch <PnPBatch> [-ContentType <ContentTypePipeBind>] [-Values <Hashtable>] [-UpdateType <UpdateType> [-UpdateOverwriteVersion] [-Connection <PnPConnection>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPListItem -List \"Demo List\" -Identity 1 -Values @{\"Title\" = \"Test Title\"; \"Category\"=\"Test Category\"} Sets fields value in the list item with ID 1 in the \"Demo List\". It sets both the Title and Category fields with the specified values. Notice, use the internal names of fields. EXAMPLE 2 Set-PnPListItem -List \"Demo List\" -Identity 1 -ContentType \"Company\" -Values @{\"Title\" = \"Test Title\"; \"Category\"=\"Test Category\"} Sets fields value in the list item with ID 1 in the \"Demo List\". It sets the content type of the item to \"Company\" and it sets both the Title and Category fields with the specified values. Notice, use the internal names of fields. EXAMPLE 3 Set-PnPListItem -List \"Demo List\" -Identity $item -Values @{\"Title\" = \"Test Title\"; \"Category\"=\"Test Category\"} Sets fields value in the list item which has been retrieved by for instance Get-PnPListItem. It sets the content type of the item to \"Company\" and it sets both the Title and Category fields with the specified values. Notice, use the internal names of fields. EXAMPLE 4 Set-PnPListItem -List \"Demo List\" -Identity 1 -Label \"Public\" Sets the retention label in the list item with ID 1 in the \"Demo List\". EXAMPLE 5 $batch = New-PnPBatch for($i=1;$i -lt 100;$i++) { Set-PnPListItem -List \"Demo List\" -Identity $i -Values @{\"Title\"=\"Updated Title\"} -Batch $batch } Invoke-PnPBatch -Batch $batch This example updates the items with ids 0 to 100 with a new title in a batched manner. EXAMPLE 6 Set-PnPListItem -List \"Demo List\" -Identity 1 -Values @{\"Editor\"=\"testuser@domain.com\"} -UpdateType UpdateOverwriteVersion This example updates the modified by value of the list item and does not increase the version number. PARAMETERS -Batch Optional batch object used to add items in a batched manner. See examples on how to use this. Type: PnPBatch Parameter Sets: Batched Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType Specify either the name, ID or an actual content type Type: ContentTypePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Label The name of the retention label. Type: String Parameter Sets: Single Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -UpdateType Specifies the update type to use when updating the listitem. Possible values are \"Update\", \"SystemUpdate\", \"UpdateOverwriteVersion\". Update: Sets field values and creates a new version if versioning is enabled for the list SystemUpdate: Sets field values and does not create a new version. Any events on the list will trigger. UpdateOverwriteVersion: Sets field values and does not create a new version. No events on the list will trigger. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UpdateOverwriteVersion Update the item without creating a new version. It will not trigger events registered on the list. Type: UpdateType Parameter Sets: (All) Required: False Position: Named Default value: Update Accept pipeline input: False Accept wildcard characters: False -ClearLabel Clears the retention label of the item. Type: SwitchParameter Parameter Sets: Single Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Values Use the internal names of the fields when specifying field names. Single line of text: -Values @{\"TextField\" = \"Title New\"} Multiple lines of text: -Values @{\"MultiTextField\" = \"New text`n`nMore text\"} Rich text: -Values @{\"MultiTextField\" = \"<strong>New</strong> text\"} Choice: -Values @{\"ChoiceField\" = \"Value 1\"} Number: -Values @{\"NumberField\" = \"10\"} Currency: -Values @{\"NumberField\" = \"10\"} Currency: -Values @{\"CurrencyField\" = \"10\"} Date and Time: -Values @{\"DateAndTimeField\" = \"03/13/2015 14:16\"} Lookup (id of lookup value): -Values @{\"LookupField\" = \"2\"} Multi value lookup (id of lookup values as array 1): -Values @{\"MultiLookupField\" = \"1\",\"2\"} Multi value lookup (id of lookup values as array 2): -Values @{\"MultiLookupField\" = 1,2} Multi value lookup (id of lookup values as string): -Values @{\"MultiLookupField\" = \"1,2\"} Yes/No: -Values @{\"YesNoField\" = $false} Person/Group (id of user/group in Site User Info List or email of the user, separate multiple values with a comma): -Values @{\"PersonField\" = \"user1@domain.com\",\"21\"} Managed Metadata (single value with path to term): -Values @{\"MetadataField\" = \"CORPORATE|DEPARTMENTS|FINANCE\"} Managed Metadata (single value with id of term): -Values @{\"MetadataField\" = \"fe40a95b-2144-4fa2-b82a-0b3d0299d818\"} with Id of term Managed Metadata (multiple values with paths to terms): -Values @{\"MetadataField\" = (\"CORPORATE|DEPARTMENTS|FINANCE\",\"CORPORATE|DEPARTMENTS|HR\")} Managed Metadata (multiple values with ids of terms): -Values @{\"MetadataField\" = (\"fe40a95b-2144-4fa2-b82a-0b3d0299d818\",\"52d88107-c2a8-4bf0-adfa-04bc2305b593\")} Hyperlink or Picture: -Values @{\"HyperlinkField\" = \"https://pnp.github.com/powershell, PnP PowerShell Home\"} Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPListItemAsRecord.html": {
    "href": "cmdlets/Set-PnPListItemAsRecord.html",
    "title": "Set-PnPListItemAsRecord | PnP PowerShell",
    "keywords": "Set-PnPListItemAsRecord SYNOPSIS Declares a list item as a record, for more information, see https://docs.microsoft.com/sharepoint/governance/records-management-in-sharepoint-server SYNTAX Set-PnPListItemAsRecord [-List] <ListPipeBind> -Identity <ListItemPipeBind> [-DeclarationDate <DateTime>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPListItemAsRecord -List \"Documents\" -Identity 4 Declares the document in the documents library with id 4 as a record EXAMPLE 2 Set-PnPListItemAsRecord -List \"Documents\" -Identity 4 -DeclarationDate $date Declares the document in the documents library with id as a record PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DeclarationDate The declaration date Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPListItemPermission.html": {
    "href": "cmdlets/Set-PnPListItemPermission.html",
    "title": "Set-PnPListItemPermission | PnP PowerShell",
    "keywords": "Set-PnPListItemPermission SYNOPSIS Sets list item permissions. Use Get-PnPRoleDefinition to retrieve all available roles you can add or remove using this cmdlet. Use Get-PnPGroup to retrieve all groups available that you can add or remove using this cmdlet when using the -group parameter. SYNTAX User (Default) Set-PnPListItemPermission [-List] <ListPipeBind> -Identity <ListItemPipeBind> -User <String> [-AddRole <String>] [-RemoveRole <String>] [-ClearExisting] [-SystemUpdate] [-Connection <PnPConnection>] [<CommonParameters>] Group Set-PnPListItemPermission [-List] <ListPipeBind> -Identity <ListItemPipeBind> -Group <GroupPipeBind> [-AddRole <String>] [-RemoveRole <String>] [-ClearExisting] [-SystemUpdate] [-Connection <PnPConnection>] [<CommonParameters>] Inherit Set-PnPListItemPermission [-List] <ListPipeBind> -Identity <ListItemPipeBind> [-InheritPermissions] [-SystemUpdate] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPListItemPermission -List 'Documents' -Identity 1 -User 'user@contoso.com' -AddRole 'Contribute' Adds the 'Contribute' permission to the user 'user@contoso.com' for listitem with id 1 in the list 'Documents' EXAMPLE 2 Set-PnPListItemPermission -List 'Documents' -Identity 1 -User 'user@contoso.com' -RemoveRole 'Contribute' Removes the 'Contribute' permission to the user 'user@contoso.com' for listitem with id 1 in the list 'Documents' EXAMPLE 3 Set-PnPListItemPermission -List 'Documents' -Identity 1 -User 'user@contoso.com' -AddRole 'Contribute' -ClearExisting Adds the 'Contribute' permission to the user 'user@contoso.com' for listitem with id 1 in the list 'Documents' and removes all other permissions EXAMPLE 4 Set-PnPListItemPermission -List 'Documents' -Identity 1 -InheritPermissions Resets permissions for listitem with id 1 to inherit permissions from the list 'Documents' EXAMPLE 5 Set-PnPListItemPermission -List 'Documents' -Identity 1 -AddRole 'Read' -RemoveRole 'Contribute' -Group \"Site collection Visitors\" Adds the 'Read' permission to the group of Site collection Visitors while removing the 'Contribute' permissions PARAMETERS -AddRole The role that must be assigned to the group or user Type: RoleDefinitionPipeBind Parameter Sets: User, Group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClearExisting Clear all existing permissions Type: SwitchParameter Parameter Sets: User, Group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group Type: GroupPipeBind Parameter Sets: Group Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -InheritPermissions Inherit permissions from the list, removing unique permissions Type: SwitchParameter Parameter Sets: Inherit Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -RemoveRole The role that must be removed from the group or user Type: RoleDefinitionPipeBind Parameter Sets: User, Group Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SystemUpdate Update the item permissions without creating a new version or triggering MS Flow. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User Type: String Parameter Sets: User Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPListPermission.html": {
    "href": "cmdlets/Set-PnPListPermission.html",
    "title": "Set-PnPListPermission | PnP PowerShell",
    "keywords": "Set-PnPListPermission SYNOPSIS Allows permissions on a SharePoint list to be changed SYNTAX Group Set-PnPListPermission -Identity <ListPipeBind> -Group <GroupPipeBind> [-AddRole <String>] [-RemoveRole <String>] [-Connection <PnPConnection>] [<CommonParameters>] User Set-PnPListPermission -Identity <ListPipeBind> -User <String> [-AddRole <String>] [-RemoveRole <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Allows changing of permissions on a SharePoint list. In case you would like to break the permission inheritance on a list from its parent, you can use Set-PnPList -BreakRoleInheritance . EXAMPLES EXAMPLE 1 Set-PnPListPermission -Identity 'Documents' -User 'user@contoso.com' -AddRole 'Contribute' Adds the 'Contribute' permission to the user 'user@contoso.com' for the list 'Documents' EXAMPLE 2 Set-PnPListPermission -Identity 'Documents' -User 'user@contoso.com' -RemoveRole 'Contribute' Removes the 'Contribute' permission to the user 'user@contoso.com' for the list 'Documents' PARAMETERS -Identity The Id, title or an instance of the list Type: ListPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AddRole The name of the role that must be assigned to the group or user. The name of the role is localized and depends on the language in which the site has been created, so i.e. for an English site you would use Full Control , but for a Dutch site you would use Volledig beheer . Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveRole The name of the role that must be removed from the group or user. The name of the role is localized and depends on the language in which the site has been created, so i.e. for an English site you would use Full Control , but for a Dutch site you would use Volledig beheer . Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group Type: GroupPipeBind Parameter Sets: Group Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User Type: String Parameter Sets: User Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPListRecordDeclaration.html": {
    "href": "cmdlets/Set-PnPListRecordDeclaration.html",
    "title": "Set-PnPListRecordDeclaration | PnP PowerShell",
    "keywords": "Set-PnPListRecordDeclaration SYNOPSIS The RecordDeclaration parameter supports 4 values: AlwaysAllowManualDeclaration NeverAllowManualDeclaration UseSiteCollectionDefaults SYNTAX Set-PnPListRecordDeclaration -List <ListPipeBind> [-ManualRecordDeclaration <EcmListManualRecordDeclaration>] [-AutoRecordDeclaration <Boolean>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPListRecordDeclaration -List \"Documents\" -ManualRecordDeclaration NeverAllowManualDeclaration Sets the manual record declaration to never allow EXAMPLE 2 Set-PnPListRecordDeclaration -List \"Documents\" -AutoRecordDeclaration $true Turns on auto record declaration for the list PARAMETERS -AutoRecordDeclaration Defines if you want to set auto record declaration on the list Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The List to set the manual record declaration settings for Type: ListPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ManualRecordDeclaration Defines the manual record declaration setting for the lists Type: EcmListManualRecordDeclaration Parameter Sets: (All) Accepted values: Unknown, UseSiteCollectionDefaults, AlwaysAllowManualDeclaration, NeverAllowManualDeclaration Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPMasterPage.html": {
    "href": "cmdlets/Set-PnPMasterPage.html",
    "title": "Set-PnPMasterPage | PnP PowerShell",
    "keywords": "Set-PnPMasterPage SYNOPSIS Set the masterpage SYNTAX Server Relative Set-PnPMasterPage [-MasterPageServerRelativeUrl <String>] [-CustomMasterPageServerRelativeUrl <String>] [-Connection <PnPConnection>] [<CommonParameters>] Site Relative Set-PnPMasterPage [-MasterPageSiteRelativeUrl <String>] [-CustomMasterPageSiteRelativeUrl <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Sets the default master page of the current web. EXAMPLES EXAMPLE 1 Set-PnPMasterPage -MasterPageServerRelativeUrl /sites/projects/_catalogs/masterpage/oslo.master Sets the master page based on a server relative URL EXAMPLE 2 Set-PnPMasterPage -MasterPageServerRelativeUrl /sites/projects/_catalogs/masterpage/oslo.master -CustomMasterPageServerRelativeUrl /sites/projects/_catalogs/masterpage/oslo.master Sets the master page and custom master page based on a server relative URL EXAMPLE 3 Set-PnPMasterPage -MasterPageSiteRelativeUrl _catalogs/masterpage/oslo.master Sets the master page based on a site relative URL EXAMPLE 4 Set-PnPMasterPage -MasterPageSiteRelativeUrl _catalogs/masterpage/oslo.master -CustomMasterPageSiteRelativeUrl _catalogs/masterpage/oslo.master Sets the master page and custom master page based on a site relative URL PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CustomMasterPageServerRelativeUrl Specifies the custom Master page URL based on the server relative URL Type: String Parameter Sets: Server Relative Aliases: CustomMasterPageUrl Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CustomMasterPageSiteRelativeUrl Specifies the custom Master page URL based on the site relative URL Type: String Parameter Sets: Site Relative Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MasterPageServerRelativeUrl Specifies the Master page URL based on the server relative URL Type: String Parameter Sets: Server Relative Aliases: MasterPageUrl Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MasterPageSiteRelativeUrl Specifies the Master page URL based on the site relative URL Type: String Parameter Sets: Site Relative Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPMessageCenterAnnouncementAsArchived.html": {
    "href": "cmdlets/Set-PnPMessageCenterAnnouncementAsArchived.html",
    "title": "Set-PnPMessageCenterAnnouncementAsArchived | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Set-PnPMessageCenterAnnouncementAsArchived SYNOPSIS Required Permissions Microsoft Graph API : ServiceMessageViewpoint.Write (delegated) Marks one or multiple message center announcements of the Office 365 Services as archived SYNTAX Set-PnPMessageCenterAnnouncementAsArchived [-Identity <Ids>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPMessageCenterAnnouncementAsArchived -Identity \"MC123456\" Marks message center announcement MC123456 as archived for the current user EXAMPLE 2 Set-PnPMessageCenterAnnouncementAsArchived -Identity \"MC123456\", \"MC234567\" Marks message center announcements MC123456 and MC234567 as archived for the current user EXAMPLE 3 Set-PnPMessageCenterAnnouncementAsArchived Marks all message center announcements as archived for the current user PARAMETERS -Identity Marks the message center announcement or announcements with the provided Ids as archived Type: String[] Parameter Sets: None Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPMessageCenterAnnouncementAsFavorite.html": {
    "href": "cmdlets/Set-PnPMessageCenterAnnouncementAsFavorite.html",
    "title": "Set-PnPMessageCenterAnnouncementAsFavorite | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Set-PnPMessageCenterAnnouncementAsFavorite SYNOPSIS Required Permissions Microsoft Graph API : ServiceMessageViewpoint.Write (delegated) Marks one or multiple message center announcements of the Office 365 Services as favorite SYNTAX Set-PnPMessageCenterAnnouncementAsFavorite [-Identity <Ids>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPMessageCenterAnnouncementAsFavorite -Identity \"MC123456\" Marks message center announcement MC123456 as favorite for the current user EXAMPLE 2 Set-PnPMessageCenterAnnouncementAsFavorite -Identity \"MC123456\", \"MC234567\" Marks message center announcements MC123456 and MC234567 as favorite for the current user EXAMPLE 3 Set-PnPMessageCenterAnnouncementAsFavorite Marks all message center announcements as favorite for the current user PARAMETERS -Identity Marks a particular message center announcement or announcements with the provided Ids as favorite Type: String[] Parameter Sets: None Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPMessageCenterAnnouncementAsNotArchived.html": {
    "href": "cmdlets/Set-PnPMessageCenterAnnouncementAsNotArchived.html",
    "title": "Set-PnPMessageCenterAnnouncementAsNotArchived | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Set-PnPMessageCenterAnnouncementAsNotArchived SYNOPSIS Required Permissions Microsoft Graph API : ServiceMessageViewpoint.Write (delegated) Marks one or multiple message center announcements of the Office 365 Services as not archived SYNTAX Set-PnPMessageCenterAnnouncementAsNotArchived [-Identity <Ids>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPMessageCenterAnnouncementAsNotArchived -Identity \"MC123456\" Marks message center announcement MC123456 as not archived for the current user EXAMPLE 2 Set-PnPMessageCenterAnnouncementAsNotArchived -Identity \"MC123456\", \"MC234567\" Marks message center announcements MC123456 and MC234567 as not archived for the current user EXAMPLE 3 Set-PnPMessageCenterAnnouncementAsNotArchived Marks all message center announcements as not archived for the current user PARAMETERS -Identity Marks a particular message center announcement or announcements with the provided Ids as not archived Type: String[] Parameter Sets: None Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPMessageCenterAnnouncementAsNotFavorite.html": {
    "href": "cmdlets/Set-PnPMessageCenterAnnouncementAsNotFavorite.html",
    "title": "Set-PnPMessageCenterAnnouncementAsNotFavorite | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Set-PnPMessageCenterAnnouncementAsNotFavorite SYNOPSIS Required Permissions Microsoft Graph API : ServiceMessageViewpoint.Write (delegated) Marks one or multiple message center announcements of the Office 365 Services as not favorite SYNTAX Set-PnPMessageCenterAnnouncementAsNotFavorite [-Identity <Ids>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPMessageCenterAnnouncementAsNotFavorite -Identity \"MC123456\" Marks message center announcement MC123456 as not favorite for the current user EXAMPLE 2 Set-PnPMessageCenterAnnouncementAsNotFavorite -Identity \"MC123456\", \"MC234567\" Marks message center announcements MC123456 and MC234567 as not favorite for the current user EXAMPLE 3 Set-PnPMessageCenterAnnouncementAsNotFavorite Marks all message center announcements as not favorite for the current user PARAMETERS -Identity Marks the message center announcement or announcements with the provided Ids as not favorite Type: String[] Parameter Sets: None Required: false Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPMessageCenterAnnouncementAsRead.html": {
    "href": "cmdlets/Set-PnPMessageCenterAnnouncementAsRead.html",
    "title": "Set-PnPMessageCenterAnnouncementAsRead | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Set-PnPMessageCenterAnnouncementAsRead SYNOPSIS Required Permissions Microsoft Graph API : ServiceMessageViewpoint.Write (delegated) Marks one or multiple message center announcements of the Office 365 Services as read SYNTAX Set-PnPMessageCenterAnnouncementAsRead [-Identity <Ids>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPMessageCenterAnnouncementAsRead -Identity \"MC123456\" Marks message center announcement MC123456 as read for the current user EXAMPLE 2 Set-PnPMessageCenterAnnouncementAsRead -Identity \"MC123456\", \"MC234567\" Marks message center announcements MC123456 and MC234567 as read for the current user EXAMPLE 3 Set-PnPMessageCenterAnnouncementAsRead Marks all message center announcements as read for the current user PARAMETERS -Identity Marks the message center announcement or announcements with the provided Ids as read Type: String[] Parameter Sets: None Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPMessageCenterAnnouncementAsUnread.html": {
    "href": "cmdlets/Set-PnPMessageCenterAnnouncementAsUnread.html",
    "title": "Set-PnPMessageCenterAnnouncementAsUnread | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Set-PnPMessageCenterAnnouncementAsUnread SYNOPSIS Required Permissions Microsoft Graph API : ServiceMessageViewpoint.Write (delegated) Marks one or multiple message center announcements of the Office 365 Services as unread SYNTAX Set-PnPMessageCenterAnnouncementAsUnread [-Identity <Ids>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPMessageCenterAnnouncementAsUnread -Identity \"MC123456\" Marks message center announcement MC123456 as unread for the current user EXAMPLE 2 Set-PnPMessageCenterAnnouncementAsUnread -Identity \"MC123456\", \"MC234567\" Marks message center announcements MC123456 and MC234567 as unread for the current user EXAMPLE 3 Set-PnPMessageCenterAnnouncementAsUnread Marks all message center announcements as unread for the current user PARAMETERS -Identity Marks the message center announcement or announcements with the provided Ids as unread Type: String[] Parameter Sets: None Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPMicrosoft365Group.html": {
    "href": "cmdlets/Set-PnPMicrosoft365Group.html",
    "title": "Set-PnPMicrosoft365Group | PnP PowerShell",
    "keywords": "Set-PnPMicrosoft365Group SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Sets Microsoft 365 Group properties SYNTAX Set-PnPMicrosoft365Group -Identity <Microsoft365GroupPipeBind> [-DisplayName <String>] [-Description <String>] [-Owners <String[]>] [-Members <String[]>] [-IsPrivate] [-LogoPath <String>] [-CreateTeam] [-HideFromAddressLists <Boolean>] [-HideFromOutlookClients <Boolean>] [-SensitivityLabels <GUID[]>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPMicrosoft365Group -Identity $group -DisplayName \"My Displayname\" Sets the display name of the group where $group is a Group entity EXAMPLE 2 Set-PnPMicrosoft365Group -Identity $groupId -Descriptions \"My Description\" -DisplayName \"My DisplayName\" Sets the display name and description of a group based upon its ID EXAMPLE 3 Set-PnPMicrosoft365Group -Identity $group -GroupLogoPath \".\\MyLogo.png\" Sets a specific Microsoft 365 Group logo EXAMPLE 4 Set-PnPMicrosoft365Group -Identity $group -IsPrivate:$false Sets a group to be Public if previously Private EXAMPLE 5 Set-PnPMicrosoft365Group -Identity $group -Owners demo@contoso.com Sets demo@contoso.com as owner of the group EXAMPLE 6 Set-PnPMicrosoft365Group -Identity $group -SensitivityLabels \"bc98af29-59eb-4869-baaa-9a8dff631aa4\" Sets the sensitivity label of the group PARAMETERS -CreateTeam Creates a Microsoft Teams team associated with created group Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The Description of the group to set Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName The DisplayName of the group to set Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LogoPath The path to the logo file of to set. Logo must be at least 48 pixels wide and may be at most 4 MB in size. Requires Site.ReadWrite.All permissions. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HideFromAddressLists Controls whether the group is hidden or shown in the Global Address List (GAL). Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HideFromOutlookClients Controls whether the group shows in the Outlook left-hand navigation. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Identity of the Microsoft 365 Group Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -IsPrivate Makes the group private when selected Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Members The array UPN values of members to set to the group. Note: Will replace members. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owners The array UPN values of owners to set to the group. Note: Will replace owners. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SensitivityLabels The Sensitivity label to be set to the Microsoft 365 Group. To retrieve the sensitivity label you need to use the Graph API mentioned here . Type: GUID[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Set-PnPMicrosoft365GroupSettings.html": {
    "href": "cmdlets/Set-PnPMicrosoft365GroupSettings.html",
    "title": "Set-PnPMicrosoft365GroupSettings | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Set-PnPMicrosoft365GroupSettings SYNOPSIS Required Permissions Microsoft Graph API: One of Directory.ReadWrite.All, Directory.AccessUser.All Updates Microsoft 365 Group settings for the tenant or specified Group. SYNTAX Set-PnPMicrosoft365GroupSettings -Identity <string> [-Values <Hashtable>] [-Group <Microsoft365GroupPipeBind>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPMicrosoft365GroupSettings -Identity $groupSettingId -Values @{\"AllowToAddGuests\"=\"true\"} Sets the properties of the setting where $groupSettingId is a Group setting ID. You can get the Group setting using the Get-PnPMicrosoft365GroupSettings cmdlet. EXAMPLE 2 Set-PnPMicrosoft365GroupSettings -Identity $groupSettingId -Values @{\"AllowToAddGuests\"=\"true\"} -Group $groupId Sets the properties of the Microsoft 365 group specific setting where $groupSettingId is a setting ID of that group. You can get the Group setting using the Get-PnPMicrosoft365GroupSettings -Group cmdlet. PARAMETERS -Identity The Identity of the Microsoft 365 Group setting Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Values Hashtable of properties for the settings. Use the syntax @{AllowToAddGuests=\"false\";GuestUsageGuidelinesUrl=\"https://google.com/privacy\"}. Type: Hashtable Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group The Identity of the Microsoft 365 Group for which you want to update setting. Type: Microsoft365GroupPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Set-PnPMinimalDownloadStrategy.html": {
    "href": "cmdlets/Set-PnPMinimalDownloadStrategy.html",
    "title": "Set-PnPMinimalDownloadStrategy | PnP PowerShell",
    "keywords": "Set-PnPMinimalDownloadStrategy SYNOPSIS Activates or deactivates the minimal downloading strategy. SYNTAX On Set-PnPMinimalDownloadStrategy [-On] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] Off Set-PnPMinimalDownloadStrategy [-Off] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Activates or deactivates the minimal download strategy feature of a site EXAMPLES EXAMPLE 1 Set-PnPMinimalDownloadStrategy -Off Will deactivate minimal download strategy (MDS) for the current web. EXAMPLE 2 Set-PnPMinimalDownloadStrategy -On Will activate minimal download strategy (MDS) for the current web. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifies whether to overwrite (when activating) or continue (when deactivating) an existing feature with the same feature identifier. This parameter is ignored if there are no errors. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Off Turn minimal download strategy off Type: SwitchParameter Parameter Sets: Off Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -On Turn minimal download strategy on Type: SwitchParameter Parameter Sets: On Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPPage.html": {
    "href": "cmdlets/Set-PnPPage.html",
    "title": "Set-PnPPage | PnP PowerShell",
    "keywords": "Set-PnPPage SYNOPSIS Sets parameters of a page SYNTAX Set-PnPPage [-Identity] <PagePipeBind> [-Name <String>] [-Title <String>] [-LayoutType <PageLayoutType>] [-PromoteAs <PagePromoteType>] [-CommentsEnabled] [-Publish] [-HeaderType <PageHeaderType>] [-HeaderLayoutType <PageHeaderLayoutType>] [-ScheduledPublishDate <DateTime>] [-RemoveScheduledPublish] [-ContentType <ContentTypePipeBind>] [-ThumbnailUrl <String>] [-Translate][-TranslationLanguageCodes <Int[][]>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Sets parameters of a page. All pages must be located inside the Site Pages library. EXAMPLES EXAMPLE 1 Set-PnPPage -Identity \"MyPage\" -LayoutType Home -Title \"My Page\" Updates the properties of the page named 'MyPage' EXAMPLE 2 Set-PnPPage -Identity \"MyPage\" -CommentsEnabled Enables the comments on the page named 'MyPage' EXAMPLE 3 Set-PnPPage -Identity \"MyPage\" -CommentsEnabled:$false Disables the comments on the page named 'MyPage' EXAMPLE 4 Set-PnPPage -Identity \"hr/MyPage\" -HeaderType Default Sets the header of the page called MyPage located in the folder hr inside the Site Pages library to the default header EXAMPLE 5 Set-PnPPage -Identity \"MyPage\" -HeaderType None Removes the header of the page EXAMPLE 6 Set-PnPPage -Identity \"MyPage\" -HeaderType Custom -ServerRelativeImageUrl \"/sites/demo1/assets/myimage.png\" -TranslateX 10.5 -TranslateY 11.0 Sets the header of the page to custom header, using the specified image and translates the location of the image in the header given the values specified EXAMPLE 7 Set-PnPPage -Identity \"MyPage\" -ScheduledPublishDate (Get-Date).AddHours(1) Schedules the page \"MyPage\" to be published in one hour from now EXAMPLE 8 Set-PnPPage -Name \"NewPage\" -Translate Creates the necessary translated pages for all the supported languages in the site collection. EXAMPLE 9 Set-PnPPage -Name \"NewPage\" -Translate -TranslationLanguageCodes 1043 Creates the necessary translated page for the specified language in the site collection. In this case, it will create the translated page for Dutch language. If the Dutch language is not enabled, it will enable the language and then create the translated page. EXAMPLE 10 Set-PnPPage -Name \"NewPage\" -Translate -TranslationLanguageCodes 1043,1035 Creates the necessary translated page for the specified languages in the site collection. In this case, it will create the translated pages for Dutch and Finnish languages. If these languages are not enabled, it will enable these languages and then create the translated pages for the specified languages. PARAMETERS -CommentsEnabled Enables or Disables the comments on the page Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType Specify either the name, ID or an actual content type. Type: ContentTypePipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HeaderType Sets the page header type Type: PageHeaderType Parameter Sets: (All) Accepted values: None, Default, Custom Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HeaderLayoutType Sets the page header layout type Type: PageHeaderLayoutType Parameter Sets: (All) Accepted values: None, Default, Custom Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The name/identity of the page. This can be a page instance or the filename of the page. I.e. if the page is called MyPage.aspx and is located in the root of the Site Pages library, provide \"MyPage\" or \"MyPage.aspx\". If the page is called MyOtherPage.aspx and is located inside a subfolder called HR located in the root of the Site Pages library, provide \"HR/MyOtherPage\" or \"HR/MyOtherPage.aspx\". Type: PagePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -LayoutType Sets the layout type of the page. (Default = Article) Type: PageLayoutType Parameter Sets: (All) Accepted values: Article, Home, SingleWebPartAppPage, RepostPage, HeaderlessSearchResults, Spaces, Topic Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name Sets the name of the page. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PromoteAs Allows to promote the page for a specific purpose (None | HomePage | NewsArticle | Template) Type: PagePromoteType Parameter Sets: (All) Accepted values: None, HomePage, NewsArticle, Template Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Publish Publishes the page once it is saved. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ThumbnailUrl Thumbnail Url Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Sets the title of the page. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ScheduledPublishDate If provided, the page will be scheduled to be published on the provided date and time. It will enable page scheduling on the Site Pages library if not already enabled. If not provided, the publishing of the page will not be scheduled. Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveScheduledPublish If provided, the page publish schedule will be removed, if it has been set. Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Translate Creates multilingual pages for all the languages specified in the site collection Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TranslationLanguageCodes Creates multilingual pages for specified languages. Type: Integer array Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPPageTextPart.html": {
    "href": "cmdlets/Set-PnPPageTextPart.html",
    "title": "Set-PnPPageTextPart | PnP PowerShell",
    "keywords": "Set-PnPPageTextPart SYNOPSIS Set text part properties SYNTAX Set-PnPPageTextPart [-Page] <PagePipeBind> -InstanceId <Guid> -Text <String> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Sets the rendered text in existing client side text component EXAMPLES EXAMPLE 1 Set-PnPPageTextPart -Page Home -InstanceId a2875399-d6ff-43a0-96da-be6ae5875f82 -Text \"MyText\" Sets the text of the client side text component. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InstanceId The instance id of the text component Type: Guid Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Page The name of the page Type: PagePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Text Text to set Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPPageWebPart.html": {
    "href": "cmdlets/Set-PnPPageWebPart.html",
    "title": "Set-PnPPageWebPart | PnP PowerShell",
    "keywords": "Set-PnPPageWebPart SYNOPSIS Set Web Part properties SYNTAX Set-PnPPageWebPart [-Page] <PagePipeBind> -Identity <WebPartPipeBind> [-Title <String>] [-PropertiesJson <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Sets specific client side web part properties. Notice that the title parameter will only set the -internal- title of web part. The title which is shown in the UI will, if possible, have to be set using the PropertiesJson parameter. Use Get-PnPPageComponent to retrieve the instance id and properties of a web part. EXAMPLES EXAMPLE 1 Set-PnPPageWebPart -Page Home -Identity a2875399-d6ff-43a0-96da-be6ae5875f82 -PropertiesJson \"`\"Property1`\"=`\"Value1`\"\" Sets the properties of the client side web part. EXAMPLE 2 Set-PnPPageWebPart -Page Home -Identity a2875399-d6ff-43a0-96da-be6ae5875f82 -PropertiesJson $myproperties Sets the properties of the client side web part given in the $myproperties variable. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The identity of the web part. This can be the web part instance id or the title of a web part Type: WebPartPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Page The name of the page Type: PagePipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -PropertiesJson Sets the properties as a JSON string. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Title Sets the internal title of the web part. Notice that this will NOT set a visible title. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPPlannerBucket.html": {
    "href": "cmdlets/Set-PnPPlannerBucket.html",
    "title": "Set-PnPPlannerBucket | PnP PowerShell",
    "keywords": "Set-PnPPlannerBucket SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Updates an existing Planner bucket SYNTAX By Group Set-PnPPlannerBucket -Bucket <PlannerBucketPipeBind> -Group <PlannerGroupPipeBind> -Plan <PlannerPlanPipeBind> -Name <String> [<CommonParameters>] By Plan Id Set-PnPPlannerBucket -Bucket <PlannerBucketPipeBind> -PlanId <String> -Name <String> [<CommonParameters>] DESCRIPTION This cmdlet updates an existing Planner bucket. EXAMPLES Example 1 Set-PnPPlannerBucket -Bucket \"Todos\" -Group \"Marketing\" -Plan \"Conference Plan\" -Name \"Pre-conf Todos\" This example renames the bucket called \"Todos\" to \"Pre-conf Todos\" PARAMETERS -Bucket Specify the bucket or bucket id to update. Type: PlannerBucketPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group Specify the group id or name of the group owning the plan. Type: PlannerGroupPipeBind Parameter Sets: By Group Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name Specify the new name of the bucket Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Plan Specify the name or id of the plan to retrieve the buckets for. Type: PlannerPlanPipeBind Parameter Sets: By Group Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PlanId The id of the plan to find the bucket in. Type: String Parameter Sets: By Plan Id Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPPlannerConfiguration.html": {
    "href": "cmdlets/Set-PnPPlannerConfiguration.html",
    "title": "Set-PnPPlannerConfiguration | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Set-PnPPlannerConfiguration SYNOPSIS Required Permissions Azure: tasks.office.com Allows the Microsoft Planner configuration of the tenant to be set SYNTAX Set-PnPPlannerConfiguration [-IsPlannerAllowed <boolean>] [-AllowRosterCreation <boolean>] [-AllowTenantMoveWithDataLoss <boolean>] [-AllowTenantMoveWithDataMigration <boolean>] [-AllowPlannerMobilePushNotifications <boolean>] [-AllowCalendarSharing <boolean>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This cmdlet allows the Microsoft Planner tenant configuration to be changed EXAMPLES Example 1 Set-PnPPlannerConfiguration -AllowRosterCreation:$false -IsPlannerAllowed:$true Configures Microsoft Planner to be enabled and disallow roster plans to be created PARAMETERS -IsPlannerAllowed Allows configuring if Microsoft Planner is enabled on the tenant Type: Boolean Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowRosterCreation Allows configuring whether the creation of Roster containers (Planner plans without Microsoft 365 Groups) is allowed Type: Boolean Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowTenantMoveWithDataLoss Allows configuring whether a tenant move into a new region is currently authorized Type: Boolean Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowTenantMoveWithDataMigration Allows configuring whether a tenant move with data migration is authorized Type: Boolean Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowPlannerMobilePushNotifications Allows configuring whether the direct push notifications are enabled where contents of the push notification are being sent directly through Apple's or Google's services to get to the iOS or Android client Type: Boolean Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowCalendarSharing Allows configuring whether Outlook calendar sync is enabled Type: Boolean Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPPlannerPlan.html": {
    "href": "cmdlets/Set-PnPPlannerPlan.html",
    "title": "Set-PnPPlannerPlan | PnP PowerShell",
    "keywords": "Set-PnPPlannerPlan SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Updates an existing Planner plan SYNTAX By Group Set-PnPPlannerPlan -Group <PlannerGroupPipeBind> -Plan <PlannerPlanPipeBind> -Title <String> [<CommonParameters>] By Plan Id Set-PnPPlannerPlan -PlanId <String> -Title <String> [<CommonParameters>] DESCRIPTION This cmdlet updates an existing planner plan EXAMPLES Example 1 Set-PnPPlannerPlan -Group \"Marketing\" -Plan \"Conference\" -Title \"Conference 2020\" This example renames the \"Conference\" plan to \"Conference 2020\" PARAMETERS -Group Specify the group id or name of the group owning the plan. Type: PlannerGroupPipeBind Parameter Sets: By Group Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Plan Specify the id or name of the plan to update. Type: PlannerPlanPipeBind Parameter Sets: By Group Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PlanId Specify the id of the plan to update. Type: String Parameter Sets: By Plan Id Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The new title of the plan. Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPPlannerTask.html": {
    "href": "cmdlets/Set-PnPPlannerTask.html",
    "title": "Set-PnPPlannerTask | PnP PowerShell",
    "keywords": "Set-PnPPlannerTask SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Updates an existing task SYNTAX Set-PnPPlannerTask -TaskId <String> [-Title <String>] [-Bucket <PlannerBucketPipeBind>] [-PercentComplete <Int32>] [-DueDateTime <DateTime>] [-StartDateTime <DateTime>] [-AssignedTo <String[]] [-Priority <Int32>] [-Description <String>] [<CommonParameters>] DESCRIPTION This cmdlets allows you to update an existing task in a Planner plan. EXAMPLES Example 1 Set-PnPPlannerTask -TaskId RSNNbc4HM0e7jt-btAKtTZYAFAf0 -Title \"New Title\" -StartDateTime 2020-10-01 This updates the task with the specified id and sets the title to \"New Title\" and sets the start date to the first of October 2020. Example 2 Set-PnPPlannerTask -TaskId RSNNbc4HM0e7jt-btAKtTZYAFAf0 -Title \"New Title\" -Bucket \"To do\" This updates the task with the specified id and moves to the bucket \"To do\" Example 3 Set-PnPPlannerTask -TaskId RSNNbc4HM0e7jt-btAKtTZYAFAf0 -AssignedTo \"user@contoso.com\",\"manager@contoso.com\" This updates the task with the specified id replaces the assigned users with the ones specified. PARAMETERS -Bucket Specify the bucket name or ID to move the task to. Type: PlannerBucketPipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DueDateTime Specify the due date. Type: DateTime Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PercentComplete Defines the percentage of completeness of the task. Type: Int32 Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StartDateTime Defines the start date of the task. Type: DateTime Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TaskId The Id of the task to update. Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Sets the new title of the task. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AssignedTo Specify the email(s) of the user to assign the task to. Notice that this will replace existing assignments with the onces specified here. Type: String[] Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Priority Sets the priority of the task. Value should be a number between 0 and 10. values 0 and 1 are interpreted as Urgent values 2, 3 and 4 are interpreted as Important values 5, 6 and 7 are interpreted as Medium values 8, 9 and 10 are interpreted as Low Type: Int32 Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Sets the description (notes) of the task. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPPlannerUserPolicy.html": {
    "href": "cmdlets/Set-PnPPlannerUserPolicy.html",
    "title": "Set-PnPPlannerUserPolicy | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Set-PnPPlannerUserPolicy SYNOPSIS Required Permissions Azure: tasks.office.com Allows a Microsoft Planner user policy to be set for a specific user SYNTAX Set-PnPPlannerUserPolicy -Identity <string> [-BlockDeleteTasksNotCreatedBySelf <boolean>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This cmdlet allows a Microsoft Planner user policy to be set for the provided user EXAMPLES Example 1 Set-PnPPlannerUserPolicy -Identity \"johndoe@contoso.onmicrosoft.com\" Sets the Microsoft Planner user policy for the provided user PARAMETERS -Identity Azure Active Directory user identifier or user principal name of the user to create the Microsoft Planner policy for Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -BlockDeleteTasksNotCreatedBySelf Allows the user for which the policy gets created to be blocked from deleting tasks that have not been created by the user itself Type: Boolean Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPPropertyBagValue.html": {
    "href": "cmdlets/Set-PnPPropertyBagValue.html",
    "title": "Set-PnPPropertyBagValue | PnP PowerShell",
    "keywords": "Set-PnPPropertyBagValue SYNOPSIS Adds a new or updates an existing property bag value SYNTAX Web Set-PnPPropertyBagValue -Key <String> -Value <String> [-Indexed] [-Connection <PnPConnection>] [<CommonParameters>] Folder Set-PnPPropertyBagValue -Key <String> -Value <String> [-Folder <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Updates an existing property bag value or adds it as a new key\\value pair if it doesn't exist yet. If working with a modern SharePoint Online site or having noscript enabled, you will have to disable this yourself temporarily using Set-PnPTenantSite -Url <url> -NoScriptSite:$false to be able to make the change. EXAMPLES EXAMPLE 1 Set-PnPPropertyBagValue -Key MyKey -Value MyValue This sets or adds a value to the current web property bag EXAMPLE 2 Set-PnPPropertyBagValue -Key MyKey -Value MyValue -Folder / This sets or adds a value to the root folder of the current web EXAMPLE 3 Set-PnPPropertyBagValue -Key MyKey -Value MyValue -Folder /MyFolder This sets or adds a value to the folder MyFolder which is located in the root folder of the current web PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder Site relative url of the folder. See examples for use. Type: String Parameter Sets: Folder Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Indexed Type: SwitchParameter Parameter Sets: Web Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Key Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Value Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPRequestAccessEmails.html": {
    "href": "cmdlets/Set-PnPRequestAccessEmails.html",
    "title": "Set-PnPRequestAccessEmails | PnP PowerShell",
    "keywords": "Set-PnPRequestAccessEmails SYNOPSIS Sets Request Access Email on a web SYNTAX Set-PnPRequestAccessEmails [-Emails <String[]>] [-Disabled] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Enables or disables access requests to be sent and configures which e-mail address should receive these requests. The web you apply this on must have unique rights. EXAMPLES EXAMPLE 1 Set-PnPRequestAccessEmails -Emails someone@example.com This will enable requesting access and send the requests to the provided e-mail address EXAMPLE 2 Set-PnPRequestAccessEmails -Disabled This will disable the ability to request access to the site EXAMPLE 3 Set-PnPRequestAccessEmails -Disabled:$false This will enable the ability to request access to the site and send the requests to the default owners of the site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Disabled Enables or disables access to be requested Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Emails Email address to send the access requests to Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPRoleDefinition.html": {
    "href": "cmdlets/Set-PnPRoleDefinition.html",
    "title": "Set-PnPRoleDefinition | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Set-PnPRoleDefinition SYNOPSIS Sets an existing Role Definition (Permission Level) in the site collection in the current context SYNTAX Set-PnPRoleDefinition -Identity <RoleDefinitionPipeBind> [-NewRoleName <String>] [-Description <String>] [-Order <Int32>] [-SelectAll] [-ClearAll] [-Select <PermissionKind[]>] [-Clear <PermissionKind[]>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Allows setting an existing Role Definition (Permission Level) in the site collection in the current context. EXAMPLES EXAMPLE 1 Set-PnPRoleDefinition -Identity \"CustomPerm\" -Clear EditListItems Removes the EditListItems flag from an existing permission level EXAMPLE 2 Set-PnPRoleDefinition -Identity \"NoDelete\" -SelectAll -Clear DeleteListItems Select all flags for an existing permission level except DeleteListItems EXAMPLE 3 Set-PnPRoleDefinition -Identity \"CustomPerm\" -NewRoleName \"NoDelete\" -Description \"Contribute without delete\" Change the name and description of an existing permission level EXAMPLE 4 Set-PnPRoleDefinition -Identity \"CustomPerm\" -Order 500 Change the order in which the permission level is displayed PARAMETERS -Identity The identity of the role definition, either a RoleDefinition object or a the name of roledefinition. Type: RoleDefinitionPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -RoleName The new name for the permission level. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Description The new description for the permission level. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Order Sets the order of the permission level. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SelectAll Sets all permission flags. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClearAll Clears ​all permission flags. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Select Specifies permission flags(s) to enable. Please visit https://docs.microsoft.com/previous-versions/office/sharepoint-csom/ee536458(v%3Doffice.15) for the PermissionKind enum Type: PermissionKind[] Parameter Sets: (All) Accepted values: EmptyMask, ViewListItems, AddListItems, EditListItems, DeleteListItems, ApproveItems, OpenItems, ViewVersions, DeleteVersions, CancelCheckout, ManagePersonalViews, ManageLists, ViewFormPages, AnonymousSearchAccessList, Open, ViewPages, AddAndCustomizePages, ApplyThemeAndBorder, ApplyStyleSheets, ViewUsageData, CreateSSCSite, ManageSubwebs, CreateGroups, ManagePermissions, BrowseDirectories, BrowseUserInfo, AddDelPrivateWebParts, UpdatePersonalWebParts, ManageWeb, AnonymousSearchAccessWebLists, UseClientIntegration, UseRemoteAPIs, ManageAlerts, CreateAlerts, EditMyUserInfo, EnumeratePermissions, FullMask Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Clear Specifies permission flags(s) to disable. Please visit https://docs.microsoft.com/previous-versions/office/sharepoint-csom/ee536458(v%3Doffice.15) for the PermissionKind enum Type: PermissionKind[] Parameter Sets: (All) Accepted values: EmptyMask, ViewListItems, AddListItems, EditListItems, DeleteListItems, ApproveItems, OpenItems, ViewVersions, DeleteVersions, CancelCheckout, ManagePersonalViews, ManageLists, ViewFormPages, AnonymousSearchAccessList, Open, ViewPages, AddAndCustomizePages, ApplyThemeAndBorder, ApplyStyleSheets, ViewUsageData, CreateSSCSite, ManageSubwebs, CreateGroups, ManagePermissions, BrowseDirectories, BrowseUserInfo, AddDelPrivateWebParts, UpdatePersonalWebParts, ManageWeb, AnonymousSearchAccessWebLists, UseClientIntegration, UseRemoteAPIs, ManageAlerts, CreateAlerts, EditMyUserInfo, EnumeratePermissions, FullMask Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPSearchConfiguration.html": {
    "href": "cmdlets/Set-PnPSearchConfiguration.html",
    "title": "Set-PnPSearchConfiguration | PnP PowerShell",
    "keywords": "Set-PnPSearchConfiguration SYNOPSIS Sets the search configuration SYNTAX Config Set-PnPSearchConfiguration -Configuration <String> [-Scope <SearchConfigurationScope>] [-Connection <PnPConnection>] [<CommonParameters>] Path Set-PnPSearchConfiguration -Path <String> [-Scope <SearchConfigurationScope>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPSearchConfiguration -Configuration $config Sets the search configuration for the current web EXAMPLE 2 Set-PnPSearchConfiguration -Configuration $config -Scope Site Sets the search configuration for the current site collection EXAMPLE 3 Set-PnPSearchConfiguration -Configuration $config -Scope Subscription Sets the search configuration for the current tenant EXAMPLE 4 Set-PnPSearchConfiguration -Path searchconfig.xml -Scope Subscription Reads the search configuration from the specified XML file and sets it for the current tenant PARAMETERS -Configuration Search configuration string Type: String Parameter Sets: Config Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Path to a search configuration Type: String Parameter Sets: Path Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope Type: SearchConfigurationScope Parameter Sets: (All) Accepted values: Web, Site, Subscription Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPSearchSettings.html": {
    "href": "cmdlets/Set-PnPSearchSettings.html",
    "title": "Set-PnPSearchSettings | PnP PowerShell",
    "keywords": "Set-PnPSearchSettings SYNOPSIS Sets search settings for a site SYNTAX Set-PnPSearchSettings [-SearchBoxInNavBar <SearchBoxInNavBarType>] [-SearchPageUrl <String>] [-SearchBoxPlaceholderText <String>] [-SearchScope <SearchScopeType>] [-Scope <SearchSettingsScope>] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPSearchSettings -SearchBoxInNavBar Hidden -Scope Site Hide the suite bar search box on all pages and sites in the site collection EXAMPLE 2 Set-PnPSearchSettings -SearchBoxInNavBar Hidden -Scope Web Hide the suite bar search box on all pages in the current site EXAMPLE 3 Set-PnPSearchSettings -SearchPageUrl \"https://contoso.sharepoint.com/sites/mysearch/SitePages/search.aspx\" Redirect the suite bar search box in the site to a custom URL EXAMPLE 4 Set-PnPSearchSettings -SearchPageUrl \"\" Clear the suite bar search box redirect URL and revert to the default behavior EXAMPLE 5 Set-PnPSearchSettings -SearchPageUrl \"https://contoso.sharepoint.com/sites/mysearch/SitePages/search.aspx\" -Scope Site Redirect classic search to a custom URL EXAMPLE 6 Set-PnPSearchSettings -SearchScope Tenant Set default behavior of the suite bar search box to show tenant wide results instead of site or hub scoped results EXAMPLE 7 Set-PnPSearchSettings -SearchScope Hub Set default behavior of the suite bar search box to show hub results instead of site results on an associated hub site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Do not ask for confirmation. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope Scope to apply the setting to. Possible values: Web (default), Site. For a root site, the scope does not matter. Type: SearchSettingsScope Parameter Sets: (All) Accepted values: Site, Web Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SearchBoxInNavBar Set the scope of which the suite bar search box shows. Possible values: Inherit, AllPages, ModernOnly, Hidden. Type: SearchBoxInNavBarType Parameter Sets: (All) Accepted values: Inherit, AllPages, ModernOnly, Hidden Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SearchBoxPlaceholderText Set the placeholder text displayed in the search box. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SearchPageUrl Set the URL where the search box should redirect to. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SearchScope Set the search scope of the suite bar search box. Possible values: DefaultScope, Tenant, Hub, Site. Type: SearchScopeType Parameter Sets: (All) Accepted values: DefaultScope, Tenant, Hub, Site Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPSite.html": {
    "href": "cmdlets/Set-PnPSite.html",
    "title": "Set-PnPSite | PnP PowerShell",
    "keywords": "Set-PnPSite SYNOPSIS Sets Site Collection properties. SYNTAX Set Properties Set-PnPSite [-Identity <String>] [-Classification <String>] [-DisableFlows] [-LogoFilePath <String>] [-Sharing <SharingCapabilities>] [-StorageMaximumLevel <Int64>] [-StorageWarningLevel <Int64>] [-AllowSelfServiceUpgrade] [-NoScriptSite] [-Owners <System.Collections.Generic.List`1[System.String]>] [-CommentsOnSitePagesDisabled] [-DefaultLinkPermission <SharingPermissionType>] [-DefaultSharingLinkType <SharingLinkType>] [-DefaultLinkToExistingAccess <Boolean>] [-DefaultLinkToExistingAccessReset] [-DisableAppViews <AppViewsPolicy>] [-DisableCompanyWideSharingLinks <CompanyWideSharingLinksPolicy>] [-DisableSharingForNonOwners] [-LocaleId <UInt32>] [-RestrictedToGeo <RestrictedToRegion>] [-SocialBarOnSitePagesDisabled] [-AnonymousLinkExpirationInDays <Int32>] [-OverrideTenantAnonymousLinkExpirationPolicy] [-MediaTranscription <MediaTranscriptionPolicyType>] [-Connection <PnPConnection>] [<CommonParameters>] Set Lock State Set-PnPSite [-Identity <String>] [-Classification <String>] [-DisableFlows] [-LockState <SiteLockState>] [-Wait] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPSite -Classification \"HBI\" Sets the current site classification to HBI EXAMPLE 2 Set-PnPSite -Classification $null Unsets the current site classification EXAMPLE 3 Set-PnPSite -DisableFlows Disables Microsoft Flow for this site, and also hides the Flow button from the ribbon EXAMPLE 4 Set-PnPSite -DisableFlows:$false Enables Microsoft Flow for this site EXAMPLE 5 Set-PnPSite -LogoFilePath c:\\images\\mylogo.png Sets the logo if the site is a modern team site EXAMPLE 6 Set-PnPSite -NoScriptSite $false Allows custom script on a specific site. See Allow or prevent custom script for more information. PARAMETERS -AllowSelfServiceUpgrade Specifies if the site administrator can upgrade the site collection Type: SwitchParameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AnonymousLinkExpirationInDays {{ Fill AnonymousLinkExpirationInDays Description }} Type: Int32 Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Classification The classification to set Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CommentsOnSitePagesDisabled Specifies if comments on site pages are enabled or disabled Type: SwitchParameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultLinkPermission Specifies the default link permission for the site collection. None - Respect the organization default link permission. View - Sets the default link permission for the site to \"view\" permissions. Edit - Sets the default link permission for the site to \"edit\" permissions Type: SharingPermissionType Parameter Sets: Set Properties Accepted values: None, View, Edit Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultSharingLinkType Specifies the default link type for the site collection. None - Respect the organization default sharing link type. AnonymousAccess - Sets the default sharing link for this site to an Anonymous Access or Anyone link. Internal - Sets the default sharing link for this site to the \"organization\" link or company shareable link. Direct - Sets the default sharing link for this site to the \"Specific people\" link Type: SharingLinkType Parameter Sets: Set Properties Accepted values: None, Direct, Internal, AnonymousAccess Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultLinkToExistingAccess When set to $true, the DefaultSharingLinkType will be overriden and the default sharing link will be All People with Existing Access link (which does not modify permissions). When set to $false (the default), the default sharing link type is controlled by the DefaultSharingLinkType parameter Type: Boolean Parameter Sets: Set Properties Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -DisableAppViews Type: AppViewsPolicy Parameter Sets: Set Properties Accepted values: Unknown, Disabled, NotDisabled Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableCompanyWideSharingLinks Type: CompanyWideSharingLinksPolicy Parameter Sets: Set Properties Accepted values: Unknown, Disabled, NotDisabled Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableFlows Disables Microsoft Flow for this site Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableSharingForNonOwners Specifies to prevent non-owners from inviting new users to the site Type: SwitchParameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Type: String Parameter Sets: (All) Aliases: Url Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LocaleId Specifies the language of this site collection. Type: UInt32 Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LockState Sets the lockstate of a site Type: SiteLockState Parameter Sets: Set Lock State Accepted values: Unlock, NoAccess, ReadOnly Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LogoFilePath Sets the logo of the site if it concerns a modern team site. Provide a full path to a local image file on your disk which you want to use as the site logo. The logo will be uploaded automatically to SharePoint. If you want to set the logo for a classic site, use Set-PnPWeb -SiteLogoUrl. Type: String Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NoScriptSite Specifies if a site allows custom script or not. See Allow or prevent custom script for more information. Type: SwitchParameter Parameter Sets: Set Properties Aliases: DenyAndAddCustomizePages Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OverrideTenantAnonymousLinkExpirationPolicy {{ Fill OverrideTenantAnonymousLinkExpirationPolicy Description }} Type: SwitchParameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owners Specifies owner(s) to add as site collection administrators. They will be added as additional site collection administrators. Existing administrators will stay. Can be both users and groups. Type: System.Collections.Generic.List`1[System.String] Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RestrictedToGeo Specifies the Geo/Region restrictions of this site. Type: RestrictedToRegion Parameter Sets: Set Properties Accepted values: NoRestriction, BlockMoveOnly, BlockFull, Unknown Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Sharing Specifies what the sharing capabilities are for the site. Possible values: Disabled, ExternalUserSharingOnly, ExternalUserAndGuestSharing, ExistingExternalUserSharingOnly Type: SharingCapabilities Parameter Sets: Set Properties Accepted values: Disabled, ExternalUserSharingOnly, ExternalUserAndGuestSharing, ExistingExternalUserSharingOnly Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SocialBarOnSitePagesDisabled Disables or enables the Social Bar for Site Collection. Type: SwitchParameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StorageMaximumLevel Specifies the storage quota for this site collection in megabytes. This value must not exceed the company's available quota. Type: Int64 Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StorageWarningLevel Specifies the warning level for the storage quota in megabytes. This value must not exceed the values set for the StorageMaximumLevel parameter Type: Int64 Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MediaTranscription When the feature is enabled, videos can have transcripts generated on demand or generated automatically in certain scenarios. This is the default because the policy is default on. If a video owner decides they don’t want the transcript, they can always hide or delete it from that video. Possible values: Enabled, Disabled Type: MediaTranscriptionPolicyType Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Wait Wait for the operation to complete Type: SwitchParameter Parameter Sets: Set Lock State Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPSiteClosure.html": {
    "href": "cmdlets/Set-PnPSiteClosure.html",
    "title": "Set-PnPSiteClosure | PnP PowerShell",
    "keywords": "Set-PnPSiteClosure SYNOPSIS Opens or closes a site which has a site policy applied SYNTAX Set-PnPSiteClosure -State <ClosureState> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPSiteClosure -State Open This opens a site which has been closed and has a site policy applied. EXAMPLE 2 Set-PnPSiteClosure -State Closed This closes a site which is open and has a site policy applied. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -State The state of the site Type: ClosureState Parameter Sets: (All) Accepted values: Open, Closed Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPSiteDesign.html": {
    "href": "cmdlets/Set-PnPSiteDesign.html",
    "title": "Set-PnPSiteDesign | PnP PowerShell",
    "keywords": "Set-PnPSiteDesign SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Updates a Site Design on the current tenant. SYNTAX Set-PnPSiteDesign -Identity <TenantSiteDesignPipeBind> [-Title <String>] [-SiteScriptIds <GuidPipeBind[]>] [-Description <String>] [-IsDefault] [-PreviewImageAltText <String>] [-PreviewImageUrl <String>] [-WebTemplate <SiteWebTemplate>] [-Version <Int32>] [-ThumbnailUrl <String>] [-DesignPackageId <Guid>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPSiteDesign -Identity 046e2e76-67ba-46ca-a5f6-8eb418a7821e -Title \"My Updated Company Design\" Updates an existing Site Design and sets a new title. EXAMPLE 2 $design = Get-PnPSiteDesign -Identity 046e2e76-67ba-46ca-a5f6-8eb418a7821e Set-PnPSiteDesign -Identity $design -Title \"My Updated Company Design\" Updates an existing Site Design and sets a new title. EXAMPLE 3 Set-PnPSiteDesign -Identity 046e2e76-67ba-46ca-a5f6-8eb418a7821e -Title \"My Company Design\" -Description \"My description\" -ThumbnailUrl \"https://contoso.sharepoint.com/sites/templates/my images/logo.png\" Updates an existing Site Design, providing a new title, description and logo to be shown in the template picker. Notice that when the location for the TumbnailUrl contains a space, it should be provided URL decoded, so i.e. no %20 for spaces. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the site design Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The guid or an object representing the site design Type: TenantSiteDesignPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsDefault Specifies if the site design is a default site design Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PreviewImageAltText Sets the text for the preview image. This was used in the old site designs approach and currently has no function anymore. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PreviewImageUrl Sets the url to the preview image. This was used in the old site designs approach and currently has no function anymore. Use ThumbnailUrl instead. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteScriptIds An array of guids of site scripts Type: Guid[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the site design Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Version Specifies the version of the design Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WebTemplate Specifies the type of site to which this design applies Type: SiteWebTemplate Parameter Sets: (All) Accepted values: TeamSite, CommunicationSite, GrouplessTeamSite, ChannelSite Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ThumbnailUrl The full URL of a thumbnail image, i.e. https://contoso.sharepoint/siteassets/image.png . If none is specified, SharePoint uses a generic image. Recommended size is 400 x 300 pixels. This is the image that will be shown when selecting a template through \"Apply a site template\" or \"Browse templates\" shown in \"Start designing your site\" shown when creating a new site. If there are spaces in the URL, do not URL encode them, so i.e. do not use %20 where there is a space, but instead just provide the link with the space inside. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DesignPackageId Sets the design package Id of this site design. Type: SiteWebTemplate Parameter Sets: (All) Accepted values: TeamSite, CommunicationSite Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPSiteGroup.html": {
    "href": "cmdlets/Set-PnPSiteGroup.html",
    "title": "Set-PnPSiteGroup | PnP PowerShell",
    "keywords": "Set-PnPSiteGroup SYNOPSIS Updates the SharePoint Online owner and permission levels on a group inside a site collection. SYNTAX Set-PnPSiteGroup -Identity <String> [-Name <String>] [-Owner <String>] [-PermissionLevelsToAdd <String[]>] [-PermissionLevelsToRemove <String[]>] [-Site <PipeBind>] DESCRIPTION For permissions and the most current information about Windows PowerShell for SharePoint Online, see the online documentation at Intro to SharePoint Online Management Shell . EXAMPLES EXAMPLE 1 Set-PnPSiteGroup -Site \"https://contoso.sharepoint.com/sites/siteA\" -Identity \"ProjectViewers\" -PermissionLevelsToRemove \"Full Control\" -PermissionLevelsToAdd \"View Only\" Example 1 changes permission level of the ProjectViewers group inside site collection https://contoso.sharepoint.com/sites/siteA from Full Control to View Only. EXAMPLE 2 Set-PnPSiteGroup -Site \"https://contoso.sharepoint.com\" -Identity \"ProjectViewers\" -Owner user@domain.com Example 2 sets user@domain.com as the owner of the ProjectViewers group. PARAMETERS -Identity Specifies the name of the group. Type: String Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name Specifies the new name of the group. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owner Specifies the owner (individual or a security group) of the group to be created. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PermissionLevelsToAdd Specifies the permission levels to grant to the group. Note Permission levels are defined by SharePoint Online administrators from SharePoint Online Administration Center. Type: String[] Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PermissionLevelsToRemove Specifies the permission levels to remove from the group. Note Permission levels are defined by SharePoint Online administrators from SharePoint Online Administration Center. Type: String[] Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site Specifies the site collection the group belongs to. If not defined, the currently connected site will be used. Type: SitePipeBind Parameter Sets: (All) Aliases: Applicable: SharePoint Online Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPSitePolicy.html": {
    "href": "cmdlets/Set-PnPSitePolicy.html",
    "title": "Set-PnPSitePolicy | PnP PowerShell",
    "keywords": "Set-PnPSitePolicy SYNOPSIS Sets a site policy SYNTAX Set-PnPSitePolicy -Name <String> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPSitePolicy -Name \"Contoso HBI\" This applies a site policy with the name \"Contoso HBI\" to the current site. The policy needs to be available in the site. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The name of the site policy to apply Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPSiteScript.html": {
    "href": "cmdlets/Set-PnPSiteScript.html",
    "title": "Set-PnPSiteScript | PnP PowerShell",
    "keywords": "Set-PnPSiteScript SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Updates an existing Site Script on the current tenant. SYNTAX Set-PnPSiteScript -Identity <TenantSiteScriptPipeBind> [-Title <String>] [-Description <String>] [-Content <String>] [-Version <Int32>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPSiteScript -Identity f1d55d9b-b116-4f54-bc00-164a51e7e47f -Title \"My Site Script\" Updates an existing Site Script and changes the title. EXAMPLE 2 $script = Get-PnPSiteScript -Identity f1d55d9b-b116-4f54-bc00-164a51e7e47f Set-PnPSiteScript -Identity $script -Title \"My Site Script\" Updates an existing Site Script and changes the title. PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Content A JSON string containing the site script Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the site script Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The guid or an object representing the site script Type: TenantSiteScriptPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the site script Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Version Specifies the version of the site script Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPSiteScriptPackage.html": {
    "href": "cmdlets/Set-PnPSiteScriptPackage.html",
    "title": "Set-PnPSiteScriptPackage | PnP PowerShell",
    "keywords": "Set-PnPSiteScript SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Updates an existing Site Script Package on the current tenant. SYNTAX Set-PnPSiteScriptPackage -Identity <TenantSiteScriptPipeBind> [-Title <String>] [-Description <String>] [-ContentPath <String>] [-Version <Int32>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPSiteScriptPackage -Identity f1d55d9b-b116-4f54-bc00-164a51e7e47f -Title \"My Site Script\" Updates an existing Site Script PAckage and changes the title. EXAMPLE 2 $script = Get-PnPSiteScriptPackage -Identity f1d55d9b-b116-4f54-bc00-164a51e7e47f Set-PnPSiteScriptPackage -Identity $script -Title \"My Site Script\" Updates an existing Site Script Package and changes the title. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentPath The path to the locally stored Site Script Package to upload to SharePoint Online Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the site script package Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The guid or an object representing the site script package Type: TenantSiteScriptPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The title of the site script package Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Version Specifies the version of the site script package Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPSiteTemplateMetadata.html": {
    "href": "cmdlets/Set-PnPSiteTemplateMetadata.html",
    "title": "Set-PnPSiteTemplateMetadata | PnP PowerShell",
    "keywords": "Set-PnPSiteTemplateMetadata SYNOPSIS Sets metadata of a provisioning template SYNTAX Set-PnPSiteTemplateMetadata [-Path] <String> [-TemplateDisplayName <String>] [-TemplateImagePreviewUrl <String>] [-TemplateProperties <Hashtable>] [-TemplateProviderExtensions <ITemplateProviderExtension[]>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPSiteTemplateMetadata -Path template.xml -TemplateDisplayName \"DisplayNameValue\" Sets the DisplayName property of a site template in XML format. EXAMPLE 2 Set-PnPSiteTemplateMetadata -Path template.pnp -TemplateDisplayName \"DisplayNameValue\" Sets the DisplayName property of a site template in Office Open XML format. EXAMPLE 3 Set-PnPSiteTemplateMetadata -Path template.xml -TemplateImagePreviewUrl \"Full URL of the Image Preview\" Sets the Url to the preview image of a site template in XML format. EXAMPLE 4 Set-PnPSiteTemplateMetadata -Path template.pnp -TemplateImagePreviewUrl \"Full URL of the Image Preview\" Sets the to the preview image of a site template in Office Open XML format. EXAMPLE 5 Set-PnPSiteTemplateMetadata -Path template.xml -TemplateProperties @{\"Property1\" = \"Test Value 1\"; \"Property2\"=\"Test Value 2\"} Sets the property 'Property1' to the value 'Test Value 1' of a site template in XML format. EXAMPLE 6 Set-PnPSiteTemplateMetadata -Path template.pnp -TemplateProperties @{\"Property1\" = \"Test Value 1\"; \"Property2\"=\"Test Value 2\"} Sets the property 'Property1' to the value 'Test Value 1' of a site template in Office Open XML format. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Path to the xml or pnp file containing the site template. Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByPropertyName, ByValue) Accept wildcard characters: False -TemplateDisplayName It can be used to specify the DisplayName of the template file that will be updated. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateImagePreviewUrl It can be used to specify the ImagePreviewUrl of the template file that will be updated. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateProperties It can be used to specify custom Properties for the template file that will be updated. Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TemplateProviderExtensions Allows you to specify ITemplateProviderExtension to execute while extracting a template. Type: ITemplateProviderExtension[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPStorageEntity.html": {
    "href": "cmdlets/Set-PnPStorageEntity.html",
    "title": "Set-PnPStorageEntity | PnP PowerShell",
    "keywords": "Set-PnPStorageEntity SYNOPSIS Set Storage Entities / Farm Properties in either the tenant scoped app catalog or the site collection app catalog. SYNTAX Set-PnPStorageEntity -Key <String> -Value <String> [-Comment <String>] [-Description <String>] [-Scope <StorageEntityScope>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPStorageEntity -Key MyKey -Value \"MyValue\" -Comment \"My Comment\" -Description \"My Description\" Sets an existing or adds a new storage entity / farm property at tenant level. EXAMPLE 2 Set-PnPStorageEntity -Scope Site -Key MyKey -Value \"MyValue\" -Comment \"My Comment\" -Description \"My Description\" Sets an existing or adds a new storage entity site collection level. PARAMETERS -Comment The comment to set. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description to set. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Key The key of the value to set. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Scope Defines the scope of the storage entity. Defaults to Tenant. Type: StorageEntityScope Parameter Sets: (All) Accepted values: Site, Tenant Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Value The value to set. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPStructuralNavigationCacheSiteState.html": {
    "href": "cmdlets/Set-PnPStructuralNavigationCacheSiteState.html",
    "title": "Set-PnPStructuralNavigationCacheSiteState | PnP PowerShell",
    "keywords": "Set-PnPStructuralNavigationCacheSiteState SYNOPSIS Enable or disable caching for all webs in a site collection. SYNTAX Set-PnPStructuralNavigationCacheSiteState -IsEnabled <Boolean> [-SiteUrl <String>] DESCRIPTION The Set-PnPStructuralNavigationCacheSiteState cmdlet can be used to enable or disable caching for all webs in a site collection. If the SiteUrl parameter has not been specified the currently connected to site will be used. EXAMPLES Example 1 Set-PnPStructuralNavigationCacheSiteState -IsEnabled $true -SiteUrl \"https://contoso.sharepoint.com/sites/product/\" This example enables caching for all webs in the site collection https://contoso.sharepoint.com/sites/product/ . Example 2 Set-PnPStructuralNavigationCacheSiteState -IsEnabled $false -SiteUrl \"https://contoso.sharepoint.com/sites/product/\" This example disabled caching for all webs in the site collection https://contoso.sharepoint.com/sites/product/ . PARAMETERS -IsEnabled $true to enable caching, $false to disable caching. Type: Boolean Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteUrl Specifies the absolute URL for the site collection's root web that needs its caching state to be set. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPStructuralNavigationCacheWebState.html": {
    "href": "cmdlets/Set-PnPStructuralNavigationCacheWebState.html",
    "title": "Set-PnPStructuralNavigationCacheWebState | PnP PowerShell",
    "keywords": "Set-PnPStructuralNavigationCacheWebState SYNOPSIS Enable or disable caching for all webs in a site collection. SYNTAX Set-PnPStructuralNavigationCacheWebState -IsEnabled <Boolean> [-WebUrl <String>] DESCRIPTION The Set-PnPStructuralNavigationCacheWebtate cmdlet can be used to enable or disable caching for a webs in a site collection. If the WebUrl parameter has not been specified the currently connected to site will be used. EXAMPLES Example 1 Set-PnPStructuralNavigationCacheWebState -IsEnabled $true -WebUrl \"https://contoso.sharepoint.com/sites/product/electronics\" This example enables caching for the web https://contoso.sharepoint.com/sites/product/electronics . Example 1 Set-PnPStructuralNavigationCacheSiteState -IsEnabled $false -SiteUrl \"https://contoso.sharepoint.com/sites/product/electronics\" This example disabled caching for all webs in the web https://contoso.sharepoint.com/sites/product/electronics . PARAMETERS -IsEnabled $true to enable caching, $false to disable caching.. Type: Boolean Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteUrl Specifies the absolute URL for the web that needs its caching state set. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPSubscribeSharePointNewsDigest.html": {
    "href": "cmdlets/Set-PnPSubscribeSharePointNewsDigest.html",
    "title": "Set-PnPSubscribeSharePointNewsDigest | PnP PowerShell",
    "keywords": "Set-PnPSubscribeSharePointNewsDigest SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site You must connect to the tenant admin website ( https://tenant-admin.sharepoint.com ) with Connect-PnPOnline in order to use this cmdlet. Enables or disables the SharePoint News Digest mails for a particular user. Note that the disabling option is still experimental and may not work and may be removed again in the future. SYNTAX Set-PnPSubscribeSharePointNewsDigest -Account <String> -Enabled <Boolean> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Requires a connection to a SharePoint Tenant Admin site. Enables or disables the SharePoint News Digest mails for a particular user. EXAMPLES EXAMPLE 1 Set-PnPSubscribeSharePointNewsDigest -Account 'user@domain.com' -Enabled:$true Enables the user user@domain.com for receiving the SharePoint News Digest e-mails. EXAMPLE 2 Set-PnPSubscribeSharePointNewsDigest -Account 'user@domain.com' -Enabled:$false Stops the user user@domain.com for receiving the SharePoint News Digest e-mails. PARAMETERS -Account The account of the user, formatted either as a login name, e.g. user@domain.com, or as a claims identity, e.g. i:0#.f|membership|user@domain.com Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Enabled Boolean indicating if the user should receive the SharePoint News Digest e-mails Type: Boolean Parameter Sets: (All) Required: True Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTaxonomyFieldValue.html": {
    "href": "cmdlets/Set-PnPTaxonomyFieldValue.html",
    "title": "Set-PnPTaxonomyFieldValue | PnP PowerShell",
    "keywords": "Set-PnPTaxonomyFieldValue SYNOPSIS Sets a taxonomy term value in a listitem field SYNTAX ITEM (Default) Set-PnPTaxonomyFieldValue -ListItem <ListItem> -InternalFieldName <String> -TermId <Guid> [-Label <String>] [-Connection <PnPConnection>] [<CommonParameters>] PATH Set-PnPTaxonomyFieldValue -ListItem <ListItem> -InternalFieldName <String> -TermPath <String> [-Connection <PnPConnection>] [<CommonParameters>] ITEMS Set-PnPTaxonomyFieldValue -ListItem <ListItem> -InternalFieldName <String> [-Terms <Hashtable>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPTaxonomyFieldValue -ListItem $item -InternalFieldName 'Department' -TermId 863b832b-6818-4e6a-966d-2d3ee057931c Sets the field called 'Department' to the value of the term with the ID specified EXAMPLE 2 Set-PnPTaxonomyFieldValue -ListItem $item -InternalFieldName 'Department' -TermPath 'CORPORATE|DEPARTMENTS|HR' Sets the field called 'Department' to the term called HR which is located in the DEPARTMENTS termset, which in turn is located in the CORPORATE termgroup. EXAMPLE 3 Set-PnPTaxonomyFieldValue -ListItem $item -InternalFieldName 'Department' -Terms @{\"TermId1\"=\"Label1\";\"TermId2\"=\"Label2\"} Sets the field called 'Department' with multiple terms by ID and label. You can refer to those terms with the {ID:label} token. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InternalFieldName The internal name of the field Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Label The Label value of the term Type: String Parameter Sets: ITEM Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ListItem The list item to set the field value to Type: ListItem Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermId The Id of the Term Type: Guid Parameter Sets: ITEM Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermPath A path in the form of GROUPLABEL|TERMSETLABEL|TERMLABEL Type: String Parameter Sets: PATH Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Terms Allows you to specify terms with key value pairs that can be referred to in the template by means of the {id:label} token. See examples on how to use this parameter. Type: Hashtable Parameter Sets: ITEMS Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTeamifyPromptHidden.html": {
    "href": "cmdlets/Set-PnPTeamifyPromptHidden.html",
    "title": "Set-PnPTeamifyPromptHidden | PnP PowerShell",
    "keywords": "Set-PnPTeamifyPromptHidden SYNOPSIS Hides the teamify prompt for a site SYNTAX Set-PnPTeamifyPromptHidden [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This cmdlet hides the teamify prompt for the current site EXAMPLES Example 1 Set-PnPTeamifyPromptHidden This example hides the teamify prompt for the currently connected to site. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False CommonParameters This cmdlet supports the common parameters: -Debug, -ErrorAction, -ErrorVariable, -InformationAction, -InformationVariable, -OutVariable, -OutBuffer, -PipelineVariable, -Verbose, -WarningAction, and -WarningVariable. For more information, see about_CommonParameters . RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTeamsChannel.html": {
    "href": "cmdlets/Set-PnPTeamsChannel.html",
    "title": "Set-PnPTeamsChannel | PnP PowerShell",
    "keywords": "Set-PnPTeamsChannel SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Updates an existing Teams Channel SYNTAX Set-PnPTeamsChannel -Team <TeamsTeamPipeBind> -Identity <TeamsChannelPipeBind> [-DisplayName <String>] [-Description <String>] [-IsFavoriteByDefault <Boolean>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPTeamsChannel -Team \"MyTeam\" -Channel \"MyChannel\" -DisplayName \"My Channel\" Updates the channel called 'MyChannel' to have the display name set to 'My Channel' EXAMPLE 2 Set-PnPTeamsChannel -Team \"MyTeam\" -Channel \"MyChannel\" -IsFavoriteByDefault $true Updates the channel called 'MyChannel' to make it visible to members. PARAMETERS -Description Changes the description of the specified channel. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName Changes the display name of the specified channel. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify the channel id or display name of the channel to use. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -IsFavoriteByDefault Allows you to specify if the channel is by default visible for members Type: Boolean Parameter Sets: Public channel Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnpTeamsChannelUser.html": {
    "href": "cmdlets/Set-PnpTeamsChannelUser.html",
    "title": "Set-PnPTeamsChannelUser | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Set-PnPTeamsChannelUser SYNOPSIS Required Permissions Microsoft Graph API: ChannelMember.ReadWrite.All Updates the role of a user in an existing Microsoft Teams private channel. SYNTAX Set-PnPTeamsChannelUser -Team <TeamsTeamPipeBind> -Channel <TeamsChannelPipeBind> -Identity <TeamsChannelMemberPipeBind> -Role <String> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPTeamsChannelUser -Team 4efdf392-8225-4763-9e7f-4edeb7f721aa -Channel \"19:796d063b63e34497aeaf092c8fb9b44e@thread.skype\" -Identity MCMjMiMjMDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwIyMxOTowMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMEB0aHJlYWQuc2t5cGUjIzAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMA== -Role Owner Updates the user with specific membership ID as owner of the specified Teams private channel. EXAMPLE 2 Set-PnPTeamsChannelUser -Team \"My Team\" -Channel \"My Private Channel\" -Identity john@doe.com -Role Member Updates the user john@doe.com as member of the specified Teams private channel. PARAMETERS -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Channel The id or name of the channel to retrieve. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify membership id, UPN or user ID of the channel member. Type: TeamsChannelMemberPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Role Specify the role of the user Type: String Parameter Sets: (All) Accepted values: Owner, Member Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTeamsTab.html": {
    "href": "cmdlets/Set-PnPTeamsTab.html",
    "title": "Set-PnPTeamsTab | PnP PowerShell",
    "keywords": "Set-PnPTeamsTab SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Updates Teams Tab settings SYNTAX Set-PnPTeamsTab -Team <TeamsTeamPipeBind> -Channel <TeamsChannelPipeBind> [-Identity <TeamsTabPipeBind>] [-DisplayName <String>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPTeamsTab -Team \"MyTeam\" -Channel \"My Channel\" -Identity \"Wiki\" -DisplayName \"Channel Wiki\" Updates the tab named 'Wiki' and changes the display name of the tab to 'Channel Wiki' PARAMETERS -Channel Specify the channel id or display name of the channel to use. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -DisplayName The new name of the tab. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Identity of the tab. Type: TeamsTabPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTeamsTeam.html": {
    "href": "cmdlets/Set-PnPTeamsTeam.html",
    "title": "Set-PnPTeamsTeam | PnP PowerShell",
    "keywords": "Set-PnPTeamsTeam SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Updates an existing Team. SYNTAX Set-PnPTeamsTeam -Identity <TeamsTeamPipeBind> [-DisplayName <String>] [-Description <String>] [-Visibility <TeamVisibility>] [-AllowAddRemoveApps <Boolean>] [-AllowChannelMentions <Boolean>] [-AllowCreateUpdateChannels <Boolean>] [-AllowCreateUpdateRemoveConnectors <Boolean>] [-AllowCreateUpdateRemoveTabs <Boolean>] [-AllowCustomMemes <Boolean>] [-AllowDeleteChannels <Boolean>] [-AllowGiphy <Boolean>] [-AllowGuestCreateUpdateChannels <Boolean>] [-AllowGuestDeleteChannels <Boolean>] [-AllowOwnerDeleteMessages <Boolean>] [-AllowStickersAndMemes <Boolean>] [-AllowTeamMentions <Boolean>] [-AllowUserDeleteMessages <Boolean>] [-AllowUserEditMessages <Boolean>] [-GiphyContentRating <TeamGiphyContentRating>] [-ShowInTeamsSearchAndSuggestions <Boolean>] [-Classification <String>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPTeamsTeam -Identity 'MyTeam' -DisplayName 'My Team' Updates the team called 'MyTeam' to have the display name set to 'My Team'. EXAMPLE 2 Set-PnPTeamsTeam -Identity \"baba9192-55be-488a-9fb7-2e2e76edbef2\" -Visibility Public Updates the team by using id to have the visibility Public. EXAMPLE 3 Set-PnPTeamsTeam -Identity \"My Team\" -AllowTeamMentions $false -AllowChannelMentions $true -AllowDeleteChannels $false Updates the team 'My Team' to disallow Team @mentions, allow Channel @mentions and disallow members from deleting channels. EXAMPLE 4 Set-PnPTeamsTeam -Identity \"My Team\" -GiphyContentRating Moderate Updates the team 'My Team' to make the have a Moderate level of sensitivity for giphy usage. PARAMETERS -AllowAddRemoveApps Boolean value that determines whether or not members (not only owners) are allowed to add apps to the team. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowChannelMentions Boolean value that determines whether or not channels in the team can be @ mentioned so that all users who follow the channel are notified. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowCreateUpdateChannels Setting that determines whether or not members (and not just owners) are allowed to create channels. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowCreateUpdateRemoveConnectors Setting that determines whether or not members (and not only owners) can manage connectors in the team. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowCreateUpdateRemoveTabs Setting that determines whether or not members (and not only owners) can manage tabs in channels. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowCustomMemes Setting that determines whether or not members can use the custom memes functionality in teams. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowDeleteChannels Setting that determines whether or not members (and not only owners) can delete channels in the team. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowGiphy Setting that determines whether or not giphy can be used in the team. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowGuestCreateUpdateChannels Setting that determines whether or not guests can create channels in the team. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowGuestDeleteChannels Setting that determines whether or not guests can delete in the team. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowOwnerDeleteMessages Setting that determines whether or not owners can delete messages that they or other members of the team have posted. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowStickersAndMemes Setting that determines whether stickers and memes usage is allowed in the team. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowTeamMentions Setting that determines whether the entire team can be @ mentioned (which means that all users will be notified) Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowUserDeleteMessages Setting that determines whether or not members can delete messages that they have posted. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowUserEditMessages Setting that determines whether or not users can edit messages that they have posted. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Classification Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Changes the description of the specified team. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayName Changes the display name of the specified team. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -GiphyContentRating Setting that determines the level of sensitivity of giphy usage that is allowed in the team. Accepted values are \"Strict\" or \"Moderate\" Type: TeamGiphyContentRating Parameter Sets: (All) Accepted values: moderate, strict Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -ShowInTeamsSearchAndSuggestions Setting that determines whether or not private teams should be searchable from Teams clients for users who do not belong to that team. Set to $false to make those teams not discoverable from Teams clients. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Visibility Changes the visibility of the specified team. Type: TeamVisibility Parameter Sets: (All) Accepted values: Private, Public Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTeamsTeamArchivedState.html": {
    "href": "cmdlets/Set-PnPTeamsTeamArchivedState.html",
    "title": "Set-PnPTeamsTeamArchivedState | PnP PowerShell",
    "keywords": "Set-PnPTeamsTeamArchivedState SYNOPSIS Required Permissions Microsoft Graph API : One of Directory.ReadWrite.All, Group.ReadWrite.All Sets the archived state of a team. SYNTAX Set-PnPTeamsTeamArchivedState -Identity <TeamsTeamPipeBind> -Archived <Boolean> [-SetSiteReadOnlyForMembers <Boolean>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPTeamsTeamArchivedState -Identity \"My Team\" -Archived $true Archives the team as identified. EXAMPLE 2 Set-PnPTeamsTeamArchivedState -Identity \"My Team\" -Archived $false Unarchives the team as identified. EXAMPLE 3 Set-PnPTeamsTeamArchivedState -Identity \"My Team\" -Archived $true -SetSiteReadOnlyForMembers $true Archives the team as identified and sets the underlying SharePoint Online Site Collection as read only for members PARAMETERS -Archived Setting that determines whether the Team is archived. Type: Boolean Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SetSiteReadOnlyForMembers Setting that determines whether the connected SharePoint site is set to read only. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTeamsTeamPicture.html": {
    "href": "cmdlets/Set-PnPTeamsTeamPicture.html",
    "title": "Set-PnPTeamsTeamPicture | PnP PowerShell",
    "keywords": "Set-PnPTeamsTeamPicture SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Sets the picture of an existing team. SYNTAX Set-PnPTeamsTeamPicture -Team <TeamsTeamPipeBind> -Path <String> [<CommonParameters>] DESCRIPTION Notice that this cmdlet will immediately return but it can take a few hours before the changes are reflected in Microsoft Teams. EXAMPLES EXAMPLE 1 Set-PnPTeamsTeamPicture -Team \"MyTeam\" -Path \"c:\\myimage.jpg\" Updates a picture for the team called 'MyTeam' with the available at \"c:\\myimage.jpg\" PARAMETERS -Path The path to the image file. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTemporarilyDisableAppBar.html": {
    "href": "cmdlets/Set-PnPTemporarilyDisableAppBar.html",
    "title": "Set-PnPTemporarilyDisableAppBar | PnP PowerShell",
    "keywords": "Set-PnPHomeSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Allows the SharePoint Online App Bar to be disabled. It may take some time for the change to be reflected in SharePoint Online. Support for this may be dropped after October 31st, 2021 after which the SharePoint Online App Bar will become visible anyway. See [https://admin.microsoft.com/#/MessageCenter/:/messages/MC240066] for more information. SYNTAX Set-PnPTemporarilyDisableAppBar <Boolean> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPTemporarilyDisableAppBar $true Hides the SharePoint Online App Bar. EXAMPLE 2 Set-PnPTemporarilyDisableAppBar $false Shows the SharePoint Online App Bar. PARAMETERS -Enable The url of the site to set as the home site Type: Boolean Parameter Sets: (All) Required: True Position: Named Default value: True Accept pipeline input: True Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTenant.html": {
    "href": "cmdlets/Set-PnPTenant.html",
    "title": "Set-PnPTenant | PnP PowerShell",
    "keywords": "Set-PnPTenant SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Sets organization-level site collection properties SYNTAX Set-PnPTenant [-SpecialCharactersStateInFileFolderNames <SpecialCharactersState>] [-MinCompatibilityLevel <Int32>] [-MaxCompatibilityLevel <Int32>] [-ExternalServicesEnabled <Boolean>] [-NoAccessRedirectUrl <String>] [-SharingCapability <SharingCapabilities>] [-DisplayStartASiteOption <Boolean>] [-StartASiteFormUrl <String>] [-ShowEveryoneClaim <Boolean>] [-ShowAllUsersClaim <Boolean>] [-ShowEveryoneExceptExternalUsersClaim <Boolean>] [-SearchResolveExactEmailOrUPN <Boolean>] [-OfficeClientADALDisabled <Boolean>] [-LegacyAuthProtocolsEnabled <Boolean>] [-RequireAcceptingAccountMatchInvitedAccount <Boolean>] [-ProvisionSharedWithEveryoneFolder <Boolean>] [-SignInAccelerationDomain <String>] [-EnableGuestSignInAcceleration <Boolean>] [-UsePersistentCookiesForExplorerView <Boolean>] [-BccExternalSharingInvitations <Boolean>] [-BccExternalSharingInvitationsList <String>] [-UserVoiceForFeedbackEnabled <Boolean>] [-PublicCdnEnabled <Boolean>] [-PublicCdnAllowedFileTypes <String>] [-RequireAnonymousLinksExpireInDays <Int32>] [-SharingAllowedDomainList <String>] [-SharingBlockedDomainList <String>] [-SharingDomainRestrictionMode <SharingDomainRestrictionModes>] [-OneDriveStorageQuota <Int64>] [-OneDriveForGuestsEnabled <Boolean>] [-IPAddressEnforcement <Boolean>] [-IPAddressAllowList <String>] [-IPAddressWACTokenLifetime <Int32>] [-UseFindPeopleInPeoplePicker <Boolean>] [-DefaultSharingLinkType <SharingLinkType>] [-ODBMembersCanShare <SharingState>] [-ODBAccessRequests <SharingState>] [-PreventExternalUsersFromResharing <Boolean>] [-ShowPeoplePickerSuggestionsForGuestUsers <Boolean>] [-FileAnonymousLinkType <AnonymousLinkType>] [-FolderAnonymousLinkType <AnonymousLinkType>] [-NotifyOwnersWhenItemsReshared <Boolean>] [-NotifyOwnersWhenInvitationsAccepted <Boolean>] [-NotificationsInOneDriveForBusinessEnabled <Boolean>] [-NotificationsInSharePointEnabled <Boolean>] [-OwnerAnonymousNotification <Boolean>] [-CommentsOnSitePagesDisabled <Boolean>] [-SocialBarOnSitePagesDisabled <Boolean>] [-OrphanedPersonalSitesRetentionPeriod <Int32>] [-DisallowInfectedFileDownload <Boolean>] [-DefaultLinkPermission <SharingPermissionType>] [-ConditionalAccessPolicy <SPOConditionalAccessPolicyType>] [-AllowDownloadingNonWebViewableFiles <Boolean>] [-AllowEditing <Boolean>] [-ApplyAppEnforcedRestrictionsToAdHocRecipients <Boolean>] [-FilePickerExternalImageSearchEnabled <Boolean>] [-EmailAttestationRequired <Boolean>] [-EmailAttestationReAuthDays <Int32>] [-HideDefaultThemes <Boolean>] [-DisabledWebPartIds <Guid[]>] [-EnableAIPIntegration <Boolean>] [-DisableCustomAppAuthentication <Boolean>] [-EnableAutoNewsDigest <Boolean>] [-CommentsOnListItemsDisabled <Boolean>] [-CommentsOnFilesDisabled <Boolean>] [-DisableBackToClassic <Boolean>] [-InformationBarriersSuspension <Boolean>] [-AllowFilesWithKeepLabelToBeDeletedODB <Boolean>] [-AllowFilesWithKeepLabelToBeDeletedSPO <Boolean>] [-Force] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Sets organization-level site collection properties such as StorageQuota, StorageQuotaAllocated, ResourceQuota, ResourceQuotaAllocated, and SiteCreationMode. You must have the SharePoint Online admin or Global admin role to run the cmdlet. EXAMPLES EXAMPLE 1 Set-PnPTenantSite -Identity \"https://contoso.sharepoint.com/sites/team1\" -LockState NoAccess Set-PnPTenant -NoAccessRedirectUrl \"http://www.contoso.com\" This example blocks access to https://contoso.sharepoint.com/sites/team1 and redirects traffic to http://www.contoso.com . EXAMPLE 2 Set-PnPTenant -ShowEveryoneExceptExternalUsersClaim $false This example hides the \"Everyone Except External Users\" claim in People Picker. EXAMPLE 3 Set-PnPTenant -ShowAllUsersClaim $false This example hides the \"All Users\" claim group in People Picker. EXAMPLE 4 Set-PnPTenant -UsePersistentCookiesForExplorerView $true This example enables the use of special persisted cookie for Open with Explorer. PARAMETERS -AllowDownloadingNonWebViewableFiles Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowEditing Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ApplyAppEnforcedRestrictionsToAdHocRecipients Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -BccExternalSharingInvitations When the feature is enabled, all external sharing invitations that are sent will blind copy the e-mail messages listed in the BccExternalSharingInvitationsList. The valid values are: False (default) - BCC for external sharing is disabled. True - All external sharing invitations that are sent will blind copy the e-mail messages listed in the BccExternalSharingInvitationsList. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -BccExternalSharingInvitationsList Specifies a list of e-mail addresses to be BCC'd when the BCC for External Sharing feature is enabled. Multiple addresses can be specified by creating a comma separated list with no spaces. The valid values are: \"\" (default) - Blank by default, this will also clear any value that has been set. Single or Multiple e-mail addresses - joe@contoso.com or joe@contoso.com,bob@contoso.com Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CommentsOnSitePagesDisabled Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ConditionalAccessPolicy Type: SPOConditionalAccessPolicyType Parameter Sets: (All) Accepted values: AllowFullAccess, AllowLimitedAccess, BlockAccess, ProtectionLevel Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultLinkPermission Type: SharingPermissionType Parameter Sets: (All) Accepted values: None, View, Edit Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultSharingLinkType Lets administrators choose what type of link appears is selected in the \"Get a link\" sharing dialog box in OneDrive for Business and SharePoint Online. For additional information about how to change the default link type, see Change the default link type when users get links for sharing. Note: Setting this value to \"none\" will default \"get a link\" to the most permissive link available (that is, if anonymous links are enabled, the default link will be anonymous access; if they are disabled then the default link will be internal. The values are: None Direct Internal AnonymousAccess Type: SharingLinkType Parameter Sets: (All) Accepted values: None, Direct, Internal, AnonymousAccess Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableBackToClassic Disables the back to classic link for libraries and lists. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableCustomAppAuthentication Configure if ACS-based app-only authentication should be disabled or not. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisabledWebPartIds Guids of out of the box modern web part id's to disallow from being added to pages and remove from pages where they already have been used. Currently only the following web parts can be disabled in such a way: Amazon Kindle: 46698648-fcd5-41fc-9526-c7f7b2ace919 YouTube: 544dd15b-cf3c-441b-96da-004d5a8cea1d Twitter: f6fdf4f8-4a24-437b-a127-32e66a5dd9b4 Embed: 490d7c76-1824-45b2-9de3-676421c997fa Microsoft Bookings: d24a7165-c455-4d43-8bc8-fedb04d6c1b5 Stream: 275c0095-a77e-4f6d-a2a0-6a7626911518 To block one of them, simply pass in the GUID behind the parameter. To disable more than one, separate the GUIDs with a comma. To unblock web parts, just set this property leaving out the one(s) you wish to unblock, leaving the ones that you would like to remain blocked. To unblock all web parts, use -DisabledWebPartIds @() . To see which one(s) are currently blocked, use Get-PnPTenant | Select DisabledWebPartIds . Type: Guid[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisallowInfectedFileDownload Prevents the Download button from being displayed on the Virus Found warning page. Accepts a value of true (enabled) to hide the Download button or false (disabled) to display the Download button. By default this feature is set to false. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisplayStartASiteOption Determines whether tenant users see the Start a Site menu option. The valid values are: True (default) - Tenant users will see the Start a Site menu option. False - Start a Site is hidden from the menu. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EmailAttestationReAuthDays Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EmailAttestationRequired Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableAIPIntegration Boolean indicating if Azure Information Protection (AIP) should be enabled on the tenant. For more information, see https://docs.microsoft.com/microsoft-365/compliance/sensitivity-labels-sharepoint-onedrive-files#use-powershell-to-enable-support-for-sensitivity-labels Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableGuestSignInAcceleration Accelerates guest-enabled site collections as well as member-only site collections when the SignInAccelerationDomain parameter is set. Note: If enabled, your identity provider must be capable of authenticating guest users. If it is not, guest users will be unable to log in and access content that was shared with them. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExternalServicesEnabled Enables external services for a tenant. External services are defined as services that are not in the Office 365 datacenters. The valid values are: True (default) - External services are enabled for the tenant. False - External services that are outside of the Office 365 datacenters cannot interact with SharePoint. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FileAnonymousLinkType Type: AnonymousLinkType Parameter Sets: (All) Accepted values: None, View, Edit Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FilePickerExternalImageSearchEnabled Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FolderAnonymousLinkType Type: AnonymousLinkType Parameter Sets: (All) Accepted values: None, View, Edit Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HideDefaultThemes Defines if the default themes are visible or hidden Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IPAddressAllowList Configures multiple IP addresses or IP address ranges (IPv4 or IPv6). Use commas to separate multiple IP addresses or IP address ranges. Verify there are no overlapping IP addresses and ensure IP ranges use Classless Inter-Domain Routing (CIDR) notation. For example, 172.16.0.0, 192.168.1.0/27. Note: The IPAddressAllowList parameter only lets administrators set IP addresses or ranges that are recognized as trusted. To only grant access from these IP addresses or ranges, set the IPAddressEnforcement parameter to $true. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IPAddressEnforcement Allows access from network locations that are defined by an administrator. The values are $true and $false. The default value is $false which means the setting is disabled. Before the IPAddressEnforcement parameter is set, make sure you add a valid IPv4 or IPv6 address to the IPAddressAllowList parameter. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IPAddressWACTokenLifetime Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LegacyAuthProtocolsEnabled By default this value is set to $true. Setting this parameter prevents Office clients using non-modern authentication protocols from accessing SharePoint Online resources. A value of $true - Enables Office clients using non-modern authentication protocols(such as, Forms-Based Authentication (FBA) or Identity Client Runtime Library (IDCRL)) to access SharePoint resources. A value of $false - Prevents Office clients using non-modern authentication protocols from accessing SharePoint Online resources. Note: This may also prevent third-party apps from accessing SharePoint Online resources.Also, this will also block apps using the SharePointOnlineCredentials class to access SharePoint Online resources.For additional information about SharePointOnlineCredentials, see SharePointOnlineCredentials class. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MaxCompatibilityLevel Specifies the upper bound on the compatibility level for new sites. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MinCompatibilityLevel Specifies the lower bound on the compatibility level for new sites. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NoAccessRedirectUrl Specifies the URL of the redirected site for those site collections which have the locked state \"NoAccess\" The valid values are: \"\"(default) - Blank by default, this will also remove or clear any value that has been set. Full URL - Example: https://contoso.sharepoint.com/Pages/Locked.aspx Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NotificationsInOneDriveForBusinessEnabled Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NotificationsInSharePointEnabled Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NotifyOwnersWhenInvitationsAccepted When this parameter is set to $true and when an external user accepts an invitation to a resource in a user's OneDrive for Business, the OneDrive for Business owner is notified by e-mail. For additional information about how to configure notifications for external sharing, see Configure notifications for external sharing for OneDrive for Business. The values are $true and $false. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NotifyOwnersWhenItemsReshared When this parameter is set to $true and another user re-shares a document from a user's OneDrive for Business, the OneDrive for Business owner is notified by e-mail. For additional information about how to configure notifications for external sharing, see Configure notifications for external sharing for OneDrive for Business. The values are $true and $false. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ODBAccessRequests Lets administrators set policy on access requests and requests to share in OneDrive for Business. Values: On- Users without permission to share can trigger sharing requests to the OneDrive for Business owner when they attempt to share. Also, users without permission to a file or folder can trigger access requests to the OneDrive for Business owner when they attempt to access an item they do not have permissions to. Off- Prevent access requests and requests to share on OneDrive for Business. Unspecified- Let each OneDrive for Business owner enable or disable access requests and requests to share on their OneDrive. Type: SharingState Parameter Sets: (All) Accepted values: Unspecified, On, Off Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ODBMembersCanShare Lets administrators set policy on re-sharing behavior in OneDrive for Business. Values: On- Users with edit permissions can re-share. Off- Only OneDrive for Business owner can share. The value of ODBAccessRequests defines whether a request to share gets sent to the owner. Unspecified- Let each OneDrive for Business owner enable or disable re-sharing behavior on their OneDrive. Type: SharingState Parameter Sets: (All) Accepted values: Unspecified, On, Off Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OfficeClientADALDisabled When set to true this will disable the ability to use Modern Authentication that leverages ADAL across the tenant. The valid values are: False (default) - Modern Authentication is enabled/allowed. True - Modern Authentication via ADAL is disabled. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OneDriveForGuestsEnabled Lets OneDrive for Business creation for administrator managed guest users. Administrator managed Guest users use credentials in the resource tenant to access the resources. The valid values are the following: $true-Administrator managed Guest users can be given OneDrives, provided needed licenses are assigned. $false- Administrator managed Guest users can't be given OneDrives as functionality is turned off. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OneDriveStorageQuota Sets a default OneDrive for Business storage quota for the tenant. It will be used for new OneDrive for Business sites created. A typical use will be to reduce the amount of storage associated with OneDrive for Business to a level below what the License entitles the users. For example, it could be used to set the quota to 10 gigabytes (GB) by default. If value is set to 0, the parameter will have no effect. If the value is set larger than the Maximum allowed OneDrive for Business quota, it will have no effect. Type: Int64 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OrphanedPersonalSitesRetentionPeriod Specifies the number of days after a user's Active Directory account is deleted that their OneDrive for Business content will be deleted. The value range is in days, between 30 and 3650. The default value is 30. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OwnerAnonymousNotification Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PreventExternalUsersFromResharing Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ProvisionSharedWithEveryoneFolder Creates a Shared with Everyone folder in every user's new OneDrive for Business document library. The valid values are: True (default) - The Shared with Everyone folder is created. False - No folder is created when the site and OneDrive for Business document library is created. The default behavior of the Shared with Everyone folder changed in August 2015. For additional information about the change, see Provision the Shared with Everyone folder in OneDrive for Business ( https://support.office.com/en-us/article/Provision-the-Shared-with-Everyone-folder-in-OneDrive-for-Business-6bb02c91-fd0b-42ba-9457-3921cb6dc5b2?ui=en-US&rs=en-US&ad=US ) Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PublicCdnAllowedFileTypes Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PublicCdnEnabled Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RequireAcceptingAccountMatchInvitedAccount Ensures that an external user can only accept an external sharing invitation with an account matching the invited email address. Administrators who desire increased control over external collaborators should consider enabling this feature. Note, this only applies to new external users accepting new sharing invitations. Also, the resource owner must share with an organizational or Microsoft account or the external user will be unable to access the resource. The valid values are: False (default) - When a document is shared with an external user, bob@contoso.com, it can be accepted by any user with access to the invitation link in the original e-mail. True - User must accept this invitation with bob@contoso.com. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RequireAnonymousLinksExpireInDays Specifies all anonymous links that have been created (or will be created) will expire after the set number of days . To remove the expiration requirement, set the value to zero (0). Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SearchResolveExactEmailOrUPN Removes the search capability from People Picker. Note, recently resolved names will still appear in the list until browser cache is cleared or expired. SharePoint Administrators will still be able to use starts with or partial name matching when enabled. The valid values are: False (default) - Starts with / partial name search functionality is available. True - Disables starts with / partial name search functionality for all SharePoint users, except SharePoint Admins. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SharingAllowedDomainList Specifies a list of email domains that is allowed for sharing with the external collaborators. Use the space character as the delimiter for entering multiple values. For example, \"contoso.com fabrikam.com\". For additional information about how to restrict a domain sharing, see Restricted Domains Sharing in Office 365 SharePoint Online and OneDrive for Business Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SharingBlockedDomainList Specifies a list of email domains that is blocked or prohibited for sharing with the external collaborators. Use space character as the delimiter for entering multiple values. For example, \"contoso.com fabrikam.com\". For additional information about how to restrict a domain sharing, see Restricted Domains Sharing in Office 365 SharePoint Online and OneDrive for Business Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SharingCapability Determines what level of sharing is available for the site. The valid values are: ExternalUserAndGuestSharing (default) - External user sharing (share by email) and guest link sharing are both enabled. Disabled - External user sharing (share by email) and guest link sharing are both disabled. ExternalUserSharingOnly - External user sharing (share by email) is enabled, but guest link sharing is disabled. For more information about sharing, see Manage external sharing for your SharePoint online environment ( https://docs.microsoft.com/sharepoint/turn-external-sharing-on-or-off ). Type: SharingCapabilities Parameter Sets: (All) Accepted values: Disabled, ExternalUserSharingOnly, ExternalUserAndGuestSharing, ExistingExternalUserSharingOnly Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SharingDomainRestrictionMode Specifies the external sharing mode for domains. The following values are: None AllowList BlockList For additional information about how to restrict a domain sharing, see Restricted Domains Sharing in Office 365 SharePoint Online and OneDrive for Business. Type: SharingDomainRestrictionModes Parameter Sets: (All) Accepted values: None, AllowList, BlockList Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShowAllUsersClaim Enables the administrator to hide the All Users claim groups in People Picker. When users share an item with \"All Users (x)\", it is accessible to all organization members in the tenant's Azure Active Directory who have authenticated with via this method. When users share an item with \"All Users (x)\" it is accessible to all organization members in the tenant that used NTLM to authentication with SharePoint. Note, the All Users(authenticated) group is equivalent to the Everyone claim, and shows as Everyone.To change this, see - ShowEveryoneClaim. The valid values are: True(default) - The All Users claim groups are displayed in People Picker. False - The All Users claim groups are hidden in People Picker. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShowEveryoneClaim Enables the administrator to hide the Everyone claim in the People Picker. When users share an item with Everyone, it is accessible to all authenticated users in the tenant's Azure Active Directory, including any active external users who have previously accepted invitations. Note, that some SharePoint system resources such as templates and pages are required to be shared to Everyone and this type of sharing does not expose any user data or metadata. The valid values are: True (default) - The Everyone claim group is displayed in People Picker. False - The Everyone claim group is hidden from the People Picker. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShowEveryoneExceptExternalUsersClaim Enables the administrator to hide the \"Everyone except external users\" claim in the People Picker. When users share an item with \"Everyone except external users\", it is accessible to all organization members in the tenant's Azure Active Directory, but not to any users who have previously accepted invitations. The valid values are: True(default) - The Everyone except external users is displayed in People Picker. False - The Everyone except external users claim is not visible in People Picker. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShowPeoplePickerSuggestionsForGuestUsers Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SignInAccelerationDomain Specifies the home realm discovery value to be sent to Azure Active Directory (AAD) during the user sign-in process. When the organization uses a third-party identity provider, this prevents the user from seeing the Azure Active Directory Home Realm Discovery web page and ensures the user only sees their company's Identity Provider's portal. This value can also be used with Azure Active Directory Premium to customize the Azure Active Directory login page. Acceleration will not occur on site collections that are shared externally. This value should be configured with the login domain that is used by your company (that is, example@contoso.com). If your company has multiple third-party identity providers, configuring the sign-in acceleration value will break sign-in for your organization. The valid values are: \"\" (default) - Blank by default, this will also remove or clear any value that has been set. Login Domain - For example: \"contoso.com\" Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SocialBarOnSitePagesDisabled Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SpecialCharactersStateInFileFolderNames {{ Fill SpecialCharactersStateInFileFolderNames Description }} Type: SpecialCharactersState Parameter Sets: (All) Accepted values: NoPreference, Allowed, Disallowed Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StartASiteFormUrl Specifies URL of the form to load in the Start a Site dialog. The valid values are: \"\" (default) - Blank by default, this will also remove or clear any value that has been set. Full URL - Example: \"https://contoso.sharepoint.com/path/to/form\" Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UseFindPeopleInPeoplePicker Note: When set to $true, users aren't able to share with security groups or SharePoint groups. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UsePersistentCookiesForExplorerView Lets SharePoint issue a special cookie that will allow this feature to work even when \"Keep Me Signed In\" is not selected. \"Open with Explorer\" requires persisted cookies to operate correctly. When the user does not select \"Keep Me Signed in\" at the time of sign -in, \"Open with Explorer\" will fail. This special cookie expires after 30 minutes and cannot be cleared by closing the browser or signing out of SharePoint Online.To clear this cookie, the user must log out of their Windows session. The valid values are: False(default) - No special cookie is generated and the normal Office 365 sign -in length / timing applies. True - Generates a special cookie that will allow \"Open with Explorer\" to function if the \"Keep Me Signed In\" box is not checked at sign -in. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UserVoiceForFeedbackEnabled Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableAutoNewsDigest Boolean indicating if a news digest should automatically be sent to end users to inform them about news that they may have missed. On by default. For more information see https://aka.ms/autonewsdigest Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CommentsOnListItemsDisabled Disables or enables commenting functionality on list items. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CommentsOnFilesDisabled Disables or enables commenting functionality on files. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InformationBarriersSuspension Allows suspension of the information barriers future in a Microsoft 365 tenant. Setting this to $true will disable information barriers, setting this to $falsde will enable information barriers. For more information, see https://docs.microsoft.com/sharepoint/information-barriers . Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowFilesWithKeepLabelToBeDeletedSPO Allows configuration on if files located on SharePoint Online having retention labels on them blocking them from deletion ($false) or if they can be deleted which will move the file to the preservation hold library ($true) Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: $true Accept pipeline input: False Accept wildcard characters: False -AllowFilesWithKeepLabelToBeDeletedODB Allows configuration on if files located on OneDrive for Business having retention labels on them blocking them from deletion ($false) or if they can be deleted which will move the file to the preservation hold library ($true) Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: $true Accept pipeline input: False Accept wildcard characters: False -DisableAddToOneDrive Allows configuration on Add shortcut to OneDrive feature in SharePoint document libraries. If set to $true , then this feature will be disabled on all sites in the tenant. If set to $false , it will be enabled on all sites in the tenant. Type: Boolean Parameter Sets: (All) Aliases: DisableAddShortcutsToOneDrive Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsFluidEnabled Allows configuration on whether Fluid components are enabled or disabled in the tenant. If set to $true , then this feature will be enabled on all sites in the tenant. If set to $false , it will be disabled on all sites in the tenant. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisablePersonalListCreation Allows configuring whether personal lists created within the OneDrive for Business site of the user is enabled or disabled in the tenant. If set to $true , personal lists will be allowed to be created in the tenant. If set to $false , it will be disabled in the tenant. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisabledModernListTemplateIds Guids of out of the box modern list templates to hide when creating a new list Type: Guid[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableModernListTemplateIds Guids of out of the box modern liststemplates to show when creating a new list Type: Guid[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force If provided, no confirmation will be requested and the action will be performed Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTenantAppCatalogUrl.html": {
    "href": "cmdlets/Set-PnPTenantAppCatalogUrl.html",
    "title": "Set-PnPTenantAppCatalogUrl | PnP PowerShell",
    "keywords": "Set-PnPTenantAppCatalogUrl SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Sets the url of the tenant scoped app catalog SYNTAX Set-PnPTenantAppCatalogUrl -Url <String> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPTenantAppCatalogUrl -Url \"https://yourtenant.sharepoint.com/sites/appcatalog\" Sets the tenant scoped app catalog to the provided site collection url PARAMETERS -Confirm Prompts you for confirmation before running the cmdlet. Type: SwitchParameter Parameter Sets: (All) Aliases: cf Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Url The url of the site to set as the tenant scoped app catalog Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTenantCdnEnabled.html": {
    "href": "cmdlets/Set-PnPTenantCdnEnabled.html",
    "title": "Set-PnPTenantCdnEnabled | PnP PowerShell",
    "keywords": "Set-PnPTenantCdnEnabled SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Enables or disables the public or private Office 365 Content Delivery Network (CDN). SYNTAX Set-PnPTenantCdnEnabled [-NoDefaultOrigins] -Enable <Boolean> -CdnType <CdnType> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Enables or disables the public or private Office 365 Content Delivery Network (CDN) for the tenant. EXAMPLES EXAMPLE 1 Set-PnPTenantCdnEnabled -CdnType Public -Enable $true This example sets the Public CDN enabled. EXAMPLE 2 Set-PnPTenantCdnEnabled -CdnType Private -Enable $false This example disables the Private CDN for the tenant. EXAMPLE 3 Set-PnPTenantCdnEnabled -CdnType Public -Enable $true -NoDefaultOrigins This example enables the Public CDN for the tenant, but skips the provisioning of the default origins. PARAMETERS -CdnType The type of CDN to enable or disable Type: CdnType Parameter Sets: (All) Accepted values: Public, Private, Both Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Enable Specify to enable or disable Type: Boolean Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NoDefaultOrigins If specified, the default origins for the specified CDN type will not be provisioned. See Default CDN origins for information about the origins that are provisioned by default when you enable the Office 365 CDN, and the potential impact of skipping the setup of default origins. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTenantCdnPolicy.html": {
    "href": "cmdlets/Set-PnPTenantCdnPolicy.html",
    "title": "Set-PnPTenantCdnPolicy | PnP PowerShell",
    "keywords": "Set-PnPTenantCdnPolicy SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Sets the CDN Policies for the specified CDN (Public | Private). SYNTAX Set-PnPTenantCdnPolicy -CdnType <SPOTenantCdnType> -PolicyType <SPOTenantCdnPolicyType> -PolicyValue <String> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Sets the CDN Policies for the specified CDN (Public | Private). EXAMPLES EXAMPLE 1 Set-PnPTenantCdnPolicy -CdnType Public -PolicyType IncludeFileExtensions -PolicyValue \"CSS,EOT,GIF,ICO,JPEG,JPG,JS,MAP,PNG,SVG,TTF,WOFF\" This example sets the IncludeFileExtensions policy to the specified value. EXAMPLE 2 Set-PnPTenantCdnPolicy -CdnType Public -PolicyType ExcludeRestrictedSiteClassifications -PolicyValue \"Confidential,Restricted\" This example sets the ExcludeRestrictedSiteClassifications policy for the selected CdnType to a policy value of listed excluded site classifications. PARAMETERS -CdnType The type of cdn to retrieve the policies from Type: SPOTenantCdnType Parameter Sets: (All) Accepted values: Public, Private Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PolicyType The type of the policy to set Type: SPOTenantCdnPolicyType Parameter Sets: (All) Accepted values: IncludeFileExtensions, ExcludeRestrictedSiteClassifications, ExcludeIfNoScriptDisabled Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PolicyValue The value of the policy to set Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTenantSite.html": {
    "href": "cmdlets/Set-PnPTenantSite.html",
    "title": "Set-PnPTenantSite | PnP PowerShell",
    "keywords": "Set-PnPTenantSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Updates settings of a site collection SYNTAX Set Properties Set-PnPTenantSite [-Identity] <String> [-Title <String>] [-LocaleId <UInt32>] [-AllowSelfServiceUpgrade] [-Owners <String[]>] [-DenyAddAndCustomizePages] [-SharingCapability <SharingCapabilities>] [-StorageQuota <Int64>] [-StorageQuotaWarningLevel <Int64>] [-StorageQuotaReset] [-BlockDownloadLinksFileType <BlockDownloadLinksFileTypes>] [-ResourceQuota <Double>] [-ResourceQuotaWarningLevel <Double>] [-EnablePWA <Boolean>] [-DefaultLinkPermission <SharingPermissionType>] [-DefaultSharingLinkType <SharingLinkType>] [-DefaultLinkToExistingAccess <Boolean>] [-ExternalUserExpirationInDays <Int32>] [-SharingAllowedDomainList <String>] [-SharingBlockedDomainList <String>] [-ShowPeoplePickerSuggestionsForGuestUsers <Boolean>] [-AllowDownloadingOfNonWebViewableFiles] [-LimitedAccessFileType <SPOLimitedAccessFileType>] [-AllowEditing <Boolean>] [-SharingDomainRestrictionMode <SharingDomainRestrictionModes>] [-CommentsOnSitePagesDisabled] [-DisableAppViews <AppViewsPolicy>] [-DisableCompanyWideSharingLinks <CompanyWideSharingLinksPolicy>] [-DisableFlows <FlowsPolicy>] [-AnonymousLinkExpirationInDays <Int32>] [-SensitivityLabel <String>] [-RemoveLabel] [-AddInformationSegment <Guid[]>] [-RemoveInformationSegment <Guid[]>] [-OverrideTenantAnonymousLinkExpirationPolicy] [-InformationBarriersMode <InformationBarriersMode>] [-MediaTranscription <MediaTranscriptionPolicyType>] [-Wait] [-Connection <PnPConnection>] [<CommonParameters>] Set Lock State Set-PnPTenantSite [-Identity] <String> [-LockState <SiteLockState>] [-Wait] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Allows settings of a site collection to be updated EXAMPLES EXAMPLE 1 Set-PnPTenantSite -Identity \"https://contoso.sharepoint.com\" -Title \"Contoso Website\" -SharingCapability Disabled This will set the title of the site collection with the URL 'https://contoso.sharepoint.com' to 'Contoso Website' and disable sharing on this site collection. EXAMPLE 2 Set-PnPTenantSite -Identity \"https://contoso.sharepoint.com\" -Title \"Contoso Website\" -StorageWarningLevel 8000 -StorageMaximumLevel 10000 This will set the title of the site collection with the URL 'https://contoso.sharepoint.com' to 'Contoso Website', set the storage warning level to 8GB and set the storage maximum level to 10GB. EXAMPLE 3 Set-PnPTenantSite -Identity \"https://contoso.sharepoint.com/sites/sales\" -Owners \"user@contoso.onmicrosoft.com\" This will add user@contoso.onmicrosoft.com as an additional site collection owner at 'https://contoso.sharepoint.com/sites/sales'. EXAMPLE 4 Set-PnPTenantSite -Identity \"https://contoso.sharepoint.com/sites/sales\" -Owners @(\"user1@contoso.onmicrosoft.com\", \"user2@contoso.onmicrosoft.com\") This will add user1@contoso.onmicrosoft.com and user2@contoso.onmicrosoft.com as additional site collection owners at 'https://contoso.sharepoint.com/sites/sales'. EXAMPLE 5 Set-PnPTenantSite -Identity \"https://contoso.sharepoint.com/sites/sales\" -DenyAddAndCustomizePages:$false This will enable script support for the site 'https://contoso.sharepoint.com/sites/sales' PARAMETERS -AddInformationSegment This parameter allows you to add a segment to a SharePoint site. This parameter is only applicable for tenants who have enabled Microsoft 365 Information barriers capability. Please read https://docs.microsoft.com/sharepoint/information-barriers documentation to understand Information barriers in SharePoint Online. Type: Guid[] Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowSelfServiceUpgrade Specifies if the site administrator can upgrade the site collection Type: SwitchParameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowEditing Prevents users from editing Office files in the browser and copying and pasting Office file contents out of the browser window. Type: Boolean Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AnonymousLinkExpirationInDays Specifies all anonymous/anyone links that have been created (or will be created) will expire after the set number of days. Only applies if OverrideTenantAnonymousLinkExpirationPolicy is set to true. To remove the expiration requirement, set the value to zero (0). Type: Int32 Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AllowDownloadOfNonViewableFiles Specifies if non web viewable files can be downloaded. Type: SwitchParameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -BlockDownloadLinksFileType The valid values are: WebPreviewableFiles ServerRenderedFilesOnly Note: ServerRendered (Office Only) and WebPreviewable (All supported files). The site value is compared with the tenant level setting and the stricter one wins. For example, if the tenant is set to ServerRenderedFilesOnly then that will be used even if the site is set to WebPreviewableFiles. Type: BlockDownloadLinksFileTypes Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CommentsOnSitePagesDisabled Specifies if comments on site pages are enabled Type: SwitchParameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultLinkPermission Specifies the default link permission for the site collection. None - Respect the organization default link permission. View - Sets the default link permission for the site to \"view\" permissions. Edit - Sets the default link permission for the site to \"edit\" permissions Type: SharingPermissionType Parameter Sets: Set Properties Accepted values: None, View, Edit Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultSharingLinkType Specifies the default link type for the site collection. None - Respect the organization default sharing link type. AnonymousAccess - Sets the default sharing link for this site to an Anonymous Access or Anyone link. Internal - Sets the default sharing link for this site to the \"organization\" link or company shareable link. Direct - Sets the default sharing link for this site to the \"Specific people\" link Type: SharingLinkType Parameter Sets: Set Properties Accepted values: None, Direct, Internal, AnonymousAccess Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultLinkToExistingAccess When set to $true, the DefaultSharingLinkType will be overriden and the default sharing link will be All People with Existing Access link (which does not modify permissions). When set to $false (the default), the default sharing link type is controlled by the DefaultSharingLinkType parameter Type: Boolean Parameter Sets: Set Properties Required: False Position: Named Default value: False Accept pipeline input: False Accept wildcard characters: False -DenyAddAndCustomizePages Determines whether the Add And Customize Pages right is denied in the site collection. For more information about permission levels, see User permissions and permission levels in SharePoint. Type: SwitchParameter Parameter Sets: Set Properties Aliases: NoScriptSite Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableAppViews Determines whether the App Views feature is disabled in the site collection. Type: AppViewsPolicy Parameter Sets: Set Properties Accepted values: Unknown, Disabled, NotDisabled Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableCompanyWideSharingLinks Determines whether company-wide sharing links are disabled in collection. Type: CompanyWideSharingLinksPolicy Parameter Sets: Set Properties Accepted values: Unknown, Disabled, NotDisabled Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableFlows Determines whether flows are disabled in the site collection. Type: FlowsPolicy Parameter Sets: Set Properties Accepted values: Unknown, Disabled, NotDisabled Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExternalUserExpirationInDays Specifies number of days the external users remain active on the site. Type: Int32 Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnablePWA Determines whether site can include Project Web App. For more information about Project Web App, see Plan SharePoint groups in Project Server. Type: Boolean Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LimitedAccessFileType The following parameters can be used with -ConditionalAccessPolicy AllowLimitedAccess for both the organization-wide setting and the site-level setting. OfficeOnlineFilesOnly: Allows users to preview only Office files in the browser. This option increases security but may be a barrier to user productivity. WebPreviewableFiles (default): Allows users to preview Office files and other file types (such as PDF files and images) in the browser. Note that the contents of file types other than Office files are handled in the browser. This option optimizes for user productivity but offers less security for files that aren't Office files. OtherFiles: Allows users to download files that can't be previewed, such as .zip and .exe. This option offers less security. Type: SPOLimitedAccessFileType Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LocaleId Specifies the language of this site collection. For more information, see Locale IDs supported by SharePoint at https://github.com/pnp/PnP-PowerShell/wiki/Supported-LCIDs-by-SharePoint . To get the list of supported languages on a SharePoint environment use: (Get-PnPWeb -Includes RegionalSettings.InstalledLanguages).RegionalSettings.InstalledLanguages. Type: UInt32 Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LockState Sets the lockstate of a site Type: SiteLockState Parameter Sets: Set Lock State Accepted values: Unlock, NoAccess, ReadOnly Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -OverrideTenantAnonymousLinkExpirationPolicy Specifies whether to use company-wide or a site collection level anonymous links expiration policy. Set it to true to get advantage of AnonymousLinkExpirationInDays. Type: SwitchParameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owners Specifies owner(s) to add as site collection administrators. They will be added as additional site collection administrators. Existing administrators will stay. Can be both users and groups. Type: System.Collections.Generic.List`1[System.String] Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SensitivityLabel Set the sensitivity label. Type: String Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveLabel Remove the assigned sensitivity label of a site. Type: SwitchParameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SharingAllowedDomainList Specifies a list of email domains that is allowed for sharing with the external collaborators. Use the space character as the delimiter for entering multiple values. For example, \"contoso.com fabrikam.com\". Effective when SharingDomainRestrictionMode is set to AllowList. Type: String Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SharingBlockedDomainList Specifies a list of email domains that is blocked for sharing with the external collaborators. Use the space character as the delimiter for entering multiple values. For example, \"contoso.com fabrikam.com\". Effective when SharingDomainRestrictionMode is set to BlockList. Type: String Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SharingCapability Specifies what the sharing capabilities are for the site. Possible values: Disabled, ExternalUserSharingOnly, ExternalUserAndGuestSharing, ExistingExternalUserSharingOnly Type: SharingCapabilities Parameter Sets: Set Properties Aliases: Sharing Accepted values: Disabled, ExternalUserSharingOnly, ExternalUserAndGuestSharing, ExistingExternalUserSharingOnly Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SharingDomainRestrictionMode Specifies the external sharing mode for domains. Type: SharingDomainRestrictionModes Parameter Sets: Set Properties Accepted values: None, AllowList, BlockList Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ShowPeoplePickerSuggestionsForGuestUsers To enable the option to search for existing guest users at Site Collection Level, set this parameter to $true. Type: Boolean Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StorageQuota Specifies the storage quota for this site collection in megabytes. This value must not exceed the company's available quota. Type: Int64 Parameter Sets: Set Properties Aliases: StorageMaximumLevel Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StorageQuotaWarningLevel Specifies the warning level for the storage quota in megabytes. This value must not exceed the values set for the StorageQuota parameter. Type: Int64 Parameter Sets: Set Properties Aliases: StorageQuotaMaximumLevel Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StorageQuotaReset Resets the OneDrive for Business storage quota to the tenant's new default storage space Type: SwitchParameter Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveInformationSegment This parameter allows you to remove a segment from a SharePoint site. This parameter is only applicable for tenants who have enabled Microsoft 365 Information barriers capability. Please read https://docs.microsoft.com/sharepoint/information-barriers documentation to understand Information barriers with SharePoint Online. Type: Guid[] Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ResourceQuota Specifies the resource quota in megabytes of the site collection. The default value is 0. Type: Double Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ResourceQuotaWarningLevel Specifies the warning level in megabytes of the site collection to warn the site collection administrator that the site is approaching the resource quota. Type: Double Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -InformationBarriersMode Specifies the information barrier mode which helps strengthen access, sharing, and membership of a site based on its information barrier mode and segments associated with the site. Expected values are Open , OwnerModerated , Implicit and Explicit . For more information, see https://docs.microsoft.com/sharepoint/information-barriers#information-barriers-modes-and-sharepoint-sites Type: InformationBarriersMode Parameter Sets: Set Properties Accepted values: Open, OwnerModerated, Implicit, Explicit Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Specifies the title of the site Type: String Parameter Sets: Set Properties Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the URL of the site Type: String Parameter Sets: (All) Aliases: Url Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -MediaTranscription When the feature is enabled, videos can have transcripts generated on demand or generated automatically in certain scenarios. This is the default because the policy is default on. If a video owner decides they don’t want the transcript, they can always hide or delete it from that video. Possible values: Enabled, Disabled Type: MediaTranscriptionPolicyType Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Wait Wait for the operation to complete Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTenantSyncClientRestriction.html": {
    "href": "cmdlets/Set-PnPTenantSyncClientRestriction.html",
    "title": "Set-PnPTenantSyncClientRestriction | PnP PowerShell",
    "keywords": "Set-PnPTenantSyncClientRestriction SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Sets organization-level sync client restriction properties SYNTAX Set-PnPTenantSyncClientRestriction [-BlockMacSync] [-DisableReportProblemDialog] [-DomainGuids <System.Collections.Generic.List`1[System.Guid]>] [-Enable] [-ExcludedFileExtensions <System.Collections.Generic.List`1[System.String]>] [-GrooveBlockOption <GrooveBlockOption>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Sets organization-level sync client restriction properties such as BlockMacSync, OptOutOfGroveBlock, and DisableReportProblemDialog. You must have the SharePoint Online admin or Global admin role to run the cmdlet. EXAMPLES EXAMPLE 1 Set-PnPTenantSyncClientRestriction -BlockMacSync:$false This example blocks access to Mac sync clients for OneDrive file synchronization EXAMPLE 2 Set-PnPTenantSyncClientRestriction -ExcludedFileExtensions \"pptx;docx;xlsx\" This example blocks syncing of PowerPoint, Word, and Excel file types using the new sync client (OneDrive.exe). PARAMETERS -BlockMacSync Block Mac sync clients-- the Beta version and the new sync client (OneDrive.exe). The values for this parameter are $true and $false. The default value is $false. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisableReportProblemDialog Specifies if the Report Problem Dialog is disabled or not. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DomainGuids Sets the domain GUID to add to the safe recipient list. Requires a minimum of 1 domain GUID. The maximum number of domain GUIDs allowed are 125. I.e. 634c71f6-fa83-429c-b77b-0dba3cb70b93,4fbc735f-0ac2-48ba-b035-b1ae3a480887. Type: System.Collections.Generic.List`1[System.Guid] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Enable Enables the feature to block sync originating from domains that are not present in the safe recipients list. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExcludedFileExtensions Blocks certain file types from syncing with the new sync client (OneDrive.exe). Provide as one string separating the extensions using a semicolon (;). I.e. \"docx;pptx\" Type: System.Collections.Generic.List`1[System.String] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -GrooveBlockOption Controls whether or not a tenant's users can sync OneDrive for Business libraries with the old OneDrive for Business sync client. The valid values are OptOut, HardOptin, and SoftOptin. GrooveBlockOption is planned to be deprecated. Please refrain from using the parameter. Type: GrooveBlockOption Parameter Sets: (All) Accepted values: OptOut, HardOptin, SoftOptin Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTerm.html": {
    "href": "cmdlets/Set-PnPTerm.html",
    "title": "Set-PnPTerm | PnP PowerShell",
    "keywords": "Set-PnPTerm SYNOPSIS Updates a term SYNTAX By Term Id Set-PnPTerm -Identity <Guid> [-Name <String>] [-Lcid <Int32>] [-Description <String>] [-CustomProperties <Hashtable>] [-LocalCustomProperties <Hashtable>] [-DeleteAllCustomProperties] [-DeleteAllLocalCustomProperties] [-Deprecated <bool>] [-TermStore <TaxonomyTermStorePipeBind>] [<CommonParameters>] By Term Name Set-PnPTerm -Identity <String> [-Name <String>] [-Lcid <Int32>] [-Description <String>] [-CustomProperties <Hashtable>] [-LocalCustomProperties <Hashtable>] [-DeleteAllCustomProperties] [-DeleteAllLocalCustomProperties] [-Deprecated <bool>] -TermSet <TaxonomyTermSetPipeBind> -TermGroup <TaxonomyTermGroupPipeBind> [-TermStore <TaxonomyTermStorePipeBind>] [<CommonParameters>] DESCRIPTION This cmdlet allows you to update an existing term. EXAMPLES Example 1 Set-PnPTerm -Identity 3d9e60e8-d89c-4cd4-af61-a010cf93b380 -Name \"New Name\" Replaces the name of an existing term. Example 2 Set-PnPTerm -Identity \"Marketing\" -TermSet \"Departments\" -TermGroup \"Corporate\" -Name \"Finance\" -CustomProperties @{\"IsCorporate\"=\"True\"} Adds a new custom property to an existing term. Example 3 Set-PnPTerm -Identity \"Marketing\" -TermSet \"Departments\" -TermGroup \"Corporate\" -Name \"Finance\" -DeleteAllCustomProperties -CustomProperties @{\"IsCorporate\"=\"True\"} Removes all custom properties and adds a new custom property to an existing term. Example 4 Set-TermSet -Identity \"Marketing\" -TermSet \"Departments\" -TermGroup \"Corporate\" -Deprecated $true Marks an existing term as deprecated, hiding it from users. PARAMETERS -CustomProperties Sets custom properties. Type: Hashtable Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DeleteAllCustomProperties Removes all custom properties Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DeleteAllLocalCustomProperties Removes all local custom properties Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Sets the description for a term. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Deprecated Sets a term as deprecated or not. Type: boolean Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Identity of term to update. Either a name or a GUID. Type: TaxonomyTermPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Lcid Optional language code to use when setting the description. Defaults to the default term store language. Type: Int32 Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LocalCustomProperties Sets local custom properties Type: Hashtable Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The new name for the term. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermGroup The term group to find the term in. Type: TaxonomyTermGroupPipeBind Parameter Sets: By Term Name Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermSet The termset to find the term in. Type: TaxonomyTermSetPipeBind Parameter Sets: By Term Name Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermStore The termstore to find the term in. If not specified the default term store is used. Type: TaxonomyTermStorePipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTermGroup.html": {
    "href": "cmdlets/Set-PnPTermGroup.html",
    "title": "Set-PnPTermGroup | PnP PowerShell",
    "keywords": "Set-PnPTermGroup SYNOPSIS Updates an existing term group SYNTAX Set-PnPTermGroup -Identity <TaxonomyTermGroupPipeBind> [-Name <String>] [-Description <String>] [-TermStore <TaxonomyTermStorePipeBind>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION The cmdles allows you to update an existing term group. EXAMPLES Example 1 Set-PnPTermGroup -Identity \"Departments\" -Name \"Company Units\" Renames the Departments termgroup to \"Company Units\" PARAMETERS -Description Optional description of the term group Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The term group to update. Either name or a GUID. Type: TaxonomyTermGroupPipeBind Parameter Sets: (All) Aliases: Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Name The new name for the term group. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermStore The termstore to use. If not specified the default term store is used. Type: TaxonomyTermStorePipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTermSet.html": {
    "href": "cmdlets/Set-PnPTermSet.html",
    "title": "Set-PnPTermSet | PnP PowerShell",
    "keywords": "Set-PnPTermSet SYNOPSIS Updates an existing TermSet SYNTAX Set-PnPTermSet -Identity <TaxonomyTermSetPipeBind> [-TermGroup] <TaxonomyTermGroupPipeBind> [-TermStore <TaxonomyTermStorePipeBind>] [-Name <String>] [-Description <String>] [-Owner <String>] [-Contact <String>] [-CustomProperties <Hashtable>] [-StakeholderToAdd <String>] [-StakeholderToDelete <String>] [-IsAvailableForTagging <Boolean>] [-IsOpenForTermCreation <Boolean>] [-UseForSiteNavigation <Boolean>] [-UseForFacetedNavigation <Boolean>] [-SetTargetPageForTerms <String>] [-RemoveTargetPageforTerms] [-SetCatalogItemPageForCategories <String>] [-RemoveCatalogItemPageForCategories] [<CommonParameters>] DESCRIPTION This cmdlet allows you to update an existing termset. EXAMPLES Example 1 Set-PnPTermSet -Identity \"Departments\" -TermGroup \"Corporate\" -Name \"Business Units\" This changes the name of a the \"Departments\" termset to \"Business Units\" PARAMETERS -Contact The contact information Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CustomProperties Any custom properties to set for the term set. e.g. -CustomProperties @{\"propA\"=\"valueA\"} Type: Hashtable Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The description of the term set Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The term set to change Type: TaxonomyTermSetPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsAvailableForTagging Sets the term set as available for tagging. Type: Boolean Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IsOpenForTermCreation Opens the term set for creation of terms by users. Type: Boolean Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Name The new name for the term set Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Owner Sets the owner of the term set. Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveCatalogItemPageForCategories Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveTargetPageforTerms {{ Fill RemoveTargetPageforTerms Description }} Type: SwitchParameter Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SetCatalogItemPageForCategories Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SetTargetPageForTerms Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StakeholderToAdd Adds a new stake holder Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StakeholderToDelete Removes a stake holder Type: String Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TermGroup The term group to find the term set in. Type: TaxonomyTermGroupPipeBind Parameter Sets: (All) Aliases: Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TermStore The term store to use. If not specified the default term store is used. Type: TaxonomyTermStorePipeBind Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UseForFacetedNavigation Type: Boolean Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UseForSiteNavigation Type: Boolean Parameter Sets: (All) Aliases: Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTheme.html": {
    "href": "cmdlets/Set-PnPTheme.html",
    "title": "Set-PnPTheme | PnP PowerShell",
    "keywords": "Set-PnPTheme SYNOPSIS Sets the theme of the current web. SYNTAX Set-PnPTheme [-ColorPaletteUrl <String>] [-FontSchemeUrl <String>] [-BackgroundImageUrl <String>] [-ResetSubwebsToInherit] [-UpdateRootWebOnly] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Sets the theme of the current web, if any of the attributes is not set, that value will be set to null EXAMPLES EXAMPLE 1 Set-PnPTheme Removes the current theme and resets it to the default. EXAMPLE 2 Set-PnPTheme -ColorPaletteUrl _catalogs/theme/15/company.spcolor EXAMPLE 3 Set-PnPTheme -ColorPaletteUrl _catalogs/theme/15/company.spcolor -BackgroundImageUrl 'style library/background.png' EXAMPLE 4 Set-PnPTheme -ColorPaletteUrl _catalogs/theme/15/company.spcolor -BackgroundImageUrl 'style library/background.png' -ResetSubwebsToInherit Sets the theme to the web, and updates all subwebs to inherit the theme from this web. PARAMETERS -BackgroundImageUrl Specifies the Background Image Url based on the site or server relative url Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ColorPaletteUrl Specifies the Color Palette Url based on the site or server relative url Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -FontSchemeUrl Specifies the Font Scheme Url based on the site or server relative url Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ResetSubwebsToInherit Resets subwebs to inherit the theme from the rootweb Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UpdateRootWebOnly Updates only the rootweb, even if subwebs are set to inherit the theme. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPTraceLog.html": {
    "href": "cmdlets/Set-PnPTraceLog.html",
    "title": "Set-PnPTraceLog | PnP PowerShell",
    "keywords": "Set-PnPTraceLog SYNOPSIS Turn log tracing on or off SYNTAX On Set-PnPTraceLog [-On] [-LogFile <String>] [-WriteToConsole] [-Level <LogLevel>] [-Delimiter <String>] [-IndentSize <Int32>] [-AutoFlush <Boolean>] [<CommonParameters>] Off Set-PnPTraceLog [-Off] [<CommonParameters>] DESCRIPTION Defines if tracing should be turned on. PnP Core, which is the foundation of these cmdlets, uses the standard Trace functionality of .NET. With this cmdlet you can turn capturing of this trace to a log file on or off. Notice that basically only the Provisioning Engine writes to the tracelog which means that cmdlets related to the engine will produce output. EXAMPLES EXAMPLE 1 Set-PnPTraceLog -On -LogFile traceoutput.txt This turns on trace logging to the file 'traceoutput.txt' and will capture events of at least 'Information' level. EXAMPLE 2 Set-PnPTraceLog -On -LogFile traceoutput.txt -Level Debug This turns on trace logging to the file 'traceoutput.txt' and will capture debug events. EXAMPLE 3 Set-PnPTraceLog -On -LogFile traceoutput.txt -Level Debug -Delimiter \",\" This turns on trace logging to the file 'traceoutput.txt' and will write the entries as comma separated. Debug events are captured. EXAMPLE 4 Set-PnPTraceLog -Off This turns off trace logging. It will flush any remaining messages to the log file. PARAMETERS -AutoFlush Auto flush the trace log. Defaults to true. Type: Boolean Parameter Sets: On Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Delimiter If specified the trace log entries will be delimited with this value. Type: String Parameter Sets: On Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IndentSize Indents in the tracelog will be with this amount of characters. Defaults to 4. Type: Int32 Parameter Sets: On Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Level The level of events to capture. Possible values are 'Debug', 'Error', 'Warning', 'Information'. Defaults to 'Information'. Type: LogLevel Parameter Sets: On Accepted values: Debug, Error, Warning, Information Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -LogFile The path and filename of the file to write the trace log to. Type: String Parameter Sets: On Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Off Turn off tracing to log file. Type: SwitchParameter Parameter Sets: Off Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -On Turn on tracing to log file Type: SwitchParameter Parameter Sets: On Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WriteToConsole Turn on console trace output. Type: SwitchParameter Parameter Sets: On Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPUserOneDriveQuota.html": {
    "href": "cmdlets/Set-PnPUserOneDriveQuota.html",
    "title": "Set-PnPUserOneDriveQuota | PnP PowerShell",
    "keywords": "Set-PnPUserOneDriveQuota SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Sets the quota on the OneDrive for Business site for a specific user SYNTAX Set-PnPUserOneDriveQuota [-Account] <String> [-Quota] <Int64> [-QuotaWarning] <Int64> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This command allows you to set the quota on the OneDrive for Business site of a specific user. You must connect to the tenant admin website (https://: -admin.sharepoint.com) with Connect-PnPOnline in order to use this cmdlet. EXAMPLES EXAMPLE 1 Set-PnPUserOneDriveQuota -Account 'user@domain.com' -Quota 5368709120 -QuotaWarning 4831838208 Sets the quota on the OneDrive for Business site for the specified user to 5GB (5368709120 bytes) and sets a warning to be shown at 4.5 GB (4831838208) PARAMETERS -Account The account of the user, formatted either as a login name, or as a claims identity, e.g. i:0#.f|membership|user@domain.com Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Quota The quota to set on the OneDrive for Business site of the user, in bytes Type: Int64 Parameter Sets: (All) Required: True Position: 1 Default value: None Accept pipeline input: False Accept wildcard characters: False -QuotaWarning The quota to set on the OneDrive for Business site of the user when to start showing warnings about the drive nearing being full, in bytes Type: Int64 Parameter Sets: (All) Required: True Position: 2 Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPUserProfileProperty.html": {
    "href": "cmdlets/Set-PnPUserProfileProperty.html",
    "title": "Set-PnPUserProfileProperty | PnP PowerShell",
    "keywords": "Set-PnPUserProfileProperty SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Office365 only: Uses the tenant API to retrieve site information. You must connect to the tenant admin website (https://: -admin.sharepoint.com) with Connect-PnPOnline in order to use this command. SYNTAX Single Set-PnPUserProfileProperty -Account <String> -PropertyName <String> -Value <String> [-Connection <PnPConnection>] [<CommonParameters>] Multi Set-PnPUserProfileProperty -Account <String> -PropertyName <String> -Values <String[]> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Requires a connection to a SharePoint Tenant Admin site. EXAMPLES EXAMPLE 1 Set-PnPUserProfileProperty -Account 'user@domain.com' -Property 'SPS-Location' -Value 'Stockholm' Sets the SPS-Location property for the user as specified by the Account parameter EXAMPLE 2 Set-PnPUserProfileProperty -Account 'user@domain.com' -Property 'MyProperty' -Values 'Value 1','Value 2' Sets the MyProperty multi value property for the user as specified by the Account parameter PARAMETERS -Account The account of the user, formatted either as a login name, or as a claims identity, e.g. i:0#.f|membership|user@domain.com Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PropertyName The property to set, for instance SPS-Skills or SPS-Location Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Value The value to set in the case of a single value property Type: String Parameter Sets: Single Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Values The values set in the case of a multi value property, e.g. \"Value 1\",\"Value 2\" Type: String[] Parameter Sets: Multi Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPView.html": {
    "href": "cmdlets/Set-PnPView.html",
    "title": "Set-PnPView | PnP PowerShell",
    "keywords": "Set-PnPView SYNOPSIS Change view properties SYNTAX Set-PnPView [[-List] <ListPipeBind>] -Identity <ViewPipeBind> [-Values <Hashtable>] [-Fields <String[]>] [-Aggregations <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Sets one or more properties of an existing view, see here https://docs.microsoft.com/previous-versions/office/sharepoint-server/ee543328(v=office.15) for the list of view properties. EXAMPLES EXAMPLE 1 Set-PnPView -List \"Tasks\" -Identity \"All Tasks\" -Values @{JSLink=\"hierarchytaskslist.js|customrendering.js\";Title=\"My view\"} Updates the \"All Tasks\" view on list \"Tasks\" to use hierarchytaskslist.js and customrendering.js for the JSLink and changes the title of the view to \"My view\" EXAMPLE 2 Get-PnPList -Identity \"Tasks\" | Get-PnPView | Set-PnPView -Values @{JSLink=\"hierarchytaskslist.js|customrendering.js\"} Updates all views on list \"Tasks\" to use hierarchytaskslist.js and customrendering.js for the JSLink EXAMPLE 3 Set-PnPView -List \"Documents\" -Identity \"Corporate Documents\" -Fields \"Title\",\"Created\" Updates the Corporate Documents view on the Documents library to have two fields EXAMPLE 4 Set-PnPView -List \"Documents\" -Identity \"Corporate Documents\" -Fields \"Title\",\"Created\" -Aggregations \"<FieldRef Name='Title' Type='COUNT'/>\" Updates the Corporate Documents view on the Documents library and sets the totals (aggregations) to Count on the Title field PARAMETERS -Aggregations A valid XML fragment containing one or more Aggregations Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Fields An array of fields to use in the view. Notice that specifying this value will remove the existing fields Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Id, Title or instance of the view Type: ViewPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The Id, Title or Url of the list Type: ListPipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: False Accept wildcard characters: False -Values Hashtable of properties to update on the view. Use the syntax @{property1=\"value\";property2=\"value\"}. Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPWeb.html": {
    "href": "cmdlets/Set-PnPWeb.html",
    "title": "Set-PnPWeb | PnP PowerShell",
    "keywords": "Set-PnPWeb SYNOPSIS Sets properties on a web SYNTAX Set-PnPWeb [-SiteLogoUrl <String>] [-AlternateCssUrl <String>] [-Title <String>] [-Description <String>] [-MasterUrl <String>] [-CustomMasterUrl <String>] [-QuickLaunchEnabled] [-MembersCanShare] [-NoCrawl] [-HeaderLayout <HeaderLayoutType>] [-HeaderEmphasis <SPVariantThemeType>] [-NavAudienceTargetingEnabled] [-MegaMenuEnabled] [-DisablePowerAutomate] [-CommentsOnSitePagesDisabled] [-HideTitleInHeader] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Allows setting various properties on a web EXAMPLES EXAMPLE 1 Set-PnPWeb -CommentsOnSitePagesDisabled:$true Disables the page comments to be shown below each page in the current web by default EXAMPLE 2 Set-PnPWeb -QuickLaunchEnabled:$false Hides the quick launch from being shown in the current web EXAMPLE 3 Set-PnPWeb -HeaderEmphasis Strong -HeaderLayout Compact Sets the header style in the current web. EXAMPLE 4 Set-PnPWeb -NoCrawl:$true Prevents the current web from being returned in search results PARAMETERS -AlternateCssUrl Sets the AlternateCssUrl of the web. Only works for classic pages. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CommentsOnSitePagesDisabled Defines if comments on modern site pages should be enabled by default ($false) or they should be hidden ($true) Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CustomMasterUrl Sets the CustomMasterUrl of the web. Only works for classic pages. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description Sets the description of the web Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DisablePowerAutomate Defines if Power Automate should be available on lists and document libraries ($false) or if the option should be hidden ($true) Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HeaderEmphasis Defines the tone of color used for the bar shown at the top of the site with the site name and logo Type: SPVariantThemeType Parameter Sets: (All) Accepted values: None, Neutral, Soft, Strong Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HeaderLayout Defines the layout type of the site header Type: HeaderLayoutType Parameter Sets: (All) Accepted values: None, Standard, Compact, Minimal, Extended Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MasterUrl Sets the MasterUrl of the web. Only works for classic pages. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MegaMenuEnabled Defines if the navigation menu should be shown as the mega menu ($true) or the smaller sized menu ($false) Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MembersCanShare Indicates if members of this site can share the site and its content with others ($true) or only owners can do this ($false) Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NavAudienceTargetingEnabled Defines if the navigation menu on a modern site should be enabled for modern audience targeting ($true) or not ($false) Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NoCrawl Indicates if this site should not be returned in search results ($true) or if it should be ($false) Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -QuickLaunchEnabled Defines if the quick launch menu on the left side of modern Team Sites should be shown ($true) or hidden ($false) Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteLogoUrl Sets the logo of the web to the current url. If you want to set the logo to a modern team site, use Set-PnPSite -LogoFilePath. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title Sets the title of the web Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HideTitleInHeader Toggle the title visibility in the header. Set -HideTitleInHeader:$false to show the header Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPWebHeader.html": {
    "href": "cmdlets/Set-PnPWebHeader.html",
    "title": "Set-PnPWebHeader | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Set-PnPWebHeader SYNOPSIS Allows configuration of the \"Change the look\" Header SYNTAX Set-PnPWebHeader [-SiteLogoUrl <string>] [-HeaderLayout <HeaderLayoutType>] [-HeaderEmphasis <SPVariantThemeType>] [-HideTitleInHeader] [-HeaderBackgroundImageUrl <string>] [-HeaderBackgroundImageFocalX <double>] [-HeaderBackgroundImageFocalY <double>] [-LogoAlignment <LogoAlignment>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Through this cmdlet the various options offered through \"Change the look\" Header can be configured. EXAMPLES EXAMPLE 1 Set-PnPWebHeader -HeaderBackgroundImageUrl \"/sites/hrdepartment/siteassets/background.png\" -HeaderLayout Extended Sets the background image of the heading of the site to the provided image EXAMPLE 2 Set-PnPWebHeader -HeaderEmphasis Strong Sets the site to use a strong colored bar at the top of the site EXAMPLE 3 Set-PnPWebHeader -LogoAlignment Middle Sets the site title and logo to be displayed in the middle of the screen PARAMETERS -LogoAlignment Allows configuring the site title and logo to be shown on the left (default), in the middle or on the right. Type: LogoAlignment Parameter Sets: (All) Accepted values: Left, Middle, Right Required: False Position: Named Default value: Left Accept pipeline input: False Accept wildcard characters: False -HeaderBackgroundImageUrl Allows providing a server relative URL to an image that should be used as the background of the header of the site, i.e. /sites/hrdepartment/siteassets/background.png. HeaderLayout must be set to Extended for the image to show up. Provide \"\" or $null to remove the current background image. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HeaderBackgroundImageFocalX When having HeaderLayout set to Extended and when providing a background image to show in the header through HeaderBackgroundImageUrl, this property allows for defining the X coordinate of the image how it should be shown. Type: Double Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HeaderBackgroundImageFocalY When having HeaderLayout set to Extended and when providing a background image to show in the header through HeaderBackgroundImageUrl, this property allows for defining the Y coordinate of the image how it should be shown. Type: Double Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HeaderEmphasis Defines the tone of color used for the bar at shown at the top of the site under the site name and logo Type: SPVariantThemeType Parameter Sets: (All) Accepted values: None, Neutral, Soft, Strong Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HeaderLayout Defines how the header of the site should be layed out Type: HeaderLayoutType Parameter Sets: (All) Accepted values: None, Standard, Compact, Minimal, Extended Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SiteLogoUrl Sets the logo of the site shown at the top left to the provided server relative url, i.e. /sites/hrdepartment/siteassets/logo.png. Provide \"\" or $null to remove the logo. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HideTitleInHeader Toggle the title visibility in the header. Set -HideTitleInHeader:$false to show the header Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPWebhookSubscription.html": {
    "href": "cmdlets/Set-PnPWebhookSubscription.html",
    "title": "Set-PnPWebhookSubscription | PnP PowerShell",
    "keywords": "Set-PnPWebhookSubscription SYNOPSIS Updates a Webhook subscription SYNTAX Set-PnPWebhookSubscription [-Subscription] <WebhookSubscriptionPipeBind> [-List <ListPipeBind>] [-NotificationUrl <String>] [-ExpirationDate <DateTime>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPWebhookSubscription -List MyList -Subscription ea1533a8-ff03-415b-a7b6-517ee50db8b6 -NotificationUrl https://my-func.azurewebsites.net/webhook Updates an existing Webhook subscription with the specified id on the list MyList with a new Notification Url EXAMPLE 2 Set-PnPWebhookSubscription -List MyList -Subscription ea1533a8-ff03-415b-a7b6-517ee50db8b6 -NotificationUrl https://my-func.azurewebsites.net/webhook -ExpirationDate \"2017-09-01\" Updates an existing Webhook subscription with the specified id on the list MyList with a new Notification Url and a new expiration date EXAMPLE 3 $subscriptions = Get-PnPWebhookSubscriptions -List MyList $updated = $subscriptions[0] $updated.ExpirationDate = \"2017-10-01\" Set-PnPWebhookSubscription -List MyList -Subscription $updated Updates the Webhook subscription from the list MyList with a modified subscription object. Note: The date will be converted to Universal Time PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ExpirationDate The date at which the Webhook subscription will expire. (Default: 6 months from today) Type: DateTime Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -List The list object or name from which the Webhook subscription will be modified Type: ListPipeBind Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -NotificationUrl The URL of the Webhook endpoint that will be notified of the change Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Subscription The identity of the Webhook subscription to update Type: WebhookSubscriptionPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPWebPartProperty.html": {
    "href": "cmdlets/Set-PnPWebPartProperty.html",
    "title": "Set-PnPWebPartProperty | PnP PowerShell",
    "keywords": "Set-PnPWebPartProperty SYNOPSIS Sets a web part property SYNTAX Set-PnPWebPartProperty -ServerRelativePageUrl <String> -Identity <Guid> -Key <String> -Value <PSObject> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Set-PnPWebPartProperty -ServerRelativePageUrl /sites/demo/sitepages/home.aspx -Identity ccd2c98a-c9ae-483b-ae72-19992d583914 -Key \"Title\" -Value \"New Title\" Sets the title property of the web part. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Guid of the web part Type: Guid Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Key Name of a single property to be set Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativePageUrl Full server relative url of the web part page, e.g. /sites/demo/sitepages/home.aspx Type: String Parameter Sets: (All) Aliases: PageUrl Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Value Value of the property to be set Type: PSObject Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPWebPermission.html": {
    "href": "cmdlets/Set-PnPWebPermission.html",
    "title": "Set-PnPWebPermission | PnP PowerShell",
    "keywords": "Set-PnPWebPermission SYNOPSIS Sets a web permissions SYNTAX Set-PnPWebPermission -Group <GroupPipeBind> [-Identity <WebPipeBind>] [-AddRole <String[]>] [-RemoveRole <String[]>] Set-PnPWebPermission -User <String> [-Identity <WebPipeBind>] [-AddRole <String[]>] [-RemoveRole <String[]>] DESCRIPTION This cmdlet adds permissions to a user or a group or removes permissions from a user or a group. EXAMPLES EXAMPLE 1 Set-PnPWebPermission -User \"user@contoso.com\" -AddRole \"Contribute\" Adds the \"Contribute\" permission role to the specified user in the current web. EXAMPLE 2 Set-PnPWebPermission -Group \"Project Managers\" -AddRole \"Contribute\" Adds the \"Contribute\" permission role to the \"Project Managers\" group in the current web. EXAMPLE 3 Set-PnPWebPermission -Identity projectA -User \"user@contoso.com\" -AddRole \"Contribute\" Adds the \"Contribute\" permission role to the user \"user@contoso.com\" in the subweb of the current web with site relative url \"projectA\" EXAMPLE 4 Set-PnPWebPermission -User \"user@contoso.com\" -AddRole \"Custom Role 1\",\"Custom Role 2\" Adds the specified permission roles to the user \"user@contoso.com\" in the current web PARAMETERS -User The name of the user. Type: String Parameter Sets: Set user permissions Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Group The name of the group. Type: String Parameter Sets: Set group permissions Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -AddRole The name of the permission level to add to the specified user or group. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RemoveRole The name of the permission level to remove from the specified user or group. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The guid or site relative url of the web to use Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPWebTheme.html": {
    "href": "cmdlets/Set-PnPWebTheme.html",
    "title": "Set-PnPWebTheme | PnP PowerShell",
    "keywords": "Set-PnPWebTheme SYNOPSIS Sets the theme of the current web. SYNTAX Set-PnPWebTheme [[-Theme] <ThemePipeBind>] [-WebUrl <String>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION Sets the theme of the current web. * Requires SharePoint Online Administrator Rights * EXAMPLES EXAMPLE 1 Set-PnPWebTheme -Theme MyTheme Sets the theme named \"MyTheme\" to the current web EXAMPLE 2 Get-PnPTenantTheme -Name \"MyTheme\" | Set-PnPWebTheme Sets the theme named \"MyTheme\" to the current web EXAMPLE 3 Set-PnPWebTheme -Theme \"MyCompanyTheme\" -WebUrl https://contoso.sharepoint.com/sites/MyWeb Sets the theme named \"MyCompanyTheme\" to MyWeb PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Theme Specifies the Color Palette Url based on the site or server relative url Type: ThemePipeBind Parameter Sets: (All) Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -WebUrl The URL of the web to apply the theme to. If not specified it will default to the current web based upon the URL specified with Connect-PnPOnline. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Set-PnPWikiPageContent.html": {
    "href": "cmdlets/Set-PnPWikiPageContent.html",
    "title": "Set-PnPWikiPageContent | PnP PowerShell",
    "keywords": "Set-PnPWikiPageContent SYNOPSIS Sets the contents of a wikipage SYNTAX STRING Set-PnPWikiPageContent -Content <String> -ServerRelativePageUrl <String> [-Connection <PnPConnection>] [<CommonParameters>] FILE Set-PnPWikiPageContent -Path <String> -ServerRelativePageUrl <String> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This cmdlet updates the content of the specified wikipage to the value specified either in a string or a file. EXAMPLES EXAMPLE 1 Set-PnPWikiPageContent -ServerRelativePageUrl /sites/PnPWikiCollection/SitePages/OurWikiPage.aspx -Path .\\sampleblog.html Sets the content of OurWikiPage to the content of sampleblog.html file. EXAMPLE 2 $htmlContent = \"<div>test</div>\" Set-PnPWikiPageContent -ServerRelativePageUrl /sites/PnPWikiCollection/SitePages/OurWikiPage.aspx -Content $htmlContent Sets the content of OurWikiPage as \"test\". PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Content Type: String Parameter Sets: STRING Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path Type: String Parameter Sets: FILE Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ServerRelativePageUrl Site Relative Page Url Type: String Parameter Sets: (All) Aliases: PageUrl Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Stop-PnPFlowRun.html": {
    "href": "cmdlets/Stop-PnPFlowRun.html",
    "title": "Stop-PnPFlowRun | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Stop-PnPFlowRun SYNOPSIS Required Permissions Azure: management.azure.com Stops/cancels a specific run of a Microsoft flow. SYNTAX Stop-PnPFlowRun -Environment <PowerAutomateEnvironmentPipeBind> -Flow <PowerAutomateFlowPipeBind> -Identity <PowerAutomateFlowRunPipeBind> [-Force] [<CommonParameters>] DESCRIPTION This cmdlet cancels a running Power Automate flow run. EXAMPLES Example 1 $environment = Get-PnPPowerPlatformEnvironment Stop-PnPFlowRun -Environment $environment -Flow fba63225-baf9-4d76-86a1-1b42c917a182 -Identity 08585531682024670884771461819CU230 This cancels the specified flow run of the specified flow Example 2 $environment = Get-PnPPowerPlatformEnvironment Stop-PnPFlowRun -Environment $environment -Flow fba63225-baf9-4d76-86a1-1b42c917a182 -Identity 08585531682024670884771461819CU230 -Force This cancels the specified flow run of the specified flow without confirmation PARAMETERS -Environment The name of the Power Platform environment or an Environment object to retrieve the available flows for. Type: PowerAutomateEnvironmentPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Flow The Name/Id of the flow to retrieve the available flow runs for. Type: PowerAutomateFlowPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The Name/Id of the flow run to cancel. Type: PowerAutomateFlowRunPipeBind Parameter Sets: (All) Aliases: Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Submit-PnPSearchQuery.html": {
    "href": "cmdlets/Submit-PnPSearchQuery.html",
    "title": "Submit-PnPSearchQuery | PnP PowerShell",
    "keywords": "Submit-PnPSearchQuery SYNOPSIS Executes an arbitrary search query against the SharePoint search index SYNTAX Limit (Default) Submit-PnPSearchQuery [-Query] <String> [-StartRow <Int32>] [-MaxResults <Int32>] [-TrimDuplicates <Boolean>] [-Properties <Hashtable>] [-Refiners <String>] [-Culture <Int32>] [-QueryTemplate <String>] [-SelectProperties <String[]>] [-RefinementFilters <String[]>] [-SortList <Hashtable>] [-RankingModelId <String>] [-ClientType <String>] [-CollapseSpecification <String>] [-HiddenConstraints <String>] [-TimeZoneId <Int32>] [-EnablePhonetic <Boolean>] [-EnableStemming <Boolean>] [-EnableQueryRules <Boolean>] [-SourceId <Guid>] [-ProcessBestBets <Boolean>] [-ProcessPersonalFavorites <Boolean>] [-RelevantResults] [-Connection <PnPConnection>] [<CommonParameters>] All Submit-PnPSearchQuery [-Query] <String> [-All] [-TrimDuplicates <Boolean>] [-Properties <Hashtable>] [-Refiners <String>] [-Culture <Int32>] [-QueryTemplate <String>] [-SelectProperties <String[]>] [-RefinementFilters <String[]>] [-SortList <Hashtable>] [-RankingModelId <String>] [-ClientType <String>] [-CollapseSpecification <String>] [-HiddenConstraints <String>] [-TimeZoneId <Int32>] [-EnablePhonetic <Boolean>] [-EnableStemming <Boolean>] [-EnableQueryRules <Boolean>] [-SourceId <Guid>] [-ProcessBestBets <Boolean>] [-ProcessPersonalFavorites <Boolean>] [-RelevantResults] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Submit-PnPSearchQuery -Query \"finance\" Returns the top 500 items with the term finance EXAMPLE 2 Submit-PnPSearchQuery -Query \"Title:Intranet*\" -MaxResults 10 Returns the top 10 items indexed by SharePoint Search of which the title starts with the word Intranet EXAMPLE 3 Submit-PnPSearchQuery -Query \"Title:Intranet*\" -All Returns absolutely all items indexed by SharePoint Search of which the title starts with the word Intranet EXAMPLE 4 Submit-PnPSearchQuery -Query \"Title:Intranet*\" -Refiners \"contentclass,FileType(filter=6/0/*)\" Returns absolutely all items indexed by SharePoint Search of which the title starts with the word Intranet, and return refiners for contentclass and FileType managed properties PARAMETERS -All Automatically page results until the end to get more than 500. Use with caution! Type: SwitchParameter Parameter Sets: All Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ClientType Specifies the name of the client which issued the query. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CollapseSpecification Limit the number of items per the collapse specification. See https://docs.microsoft.com/sharepoint/dev/general-development/customizing-search-results-in-sharepoint#collapse-similar-search-results-using-the-collapsespecification-property for more information. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Culture The locale for the query. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnablePhonetic Specifies whether the phonetic forms of the query terms are used to find matches. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableQueryRules Specifies whether Query Rules are enabled for this query. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -EnableStemming Specifies whether stemming is enabled. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -HiddenConstraints The keyword query's hidden constraints. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -MaxResults Maximum amount of search results to return. Default and max per page is 500 search results. Type: Int32 Parameter Sets: Limit Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ProcessBestBets Determines whether Best Bets are enabled. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ProcessPersonalFavorites Determines whether personal favorites data is processed or not. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Properties Extra query properties. Can for example be used for Office Graph queries. Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Query Search query in Keyword Query Language (KQL). Type: String Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -QueryTemplate Specifies the query template that is used at run time to transform the query based on user input. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RankingModelId The identifier (ID) of the ranking model to use for the query. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RefinementFilters The set of refinement filters used. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Refiners The list of refiners to be returned in a search result. Type: String Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RelevantResults Specifies whether only relevant results are returned Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SelectProperties The list of properties to return in the search results. Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SortList The list of properties by which the search results are ordered. Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -SourceId Specifies the identifier (ID or name) of the result source to be used to run the query. Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -StartRow Search result item to start returning the results from. Useful for paging. Leave at 0 to return all results. Type: Int32 Parameter Sets: Limit Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TimeZoneId The identifier for the search query time zone. Type: Int32 Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -TrimDuplicates Specifies whether near duplicate items should be removed from the search results. Type: Boolean Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Submit-PnPTeamsChannelMessage.html": {
    "href": "cmdlets/Submit-PnPTeamsChannelMessage.html",
    "title": "Submit-PnPTeamsChannelMessage | PnP PowerShell",
    "keywords": "Submit-PnPTeamsChannelMessage SYNOPSIS Required Permissions Microsoft Graph API: API required one of 'Teamwork.Migrate.All, ChannelMessage.ReadWrite.All'. Sends a message to a Microsoft Teams Channel. SYNTAX Submit-PnPTeamsChannelMessage -Team <TeamsTeamPipeBind> -Channel <TeamsChannelPipeBind> -Message <String> [-ContentType <TeamChannelMessageContentType>] [-Important] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Submit-PnPTeamsChannelMessage -Team MyTestTeam -Channel \"My Channel\" -Message \"A new message\" Sends \"A new message\" to the specified channel EXAMPLE 2 Submit-PnPTeamsChannelMessage -Team MyTestTeam -Channel \"My Channel\" -Message \"<strong>A bold new message</strong>\" -ContentType Html Sends the message, formatted as html to the specified channel PARAMETERS -Channel Specify the group id, mailNickname or display name of the team to use. Type: TeamsChannelPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType Specify to set the content type of the message, either Text or Html. Type: TeamChannelMessageContentType Parameter Sets: (All) Accepted values: Text, Html Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Important Specify to make this an important message. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Message The message to send to the channel. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Sync-PnPAppToTeams.html": {
    "href": "cmdlets/Sync-PnPAppToTeams.html",
    "title": "Sync-PnPAppToTeams | PnP PowerShell",
    "keywords": "Sync-PnPAppToTeams SYNOPSIS Synchronize an app from the tenant app catalog to the Microsoft Teams app catalog SYNTAX Sync-PnPAppToTeams [-Identity] <AppMetadataPipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Sync-PnPAppToTeams -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe This will synchronize the given app with the Microsoft Teams app catalog PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the Id of the Addin Instance Type: AppMetadataPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Sync-PnPSharePointUserProfilesFromAzureActiveDirectory.html": {
    "href": "cmdlets/Sync-PnPSharePointUserProfilesFromAzureActiveDirectory.html",
    "title": "Sync-PnPSharePointUserProfilesFromAzureActiveDirectory | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Sync-PnPSharePointUserProfilesFromAzureActiveDirectory SYNOPSIS Synchronizes user profiles from Azure Active Directory into the SharePoint Online User Profiles SYNTAX Upload file Sync-PnPSharePointUserProfilesFromAzureActiveDirectory -UserProfilePropertyMapping <Hashtable> [-IdType <Enum>] [-Users <Array>] [-Folder <String>] [-Wait] [-Verbose] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This cmdlet allows synchronizing user profiles from Azure Active Directory to their SharePoint Online User Profile equivallents. Note that certain properties are already synced by default. A list of these can be found here: https://docs.microsoft.com/sharepoint/user-profile-sync#properties-that-are-synced-into-sharepoint-user-profiles For other properties not listed on this page, you can use this cmdlet to synchronize them. You can provide the property name(s) in Azure Active Directory and specify its equivallent property in SharePoint Online for the values to be mapped to. Note that SharePoint Online User Profile properties you wish to sync to must have the checkbox unchecked for \"Allow users to edit values for this property\" in the user profile property in the SharePoint User Profile service application. It also must have \"User can override\" checked under Policy Settings of the user profile property in the SharePoint User Profile service application. When running this cmdlet, it will upload a file named userprofilesyncdata-<timestamp>-<guid>.json to the documents library of the SharePoint Online site you are connected to. From there an asynchronous process will be started that processed the JSON file and updates the user profiles on the SharePoint Online side. The time before this process starts varies. Once that process is done and only if something failed, you will find a new folder created in the same document library of which the folder name starts with the same name as the filename. It will contain a .log file in which you can find the results of it trying to update the user profiles in SharePoint Online which were specified in the JSON file. If all the user profile properties have been updated successfully, it will not create such a folder and log file. You can also query the import job status using Get-PnPUPABulkImportStatus -JobId <jobid> . The jobid will be returned upon running this cmdlet and can be fed into this cmdlet to get the actual status. It will show State: Submitted after running this cmdlet and before processing it and State: Succeeded once its done and was successful or State: Error if it failed. It will also return full details on the file it will use to update the user profiles and the location of the log file once its done processing and only if it failed. For documentation on all the possible states it can be in, see https://docs.microsoft.com/sharepoint/dev/solution-guidance/bulk-user-profile-update-api-for-sharepoint-online#parameters-2 . When not providing -Users, it will fetch all the users and the properties defined in the mapping from Azure Active Directory itself. You can also opt to query for a subset of Azure Active Directory users to update using i.e. Get-PnPAzureAdUser and feed the outcome of that to the -Users parameter. In this case you must ensure that the user objects you supply contain the properties you wish to sync towards SharePoint Online. When not providing -Folder, it will assume a document library named \"Shared Documents\" is present within the site collection you're currently connected to. In case you are not using an English site collection, this name may be different and localized. In that case use the -Folder parameter passing in the localized name of the document library you wish to upload the mapping file to. Required Permissions In order to be able to run this cmdlet you need to have [User.Read.All] and [Sites.FullControl.All] permissions on SharePoint and [User.Read.All] permissions on Microsoft Graph so it will be able to read the users directly from Azure Active Directory and upload the JSON file to SharePoint Online. It also needs to have the Tenant Full Control ACS permission through https://tenant-admin.sharepoint.com/_layouts/appinv.aspx for it to be allowed to kick off the import user profile process: <AppPermissionRequests AllowAppOnlyPolicy=\"true\"> <AppPermissionRequest Scope=\"http://sharepoint/content/tenant\" Right=\"FullControl\" /> </AppPermissionRequests> EXAMPLES EXAMPLE 1 Sync-PnPSharePointUserProfilesFromAzureActiveDirectory -UserProfilePropertyMapping @{\"HomePhone\"=\"phone\";\"CustomProperty\"=\"DisplayName\"} This will retrieve all users in Azure Active Directory and take its phone property to update in the HomePhone field in the SharePoint Online user profiles for each of these users. Similarly it will set the SharePoint Online User Profile property named CustomProperty to the value of the DisplayName as set in Azure Active Directory on the user object. It will upload the JSON file with the instructions for the update to the 'Shared Documents' library of the site currently connected to. EXAMPLE 2 $users = Get-PnPAzureADUser -Filter \"jobTitle eq 'IT Administrator'\" Sync-PnPSharePointUserProfilesFromAzureActiveDirectory -UserProfilePropertyMapping @{\"CostCenter\"=\"extension_b0b5aaa58a0a4287acd826c5b8330e48_CostCenter\"} -Users $users This will update the CostCenter SharePoint Online User Profile property with the value of the property extension_b0b5aaa58a0a4287acd826c5b8330e48_CostCenter coming from Azure Active Directory for the users getting returned by the Get-PnPAzureADUser query. It will upload the JSON file with the instructions for the update to the 'Shared Documents' library of the site currently connected to. EXAMPLE 3 $delta = Get-PnPAzureADUser -Delta -DeltaToken $delta.DeltaToken Sync-PnPSharePointUserProfilesFromAzureActiveDirectory -UserProfilePropertyMapping @{\"CostCenter\"=\"extension_b0b5aaa58a0a4287acd826c5b8330e48_CostCenter\"} -Users $delta.Users This will retrieve all the users from Azure Active Directory and includes a DeltaToken in the response. Using the DeltaToken you can retrieve only those users which have had changes done to their attributes since the DeltaToken was given out. This makes it ideal to use with the profile sync as this way you only will sync those users that have had changes to their profiles. Only for those users this will update the CostCenter SharePoint Online User Profile property with the value of the property extension_b0b5aaa58a0a4287acd826c5b8330e48_CostCenter coming from Azure Active Directory. It will upload the JSON file with the instructions for the update to the 'Shared Documents' library of the site currently connected to. EXAMPLE 4 Sync-PnPSharePointUserProfilesFromAzureActiveDirectory -UserProfilePropertyMapping @{\"CostCenter\"=\"extension_b0b5aaa58a0a4287acd826c5b8330e48_CostCenter\"} -Folder \"User Profile Sync\" This will retrieve all users in Azure Active Directory and take its extension property named CostCenter to update in the CostCenter field in the SharePoint Online user profiles for each of these users. It will upload the JSON file with the instructions for the update to a library named 'User Profile Sync' in the site currently connected to. EXAMPLE 5 Sync-PnPSharePointUserProfilesFromAzureActiveDirectory -UserProfilePropertyMapping @{\"CostCenter\"=\"extension_b0b5aaa58a0a4287acd826c5b8330e48_CostCenter\"} -Folder \"User Profile Sync\\Jobs\" -Wait -Verbose This will retrieve all users in Azure Active Directory and take its extension property named CostCenter to update in the CostCenter field in the SharePoint Online user profiles for each of these users. It will upload the JSON file with the instructions for the update to the folder Jobs inside a library named 'User Profile Sync' in the site currently connected to. It will wait with continuing the execution of the remainder of your script until the synchronization process has either completed or failed. It will output verbose logging to provide input on its status while executing. Notice that it may very well take 10 minutes or more for the synchronization to complete. PARAMETERS -Users Through this parameter you can pass in users coming forward from a query through Get-PnPAzureADUser that need to have their SharePoint Online User profiles updated Type: System.Collections.Generic.List`1[PnP.Framework.Graph.Model.User] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Folder The site relative name of the folder or document library to upload the JSON files containing the user profiles to be updated. I.e. 'Shared Documents' to upload it to the root of the default Documents library in a Team site. If you want to specify a folder inside the document library, you can use i.e. 'Shared Documents\\Somefolder'. If you are not using a site collection in the English language, be sure to provide this parameter passing in the localized name of your library instead. Type: String Parameter Sets: (All) Required: False Position: Named Default value: \"Shared Documents\" Accept pipeline input: False Accept wildcard characters: False -UserProfilePropertyMapping A hashtable containing the SharePoint Online User Profile property to update as the key and as the value the Azure Active Directory user profile property from which the value should be copied. It is possible to copy one Azure Active Directory user profile property to multiple SharePoint Online User Profile property fields. It is also possible to provide multiple mappings at once. For SharePoint Online, please be sure to take the actual property name as shown on the User Profile property page at https://tenant-admin.sharepoint.com/_layouts/15/TenantProfileAdmin/MgrProperty.aspx?ProfileType=User&ApplicationID=00000000%2D0000%2D0000%2D0000%2D000000000000 and not its display name as these can easily be mixed up. I.e. @{\"SharePointUserProfileProperty1\"=\"AzureADUserProperty1\";\"SharePointUserProfileProperty2\"=\"AzureADUserProperty2\"} Type: Hashtable Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IdType The type of profile identifier (Email/CloudId/PrincipalName). Defaults to CloudId. Ensure that if you use this in combination with -Users that all of the user objects you're passing in are having their Mail property populated when choosing IdType Email, Id property for IdType CloudId or UserPrincipalName for IdType PrincipalName. Type: ImportProfilePropertiesUserIdType Parameter Sets: (All) Accepted values: Email, CloudId, PrincipalName Required: False Default value: CloudId Accept pipeline input: False Accept wildcard characters: False -WhatIf Will retrieve the users from Azure Active Directory and create and upload the mappings JSON file, but will not invoke a request to SharePoint Online to queue the import process. This way you can examine the mappings JSON file on SharePoint Online first to ensure the mappings are being done correctly. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Wait Adding this parameter will cause the script to start the user profile sync operation and wait with proceeding with the rest of the script until the user profiles have been imported into the SharePoint Online user profile. It can take a long time for the user profile sync operation to complete. It will check every 30 seconds for the current status of the job, to avoid getting throttled. The check interval is non configurable. Add -Verbose as well to be notified about the progress while waiting. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Verbose When provided, additional debug statements will be shown while going through the user profile sync steps. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Test-PnPListItemIsRecord.html": {
    "href": "cmdlets/Test-PnPListItemIsRecord.html",
    "title": "Test-PnPListItemIsRecord | PnP PowerShell",
    "keywords": "Test-PnPListItemIsRecord SYNOPSIS Checks if a list item is a record SYNTAX Test-PnPListItemIsRecord [-List] <ListPipeBind> -Identity <ListItemPipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Test-PnPListItemIsRecord -List \"Documents\" -Identity 4 Returns true if the document in the documents library with id 4 is a record PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity The ID of the listitem, or actual ListItem object Type: ListItemPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The ID, Title or Url of the list. Type: ListPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Test-PnPMicrosoft365GroupAliasIsUsed.html": {
    "href": "cmdlets/Test-PnPMicrosoft365GroupAliasIsUsed.html",
    "title": "Test-PnPMicrosoft365GroupAliasIsUsed | PnP PowerShell",
    "keywords": "Test-PnPMicrosoft365GroupAliasIsUsed SYNOPSIS Tests if a given alias is already used. SYNTAX Test-PnPMicrosoft365GroupAliasIsUsed -Alias <String> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This command allows you to test if a provided alias is used or free, helps decide if it can be used as part of connecting an Microsoft 365 group to an existing classic site collection. EXAMPLES EXAMPLE 1 Test-PnPMicrosoft365GroupAliasIsUsed -Alias \"MyGroup\" This will test if the alias MyGroup is already used PARAMETERS -Alias Specifies the alias of the group. Cannot contain spaces. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Test-PnPSite.html": {
    "href": "cmdlets/Test-PnPSite.html",
    "title": "Test-PnPSite | PnP PowerShell",
    "keywords": "Test-PnPSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Checks the site collection and its contents. SYNTAX Test-PnPSite -Identity <SitePipeBind> [-RuleId <Guid>] DESCRIPTION The Test-PnPSite cmdlet runs one or all site collection health checks on the site collection and its contents. Tests are intended not to make any changes except in repair mode, which can be initiated by running the Repair-PnPSite cmdlet. This cmdlet reports the rules together with a summary of the results. EXAMPLES EXAMPLE 1 Test-PnPSite -Identity \"https://contoso.sharepoint.com/sites/marketing\" This example runs all the site collection health checks on the https://contoso.sharepoint.com/sites/marketing site collection. EXAMPLE 2 Test-PnPSite -Identity \"https://contoso.sharepoint.com/sites/marketing\" -RuleID \"ee967197-ccbe-4c00-88e4-e6fab81145e1\" This example runs the Missing Galleries Check rule in test mode on the https://contoso.sharepoint.com/sites/marketing site collection. PARAMETERS -Identity Specifies the SharePoint Online site collection on which to run the repairs. Type: SitePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -RuleId Specifies a health check rule to run. For example: \"ee967197-ccbe-4c00-88e4-e6fab81145e1\" for Missing Galeries. \"befe203b-a8c0-48c2-b5f0-27c10f9e1622\" for Conflicting Content Types. \"a9a6769f-7289-4b9f-ae7f-5db4b997d284\" for Missing Parent Content Types. \"5258ccf5-e7d6-4df7-b8ae-12fcc0513ebd\" for Missing Site Templates. \"99c946f7-5751-417c-89d3-b9c8bb2d1f66\" for Unsupported Language Pack References. \"6da06aab-c539-4e0d-b111-b1da4408859a\" for Unsupported MUI References. Type: Guid Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Test-PnPTenantTemplate.html": {
    "href": "cmdlets/Test-PnPTenantTemplate.html",
    "title": "Test-PnPTenantTemplate | PnP PowerShell",
    "keywords": "Test-PnPTenantTemplate SYNOPSIS Tests a tenant template for invalid references SYNTAX Test-PnPTenantTemplate -Template <ProvisioningHierarchy> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Test-PnPTenantTemplate -Template $myTemplate Checks for valid template references PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Template The in-memory template to test Type: ProvisioningHierarchy Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Uninstall-PnPApp.html": {
    "href": "cmdlets/Uninstall-PnPApp.html",
    "title": "Uninstall-PnPApp | PnP PowerShell",
    "keywords": "Uninstall-PnPApp SYNOPSIS Uninstalls an available add-in from the site SYNTAX Uninstall-PnPApp [-Identity] <AppMetadataPipeBind> [-Scope <AppCatalogScope>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Uninstall-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe This will uninstall the specified app from the current site. EXAMPLE 2 Uninstall-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Scope Site This will uninstall the specified app from the current site. Notice that the app was original installed from the site collection appcatalog. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the Id of the Addin Instance Type: AppMetadataPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Scope Defines which app catalog to use. Defaults to Tenant Type: AppCatalogScope Parameter Sets: (All) Accepted values: Tenant, Site Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Unpublish-PnPApp.html": {
    "href": "cmdlets/Unpublish-PnPApp.html",
    "title": "Unpublish-PnPApp | PnP PowerShell",
    "keywords": "Unpublish-PnPApp SYNOPSIS Unpublishes/retracts an available add-in from the app catalog SYNTAX Unpublish-PnPApp [-Identity] <AppMetadataPipeBind> [-Scope <AppCatalogScope>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Unpublish-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe This will retract, but not remove, the specified app from the tenant app catalog EXAMPLE 2 Unpublish-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Scope Site This will retract, but not remove, the specified app from the site collection app catalog PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the Id of the Addin Instance Type: AppMetadataPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Scope Defines which app catalog to use. Defaults to Tenant Type: AppCatalogScope Parameter Sets: (All) Accepted values: Tenant, Site Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Unpublish-PnPContentType.html": {
    "href": "cmdlets/Unpublish-PnPContentType.html",
    "title": "Unpublish-PnPContentType | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Unpublish-PnPContentType SYNOPSIS Required Permissions Fullcontrol permission on the content type hub site. Unpublishes a content type present on content type hub site. SYNTAX Unpublish-PnPContentType -ContentType <ContentTypePipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Unpublish-PnPContentType -ContentType 0x0101 This will unpublish the content type with the given id. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -ContentType The content type object in the content type hub site which is to be unpublished. Type: ContentType Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Unpublish-PnPSyntexModel.html": {
    "href": "cmdlets/Unpublish-PnPSyntexModel.html",
    "title": "Unpublish-PnPSyntexModel | PnP PowerShell",
    "keywords": "Unpublish-PnPSyntexModel SYNOPSIS Unpublishes a SharePoint Syntex model from a list. This cmdlet only works when you've connected to a SharePoint Syntex Content Center site. SYNTAX Single Unpublish-PnPSyntexModel -Model <SyntexModelPipeBind> -ListWebUrl <string> -List <ListPipeBind> [-Connection <PnPConnection>] [<CommonParameters>] Batched Unpublish-PnPSyntexModel -Model <SyntexModelPipeBind> -TargetSiteUrl <string> -TargetWebServerRelativeUrl <string> -TargetLibraryServerRelativeUrl <string> -Batch <PnPBatch> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION This command unpublishes a SharePoint Syntex content understanding models from a list. EXAMPLES EXAMPLE 1 Unpublish-PnPSyntexModel -Model \"Invoice model\" -ListWebUrl \"https://contoso.sharepoint.com/sites/finance\" -List \"Documents\" Unpublishes the content understanding model named \"Invoice model\" from the list named \"Documents\" in the /sites/finance web. EXAMPLE 2 Unpublish-PnPSyntexModel -Model \"Invoice model\" -TargetSiteUrl \"https://contoso.sharepoint.com/sites/finance\" -TargetWebServerRelativeUrl \"/sites/finance\" -TargetLibraryServerRelativeUrl \"/sites/finance/shared%20documents\" -Batch $batch Adds the unpublishing of the content understanding model named \"Invoice model\" from the \"Shared Documents\" library into the PnPBatch $batch. Use Invoke-PnPBatch -Batch $batch to execute the batch, use $batch = New-PnPBatch to create a batch. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Model The name or id of the SharePoint Syntex model. Type: SyntexModelPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -ListWebUrl Url of the web hosting the list to unpublish the model from. Type: String Parameter Sets: Single Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -List The name or id of the list to unpublish the model from. Type: ListPipeBind Parameter Sets: Single Required: False Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TargetSiteUrl The fully qualified URL of the site collection hosting the library to unpublish the model from. Type: String Parameter Sets: Batched Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TargetWebServerRelativeUrl The server relative url of the web hosting the library to unpublish the model from. Type: String Parameter Sets: Batched Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -TargetLibraryServerRelativeUrl The server relative url of the library to unpublish the model from. Type: String Parameter Sets: Batched Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Batch The batch to add this unpublish request to. Type: PnPBatch Parameter Sets: Batched Aliases: Required: True Position: Named Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Unregister-PnPHubSite.html": {
    "href": "cmdlets/Unregister-PnPHubSite.html",
    "title": "Unregister-PnPHubSite | PnP PowerShell",
    "keywords": "Unregister-PnPHubSite SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Unregisters a site as a hubsite SYNTAX Unregister-PnPHubSite -Site <SitePipeBind> [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Unregister-PnPHubSite -Site \"https://tenant.sharepoint.com/sites/myhubsite\" This example unregisters the specified site as a hubsite PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Site The site to unregister as a hubsite Type: SitePipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Update-PnPApp.html": {
    "href": "cmdlets/Update-PnPApp.html",
    "title": "Update-PnPApp | PnP PowerShell",
    "keywords": "Update-PnPApp SYNOPSIS Updates an available app from the app catalog SYNTAX Update-PnPApp [-Identity] <AppMetadataPipeBind> [-Scope <AppCatalogScope>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Update-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe This will update an already installed app if a new version is available in the tenant app catalog. Retrieve a list all available apps and the installed and available versions with Get-PnPApp EXAMPLE 2 Update-PnPApp -Identity 99a00f6e-fb81-4dc7-8eac-e09c6f9132fe -Scope Site This will update an already installed app if a new version is available in the site collection app catalog. Retrieve a list all available apps and the installed and available versions with Get-PnPApp -Scope Site PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Identity Specifies the Id or an actual app metadata instance Type: AppMetadataPipeBind Parameter Sets: (All) Required: True Position: 0 Default value: None Accept pipeline input: True (ByValue) Accept wildcard characters: False -Scope Defines which app catalog to use. Defaults to Tenant Type: AppCatalogScope Parameter Sets: (All) Accepted values: Tenant, Site Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Update-PnPSiteClassification.html": {
    "href": "cmdlets/Update-PnPSiteClassification.html",
    "title": "Update-PnPSiteClassification | PnP PowerShell",
    "keywords": "Update-PnPSiteClassification SYNOPSIS Required Permissions Microsoft Graph API: Directory.ReadWrite.All Updates Site Classifications for the tenant SYNTAX Settings Update-PnPSiteClassification -Settings <SiteClassificationsSettings> [<CommonParameters>] Specific Update-PnPSiteClassification [-Classifications <System.Collections.Generic.List`1[System.String]>] [-DefaultClassification <String>] [-UsageGuidelinesUrl <String>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Update-PnPSiteClassification -Classifications \"HBI\",\"Top Secret\" Replaces the existing values of the site classification settings EXAMPLE 2 Update-PnPSiteClassification -DefaultClassification \"LBI\" Sets the default classification value to \"LBI\". This value needs to be present in the list of classification values. EXAMPLE 3 Update-PnPSiteClassification -UsageGuidelinesUrl https://aka.ms/m365pnp sets the usage guideliness URL to the specified URL PARAMETERS -Classifications A list of classifications, separated by commas. E.g. \"HBI\",\"LBI\",\"Top Secret\" Type: System.Collections.Generic.List`1[System.String] Parameter Sets: Specific Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -DefaultClassification The default classification to be used. The value needs to be present in the list of possible classifications Type: String Parameter Sets: Specific Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Settings A settings object retrieved by Get-PnPSiteClassification Type: SiteClassificationsSettings Parameter Sets: Settings Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -UsageGuidelinesUrl The UsageGuidelinesUrl. Set to \"\" to clear. Type: String Parameter Sets: Specific Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Update-PnPSiteDesignFromWeb.html": {
    "href": "cmdlets/Update-PnPSiteDesignFromWeb.html",
    "title": "Update-PnPSiteDesignFromWeb | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Update-PnPSiteDesignFromWeb SYNOPSIS Required Permissions SharePoint: Access to the SharePoint Tenant Administration site Updates an existing Site Design on the current tenant based on the site provided through -Url or the currently connected to site if -Url is omitted SYNTAX Specific components Update-PnPSiteDesignFromWeb -Identity <TenantSiteDesignPipeBind> -Url <String> [-Lists <String[]>] [-IncludeBranding <SwitchParameter>] [-IncludeLinksToExportedItems <SwitchParameter>] [-IncludeRegionalSettings <SwitchParameter>] [-IncludeSiteExternalSharingCapability <SwitchParameter>] [-IncludeTheme <SwitchParameter>] [-Connection <PnPConnection>] All components Update-PnPSiteDesignFromWeb -Identity <TenantSiteDesignPipeBind> -Url <String> [-Lists <String[]>] [-IncludeAll <SwitchParameter>] [-Connection <PnPConnection>] DESCRIPTION Updates an existing Site Design on the current tenant based on the site provided through -Url or the currently connected to site if -Url is omitted. It combines the steps of Get-PnPSiteScriptFromWeb and Set-PnPSiteScript to generate a site script from a web and update an existing site script with it into one cmdlet. The information returned from running the cmdlet is the information of the Site Design that has been updated. EXAMPLES EXAMPLE 1 Update-PnPSiteDesignFromWeb -Identity \"Contoso Project\" -IncludeAll Generates a site script based on all the components of the currently connected to site, excluding its lists and libraries and based on the generated script it will update the site script in the site design with the provided name. EXAMPLE 2 Update-PnPSiteDesignFromWeb -Identity \"Contoso Project\" -IncludeAll -Lists (\"/lists/Issue list\", \"Shared Documents) Generates a site script based on all the components of the currently connected to site, including the list \"Issue list\" and the default document library \"Shared Documents\" and based on the generated script it will update the site script in the site design with the provided name. EXAMPLE 3 Update-PnPSiteDesignFromWeb -Url https://contoso.sharepoint.com/sites/template -Identity \"Contoso Project\" -Lists \"/lists/Issue list\" Generates a site script based on the list \"Issue list\" in the site provided through Url and based on the generated script it will update the site script in the site design with the provided name. PARAMETERS -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -WhatIf Shows what would happen if the cmdlet runs. The cmdlet is not run. Type: SwitchParameter Parameter Sets: (All) Aliases: wi Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeAll If specified will include all supported components into the Site Script except for the lists and document libraries, these need to be explicitly be specified through -Lists Type: SwitchParameter Parameter Sets: All components Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeBranding If specified will include the branding of the site into the Site Script Type: SwitchParameter Parameter Sets: Specific components Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeLinksToExportedItems If specified will include navigation links into the Site Script Type: SwitchParameter Parameter Sets: Specific components Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeRegionalSettings If specified will include the regional settings into the Site Script Type: SwitchParameter Parameter Sets: Specific components Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeSiteExternalSharingCapability If specified will include the external sharing configuration into the Site Script Type: SwitchParameter Parameter Sets: Specific components Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IncludeTheme If specified will include the branding of the site into the Site Script Type: SwitchParameter Parameter Sets: Specific components Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Lists Allows specifying one or more site relative URLs of lists that should be included into the Site Script, i.e. \"Shared Documents\",\"List\\MyList\" Type: String[] Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Update-PnPTeamsApp.html": {
    "href": "cmdlets/Update-PnPTeamsApp.html",
    "title": "Update-PnPTeamsApp | PnP PowerShell",
    "keywords": "Update-PnPTeamsApp SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Updates an existing app in the Teams App Catalog. SYNTAX Update-PnPTeamsApp -Identity <TeamsAppPipeBind> -Path <String> [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Update-PnPTeamsApp -Identity 4efdf392-8225-4763-9e7f-4edeb7f721aa -Path c:\\myapp.zip Updates the specified app in the teams app catalog with the contents of the referenced zip file. PARAMETERS -Identity Specify the name, id or external id of the app. Type: TeamsAppPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Path The path pointing to the packaged/zip file containing the app Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Update-PnPTeamsUser.html": {
    "href": "cmdlets/Update-PnPTeamsUser.html",
    "title": "Update-PnPTeamsUser | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Update-PnPTeamsUser SYNOPSIS Required Permissions Microsoft Graph API: Group.ReadWrite.All Updates a user's role in an existing Microsoft Teams instance. SYNTAX Update-PnPTeamsUser -Team <TeamsTeamPipeBind> -User <String> -Role <String> [<CommonParameters>] DESCRIPTION This cmdlet updates the role of the specified user in the selected Teams instance to Member or Owner. EXAMPLES EXAMPLE 1 Update-PnPTeamsUser -Team MyTeam -User john@doe.com -Role Owner Updates a user as an owner of the team. EXAMPLE 2 Update-PnPTeamsUser -Team MyTeam -User john@doe.com -Role Member Updates a user as a member of the team. EXAMPLE 3 Update-PnPTeamsUser -Team a0c0a395-4ba6-4fff-958a-000000506d18 -User john@doe.com -Role Member -Force Updates john@doe.com user as a member of the team and skips the confirmation question. PARAMETERS -Role Specify the role of the user Type: String Parameter Sets: (All) Accepted values: Owner, Member Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Team Specify the group id, mailNickname or display name of the team to use. Type: TeamsTeamPipeBind Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -User Specify the UPN (e.g. john@doe.com) Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Force Specifying the Force parameter will skip the confirmation question. Type: SwitchParameter Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices Microsoft Graph documentation"
  },
  "cmdlets/Update-PnPUserType.html": {
    "href": "cmdlets/Update-PnPUserType.html",
    "title": "Update-PnPUserType | PnP PowerShell",
    "keywords": "Update-PnPUserType SYNOPSIS Updates a user's UserType across all SharePoint Online sites. SYNTAX Update-PnPUserType -LoginName <String> DESCRIPTION This cmdlet retrieves the UserType value of the specified user and updates the UserType across all SharePoint Online sites in the SharePoint Online tenant. This can be used, for example, to convert a Guest user to a standard (Member) user if the user's UserType was previously updated in Azure AD. EXAMPLES EXAMPLE 1 Update-PnPUserType -LoginName jdoe@contoso.com Updates the jdoe@contoso.com's UserType on all SharePoint Online sites in the tenant based on the UserType value in Azure AD. PARAMETERS -LoginName The login name of the target user to update across SharePoint Online. Type: String Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "cmdlets/Update-PnPVivaConnectionsDashboardACE.html": {
    "href": "cmdlets/Update-PnPVivaConnectionsDashboardACE.html",
    "title": "Update-PnPVivaConnectionsDashboardACE | PnP PowerShell",
    "keywords": "Available in the current Nightly Release only. Update-PnPVivaConnectionsDashboardACE SYNOPSIS Update the Adaptive card extension in the Viva connections dashboard page. This requires that you connect to a SharePoint Home site and have configured the Viva connections page. SYNTAX Update-PnPVivaConnectionsDashboardACE [-Identity <GUID>] [-Title <string>] [-PropertiesJSON <string>] [-Description <string>] [-IconProperty <string>] [-Order <Int>][-CardSize <CardSize>] [-Connection <PnPConnection>] [<CommonParameters>] DESCRIPTION EXAMPLES EXAMPLE 1 Update-PnPVivaConnectionsDashboardACE -Identity \"58108715-185e-4214-8786-01218e7ab9ef\" -Title \"Update title\" -Description \"Update Description\" -IconProperty \"https://cdn.hubblecontent.osi.office.net/m365content/publish/002f8bf9-b8ee-4689-ae97-e411b756099d/691108002.jpg\" -Order 4 -CardSize Large -PropertiesJSON $myProperties Update the adaptive card extensions with Instance Id 58108715-185e-4214-8786-01218e7ab9ef in the Viva connections dashboard page. It will update the Title, Description, IconProperty, Order , CardSize and PropertiesJSON of the ACE. EXAMPLE 2 Update-PnPVivaConnectionsDashboardACE -Identity \"58108715-185e-4214-8786-01218e7ab9ef\" -Title \"Update title\" -Description \"Update Description\" Update the adaptive card extensions with Instance Id 58108715-185e-4214-8786-01218e7ab9ef in the Viva connections dashboard page. It will update the Title and Description of the ACE. EXAMPLE 3 Update-PnPVivaConnectionsDashboardACE -Identity \"58108715-185e-4214-8786-01218e7ab9ef\" -IconProperty \"https://cdn.hubblecontent.osi.office.net/m365content/publish/002f8bf9-b8ee-4689-ae97-e411b756099d/691108002.jpg\" -Order 4 Update the adaptive card extensions with Instance Id 58108715-185e-4214-8786-01218e7ab9ef in the Viva connections dashboard page. It will update the IconProperty and Order of the ACE. EXAMPLE 4 Update-PnPVivaConnectionsDashboardACE -Identity \"58108715-185e-4214-8786-01218e7ab9ef\" -CardSize Large Update the adaptive card extensions with Instance Id 58108715-185e-4214-8786-01218e7ab9ef in the Viva connections dashboard page. It will update the CardSize to large. PARAMETERS -Identity The instance Id of the Adaptive Card extension present on the Viva connections dashboard page. You can retrieve the value for this parameter by executing Get-PnPVivaConnectionsDashboardACE cmdlet Type: GUID Parameter Sets: (All) Required: True Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Title The Tite of the Adaptive Card extension present on the Viva connections dashboard page. Type: string Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Description The Description of the Adaptive Card extension present on the Viva connections dashboard page. Type: string Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -IconProperty The Icon used by Adaptive Card extension present on the Viva connections dashboard page. Type: string Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -PropertiesJSON The properties of the Adaptive Card extension present on the Viva connections dashboard page. Type: string Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Order The Order of appearance of the Adaptive Card extension present on the Viva connections dashboard page. Type: Int Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -CardSize The size of the Adaptive Card extension present on the Viva connections dashboard page. The available values are Large or Medium . Type: CardSize Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False -Connection Optional connection to be used by the cmdlet. Retrieve the value for this parameter by either specifying -ReturnConnection on Connect-PnPOnline or by executing Get-PnPConnection. Type: PnPConnection Parameter Sets: (All) Required: False Position: Named Default value: None Accept pipeline input: False Accept wildcard characters: False RELATED LINKS Microsoft 365 Patterns and Practices"
  },
  "consent.html": {
    "href": "consent.html",
    "title": "Consent results | PnP PowerShell",
    "keywords": "Consent results var queryString = window.location.search; var urlParams = new URLSearchParams(queryString); var success = urlParams.get('admin_consent') if(success.toLowerCase() === 'true') { document.write(\"You consented successfully for your newly created Azure AD Application. You may close this browser now.\"); } else { document.write(\"You did not consent successfully for your newly created Azure AD Application. Please navigate to your Azure AD, find the application and provide consent there.\"); }"
  },
  "index.html": {
    "href": "index.html",
    "title": "PnP PowerShell | PnP PowerShell",
    "keywords": "PnP PowerShell PnP PowerShell is a cross-platform PowerShell Module providing over 600 cmdlets that work with Microsoft 365 environments and more specifically SharePoint Online, Microsoft Teams, Microsoft Planner and Microsoft Flow. Note This module is a successor of the SharePointPnPPowerShellOnline module, which is now regarded legacy and not maintained anymore. This newer version of the PowerShell module is cross-platform (e.g. it works on Windows, MacOS and Linux) however will only support SharePoint Online. Going forward will only be actively maintaining the cross-platform PnP PowerShell module. Getting up and running It is recommended to use PowerShell 7.x, which can be installed by following these instructions . Most of the cmdlets should work under PowerShell 5.x as well, though. To install PnP PowerShell: Install-Module -Name PnP.PowerShell To install a nightly build of PnP PowerShell: Install-Module -Name PnP.PowerShell -AllowPrerelease -SkipPublisherCheck -AllowClobber To use PnP.PowerShell in a Windows container: docker run -it m365pnp/powershell:1.10.0-nanoserver-1809 To use PnP.PowerShell in a Linux container: docker run -it m365pnp/powershell See the articles section for more information on authentication and configuration. All cmdlets have been documented too. I've found a bug, where do I need to log an issue or create a PR You can create an issue at https://github.com/pnp/powershell/issues , but please consider first if asking a question at https://github.com/pnp/powershell/discussions is more appropriate. We would like to focus the issues on actual bugs whereas PnP PowerShell related questions can be asked in the discussions section. Note As some of the code being PnP PowerShell is actually coming from other PnP repositories, we can move your issue over to that specific repository. You will be notified by email about that. Before you start to work on code change consider starting a discussion in the repository first. It could potentially save you a lot of time if someone is about to submit a change with exactly the same functionality. It will also allow you to discuss a possible change with the maintainers of the repository before you start to work on it. PnP PowerShell roadmap status We have shipped the version now both PnP PowerShell for classic PowerShell and PnP PowerShell for PowerShell 7 Building the source code Make a clone of the repository, navigate to the build folder in the repository and run Build-Debug.ps1. See more details here . Supportability and SLA This library is open-source and community provided library with active community providing support for it. This is not Microsoft provided module so there's no SLA or direct support for this open-source component from Microsoft. Please report any issues using the issues list . Updating the documentation All cmdlet documentation has been moved to the https://github.com/pnp/powershell/tree/dev/documentation folder. If you want to make changes, make sure to follow the format as used in the other files present there. These files follow a specific schema which allows us to generate the correct files. You can also make changes directly to the documention at https://docs.microsoft.com/powershell/sharepoint/sharepoint-pnp/sharepoint-pnp-cmdlets?view=sharepoint-ps . Notice that the documentation there is currently NOT reflecting this library: the documentation applies to the Windows Only version of PnP PowerShell. This project has adopted the Microsoft Open Source Code of Conduct . For more information see the Code of Conduct FAQ or contact opencode@microsoft.com with any additional questions or comments."
  }
}